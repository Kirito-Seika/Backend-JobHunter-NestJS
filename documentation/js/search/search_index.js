var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.356,1,3.201]],["body/controllers/AppController.html",[0,2.296,1,5.419,2,1.889,3,0.121,4,0.121,5,0.063,6,5.293,7,0.455,8,1.316,9,7.211,10,1.567,11,0.01,12,6.018,13,0.552,14,6.018,15,1.113,16,0.227,17,6.018,18,1.143,19,4.656,20,3.556,21,3.957,22,2.614,23,5.155,24,5.293,25,0.121,26,0.356,27,2.53,28,3.4,29,3.008,30,6.018,31,1.054,32,6.018,33,0.008,34,0.008]],["title/modules/AppModule.html",[35,1.155,36,3.201]],["body/modules/AppModule.html",[1,4.782,2,1.755,3,0.08,4,0.08,5,0.042,11,0.01,16,0.242,18,0.759,19,4.131,20,2.36,23,4.99,24,3.513,25,0.08,26,0.236,31,0.7,33,0.006,34,0.006,35,1.725,36,6.614,37,1.735,38,1.794,39,1.924,40,1.924,41,1.794,42,3.109,43,1.924,44,3.513,45,3.513,46,3.513,47,5.291,48,5.291,49,5.291,50,5.291,51,5.291,52,5.291,53,5.291,54,5.291,55,5.291,56,4.99,57,5.291,58,4.99,59,2.694,60,1.924,61,1.924,62,3.995,63,3.109,64,2.161,65,1.254,66,3.995,67,3.196,68,3.995,69,3.196,70,4.919,71,3.995,72,3.513,73,3.995,74,3.995,75,3.995,76,3.995,77,3.995,78,3.995,79,2.075,80,1.53,81,2.075,82,1.156,83,3.995,84,3.513,85,3.995,86,3.995,87,3.995,88,3.995,89,3.995,90,3.995,91,3.513,92,3.513,93,1.735,94,1.794,95,3.995,96,3.196,97,0.961,98,3.995,99,3.995,100,3.995,101,5.593,102,3.995,103,3.196,104,3.995,105,3.995,106,1.627]],["title/injectables/AppService.html",[23,2.826,107,1.013]],["body/injectables/AppService.html",[3,0.13,4,0.13,5,0.067,7,0.488,8,1.373,9,7.381,11,0.01,13,0.592,15,1.193,16,0.178,18,1.226,23,4.99,25,0.13,26,0.382,31,1.131,33,0.009,34,0.009,107,1.789,108,2.549,109,5.677,110,6.455,111,0.929,112,6.455,113,6.455]],["title/controllers/AuthController.html",[0,1.356,114,3.201]],["body/controllers/AuthController.html",[0,1.216,2,1.216,3,0.078,4,0.078,5,0.04,7,0.293,8,0.985,10,1.895,11,0.01,13,0.668,15,1.345,16,0.223,18,0.736,21,3.732,22,1.683,25,0.078,26,0.229,27,1.629,28,2.545,31,1.275,33,0.006,34,0.006,69,3.1,91,3.408,92,3.408,93,1.683,97,1.528,106,2.586,114,4.056,115,3.408,116,1.866,117,3.408,118,5.475,119,5.475,120,6.349,121,6.349,122,5.475,123,3.875,124,2.975,125,5.475,126,3.875,127,3.875,128,1.497,129,0.668,130,0.643,131,1.419,132,2.676,133,1.937,134,3.875,135,5.699,136,3.875,137,3.875,138,5.584,139,3.875,140,6.068,141,3.875,142,5.475,143,3.875,144,3.875,145,3.875,146,6.044,147,3.875,148,5.475,149,3.875,150,3.875,151,3.875,152,4.941,153,3.875,154,3.875,155,2.096,156,3.875,157,2.187,158,6.899,159,3.875,160,5.475,161,3.938,162,3.1,163,1.937,164,2.87,165,3.1,166,3.875,167,2.687,168,2.687,169,1.683,170,3.584,171,2.687,172,2.404,173,3.875,174,3.875,175,3.875,176,2.404,177,3.408,178,3.875,179,3.875,180,3.875,181,6.349,182,3.875,183,3.1,184,3.875,185,3.875,186,3.875,187,3.875,188,3.875,189,3.875,190,1.156,191,3.1,192,1.74,193,3.875,194,3.875,195,3.875,196,3.875,197,3.408,198,3.875,199,2.87,200,3.875,201,3.875,202,3.875,203,3.875]],["title/modules/AuthModule.html",[35,1.155,47,2.996]],["body/modules/AuthModule.html",[2,2.008,3,0.098,4,0.098,5,0.051,11,0.01,16,0.238,18,0.925,19,4.484,20,2.877,25,0.098,26,0.288,33,0.007,34,0.007,35,1.91,37,2.115,38,2.187,39,2.346,40,2.346,41,2.187,42,3.442,43,3.442,47,6.095,56,5.293,58,5.293,59,3.082,60,2.346,61,2.346,63,3.442,70,5.628,72,4.283,84,4.283,96,3.897,97,1.172,103,3.897,114,5.294,161,5.375,162,3.897,204,4.283,205,4.283,206,4.87,207,4.283,208,5.612,209,5.612,210,4.87,211,4.87,212,3.897,213,6.399,214,3.185,215,4.87,216,4.87,217,4.87,218,5.12,219,4.87,220,4.283,221,4.283,222,4.87,223,4.283,224,4.87]],["title/injectables/AuthService.html",[107,1.013,161,2.68]],["body/injectables/AuthService.html",[3,0.059,4,0.059,5,0.031,7,0.223,8,0.806,11,0.01,13,0.653,15,1.002,16,0.208,18,0.56,19,4.209,20,1.742,25,0.059,26,0.175,27,1.884,28,2.813,31,1.248,33,0.005,34,0.005,97,1.875,106,2.207,107,1.05,108,1.164,111,1.122,124,2.494,128,1.245,129,0.725,130,0.535,131,1.18,132,2.535,133,3.025,135,5.097,138,3.941,152,3.959,161,2.779,167,2.045,168,2.045,169,1.281,170,4.022,171,2.045,172,1.829,176,3.362,183,3.585,190,1.668,191,3.585,192,3.297,197,3.941,199,4.484,212,2.359,218,3.585,220,3.941,223,2.593,225,2.593,226,1.262,227,5.419,228,5.419,229,4.481,230,2.949,231,3.87,232,7.124,233,2.949,234,4.481,235,2.949,236,3.941,237,2.949,238,4.481,239,4.766,240,2.949,241,2.359,242,3.941,243,1.848,244,2.949,245,2.949,246,2.949,247,2.779,248,2.045,249,2.949,250,0.876,251,2.184,252,2.949,253,0.9,254,1.474,255,2.593,256,2.184,257,2.593,258,1.37,259,2.949,260,4.481,261,2.949,262,2.949,263,3.319,264,4.481,265,2.341,266,4.481,267,2.949,268,3.274,269,3.941,270,1.096,271,1.832,272,3.87,273,3.87,274,2.977,275,3.426,276,2.882,277,4.766,278,6.053,279,4.481,280,1.825,281,4.481,282,3.941,283,3.585,284,4.481,285,4.481,286,4.481,287,5.419,288,4.481,289,5.419,290,2.593,291,2.949,292,2.593,293,1.37,294,2.593,295,2.949,296,1.742,297,4.481,298,2.949,299,4.481,300,2.949,301,2.949,302,2.949,303,2.949,304,2.949,305,2.529,306,2.012,307,2.359,308,2.593,309,2.949,310,2.949,311,2.593,312,2.949,313,3.585,314,4.481,315,2.593,316,2.593,317,2.359,318,2.359,319,2.949]],["title/controllers/CompaniesController.html",[0,1.356,320,3.201]],["body/controllers/CompaniesController.html",[0,1.287,2,1.287,3,0.083,4,0.083,5,0.043,7,0.31,8,1.026,10,1.935,11,0.01,13,0.682,15,1.374,16,0.213,18,0.779,21,3.542,22,1.782,25,0.083,26,0.243,29,2.051,31,1.302,33,0.006,34,0.006,80,1.572,93,3.072,111,1.254,116,1.976,124,3.169,128,1.528,129,0.682,130,0.657,131,1.45,132,2.711,155,3.542,157,3.217,163,2.051,169,1.782,280,2.667,320,4.222,321,3.608,322,3.608,323,2.321,324,2.844,325,2.475,326,2.475,327,3.608,328,5.032,329,4.103,330,1.907,331,3.288,332,3.608,333,5.699,334,3.082,335,4.56,336,4.103,337,2.649,338,1.842,339,3.283,340,2.992,341,4.103,342,1.907,343,2.545,344,4.103,345,2.545,346,5.579,347,2.845,348,4.103,349,2.316,350,2.424,351,2.559,352,4.283,353,3.608,354,2.845,355,4.56,356,3.039,357,4.103,358,1.976,359,2.545,360,4.103,361,4.56,362,3.283,363,3.283,364,4.103,365,2.424,366,2.424,367,4.103,368,2.684,369,3.283,370,3.608,371,4.103,372,2.424,373,3.608,374,2.424,375,4.103]],["title/modules/CompaniesModule.html",[35,1.155,48,2.996]],["body/modules/CompaniesModule.html",[2,2.22,3,0.115,4,0.115,5,0.059,11,0.01,16,0.229,18,1.082,25,0.115,26,0.337,33,0.008,34,0.008,35,2.056,37,2.475,38,2.559,39,2.745,40,2.745,41,2.559,42,3.706,43,3.706,48,5.928,59,3.408,60,2.745,61,2.745,63,2.745,64,3.083,65,1.788,129,0.523,320,5.7,334,2.183,352,5.793,353,5.012,376,5.012,377,5.012,378,5.012,379,5.699,380,5.699,381,5.241,382,4.56,383,3.217,384,5.012,385,2.475]],["title/injectables/CompaniesService.html",[107,1.013,352,2.826]],["body/injectables/CompaniesService.html",[3,0.069,4,0.069,5,0.036,7,0.258,8,0.899,11,0.01,13,0.664,15,1.28,16,0.216,18,0.648,25,0.069,26,0.202,27,2.101,28,1.586,31,1.267,33,0.006,34,0.006,65,1.071,79,1.773,80,2.265,81,1.773,82,1.711,93,3.247,94,1.533,97,1.882,107,1.171,108,1.348,111,1.173,124,3.045,128,1.488,129,0.686,130,0.64,131,1.411,132,2.454,133,2.955,169,1.482,190,1.374,192,2.922,247,2.117,253,1.987,265,2.21,271,1.58,275,1.706,280,2.035,296,3.493,305,1.927,306,1.533,323,2.035,324,2.17,325,2.17,326,2.17,327,4.395,328,4.53,330,2.323,331,2.748,334,2.265,337,2.748,338,2.244,340,2.691,342,2.323,345,3.1,346,5.316,351,2.655,352,3.269,354,2.367,355,3.998,356,2.528,382,2.731,386,3.002,387,3.413,388,3.674,389,3.413,390,4.997,391,3.413,392,2.948,393,3.413,394,3.413,395,3.413,396,3.413,397,1.927,398,2.528,399,2.117,400,2.016,401,2.016,402,3.413,403,3.413,404,3.413,405,3.413,406,1.706,407,3.413,408,2.232,409,3.413,410,1.533,411,3.667,412,2.117,413,2.117,414,2.117,415,2.117,416,2.117,417,2.117,418,2.117,419,1.533,420,3.1,421,3.1,422,3.413,423,3.1,424,2.117,425,3.1,426,3.413,427,2.117,428,2.117,429,2.117,430,2.117,431,2.117,432,2.117,433,2.117,434,2.117,435,2.952,436,2.016,437,2.016,438,2.117,439,1.586,440,3.1,441,3.1,442,2.016,443,2.117,444,3.1,445,2.016,446,2.117,447,2.117,448,2.117,449,2.117,450,1.269,451,2.117,452,1.533,453,3.1,454,3.413,455,3.1,456,3.413,457,3.413,458,4.997,459,1.308,460,1.586,461,3.413]],["title/classes/Company.html",[26,0.256,334,1.655]],["body/classes/Company.html",[3,0.083,4,0.083,5,0.043,7,0.31,10,2.176,11,0.01,13,0.767,16,0.158,25,0.132,26,0.243,33,0.006,34,0.006,65,1.29,82,1.651,106,3.329,111,1.258,129,0.601,130,0.786,190,0.868,226,1.607,265,2.001,271,1.751,275,3.275,293,3.046,334,2.186,381,3.044,385,2.478,398,3.044,406,3.275,408,4.286,410,2.943,459,2.51,460,3.046,462,0.7,463,3.044,464,3.871,465,3.871,466,3.275,467,5.186,468,5.963,469,4.109,470,3.231,471,4.109,472,3.871,473,4.164,474,4.109,475,4.109,476,4.109,477,4.109,478,2.414,479,4.109,480,4.109,481,4.109,482,4.109,483,4.109,484,5.231,485,2.549,486,3.37,487,2.549,488,3.275,489,3.614]],["title/classes/Company-1.html",[26,0.213,334,1.381,419,1.618]],["body/classes/Company-1.html",[3,0.101,4,0.101,5,0.053,7,0.381,10,1.892,11,0.01,13,0.667,16,0.201,25,0.101,26,0.455,33,0.007,34,0.007,111,1.246,129,0.705,130,0.705,226,1.844,265,2.219,334,3.054,392,2.666,406,3.271,408,4.753,462,0.859,470,2.507,478,1.719,490,5.031,491,3.735,492,3.995,493,5.041,494,5.041,495,5.041,496,4.849,497,4.849,498,1.499,499,4.06,500,1.278,501,2.619,502,2.619,503,1.672,504,2.619,505,3.496,506,2.619,507,4.434,508,2.978,509,3.127,510,3.298,511,4.434,512,2.846,513,3.055,514,4.539,515,1.795,516,1.795,517,1.942,518,5.756,519,2.52,520,2.619,521,4.849,522,4.434,523,2.619,524,4.434,525,3.735,526,4.434,527,2.264]],["title/classes/Company-2.html",[26,0.213,251,2.67,334,1.381]],["body/classes/Company-2.html",[3,0.105,4,0.105,5,0.055,7,0.396,10,1.746,11,0.01,13,0.615,16,0.216,25,0.105,26,0.462,33,0.008,34,0.008,82,1.941,111,1.235,129,0.716,130,0.69,226,1.89,250,1.556,265,2.26,271,1.399,272,2.956,273,2.956,274,2.274,275,2.617,276,3.111,334,3.09,340,1.947,392,2.732,462,0.892,488,2.617,492,3.835,496,4.968,497,4.968,498,1.556,499,4.16,500,1.328,503,1.736,508,3.093,510,3.425,513,2.82,515,1.293,516,1.657,517,1.399,528,4.84,529,3.631,530,5.236,531,5.236,532,4.968,533,2.617,534,3.425,535,2.617,536,2.617,537,3.425,538,3.425,539,4.189,540,3.248,541,3.879,542,4.189,543,3.093,544,4.189,545,4.189,546,4.189,547,4.189,548,1.947,549,2.434,550,4.189]],["title/classes/CreateCompanyDto.html",[26,0.256,328,2.826]],["body/classes/CreateCompanyDto.html",[3,0.107,4,0.107,5,0.056,7,0.402,10,2.043,11,0.01,13,0.72,16,0.187,25,0.107,26,0.401,33,0.008,34,0.008,111,1.227,129,0.684,130,0.694,226,1.91,275,4.052,328,4.433,354,5.622,406,4.052,408,5.302,462,0.907,492,3.649,498,1.582,500,1.35,503,1.765,510,4.433,513,3.135,515,2.047,516,2.047,517,2.215,551,4.259,552,4.033,553,5.322,554,5.322,555,5.322,556,5.322,557,5.322]],["title/classes/CreateFileDto.html",[26,0.256,558,2.996]],["body/classes/CreateFileDto.html",[3,0.138,4,0.138,5,0.071,11,0.009,25,0.138,26,0.405,33,0.009,34,0.009,462,1.167,558,5.477,559,5.074,560,5.48]],["title/classes/CreateJobDto.html",[26,0.256,509,2.68]],["body/classes/CreateJobDto.html",[3,0.084,4,0.084,5,0.044,7,0.317,10,2.185,11,0.01,13,0.77,16,0.183,25,0.084,26,0.423,33,0.007,34,0.007,111,1.227,129,0.655,130,0.753,226,1.631,265,1.281,334,3.042,392,2.909,406,3.745,408,2.745,462,0.715,470,2.736,478,1.974,490,5.536,491,3.109,492,3.69,496,4.288,497,4.288,498,1.247,499,3.59,500,1.064,501,2.18,502,2.18,503,1.392,504,2.18,505,2.91,506,2.18,507,3.691,508,2.479,509,3.59,510,3.786,511,5.091,512,3.741,513,2.786,514,5.197,515,1.914,516,1.914,517,2.07,518,6.282,519,3.312,520,3.442,521,5.552,522,5.091,523,3.442,524,5.091,525,4.909,526,5.091,527,2.975,552,3.584,561,3.691,562,4.196,563,4.196,564,4.196,565,4.196,566,4.196,567,4.196,568,4.196,569,4.196,570,4.196,571,4.196,572,4.196]],["title/classes/CreatePermissionDto.html",[26,0.256,573,2.826]],["body/classes/CreatePermissionDto.html",[3,0.106,4,0.106,5,0.055,7,0.397,10,2.034,11,0.01,13,0.717,16,0.145,25,0.106,26,0.398,33,0.008,34,0.008,35,2.158,111,1.224,129,0.741,130,0.691,226,1.895,462,0.896,492,3.754,500,1.333,513,3.285,515,2.1,516,2.1,517,2.272,552,4.227,573,4.398,574,5.6,575,4.206,576,5.282,577,5.6,578,5.257,579,5.257,580,5.257,581,5.257]],["title/classes/CreateResumeDto.html",[26,0.256,582,2.68]],["body/classes/CreateResumeDto.html",[3,0.102,4,0.102,5,0.053,7,0.385,10,2.132,11,0.01,13,0.751,16,0.202,25,0.102,26,0.39,33,0.007,34,0.007,82,1.906,111,1.179,130,0.724,226,1.856,271,1.951,462,0.868,488,4.094,492,3.394,498,1.513,500,1.291,513,2.769,515,1.907,516,1.907,517,2.063,535,2.545,541,4.88,552,3.563,582,4.086,583,4.924,584,3.531,585,4.314,586,4.314,587,4.724,588,5.923,589,4.529,590,5.793,591,5.091,592,5.091,593,5.793,594,4.478,595,5.091,596,5.091,597,6.587,598,5.091,599,3.008,600,3.008,601,3.158,602,4.478]],["title/classes/CreateRoleDto.html",[26,0.256,603,2.826]],["body/classes/CreateRoleDto.html",[3,0.095,4,0.095,5,0.05,7,0.358,10,1.956,11,0.01,13,0.689,16,0.174,25,0.095,26,0.372,33,0.007,34,0.007,82,1.82,106,2.562,111,1.081,129,0.717,130,0.664,226,1.772,250,2.233,257,5.531,268,4.433,340,1.764,406,3.907,462,0.809,473,3.402,478,2.562,488,3.143,492,3.633,500,1.203,513,3.499,515,2.055,516,2.132,517,2.147,527,3.68,532,4.659,548,2.339,549,2.923,550,5.032,552,4.064,603,4.114,604,5.42,605,3.796,606,4.745,607,4.745,608,5.531,609,4.745,610,4.745,611,4.745,612,6.205,613,3.029,614,4.745,615,4.362,616,4.745,617,4.362,618,6.289]],["title/classes/CreateSubscriberDto.html",[26,0.256,619,2.826]],["body/classes/CreateSubscriberDto.html",[3,0.101,4,0.101,5,0.052,7,0.379,10,1.886,11,0.01,13,0.665,16,0.139,25,0.101,26,0.386,33,0.007,34,0.007,106,2.656,111,1.212,129,0.73,130,0.641,226,1.837,250,2.281,271,2.219,313,5.217,462,0.854,492,3.567,500,1.271,512,4.688,513,3.54,515,2.08,516,2.08,517,2.126,548,3.033,549,3.698,552,3.527,612,4.408,615,3.476,617,4.522,619,4.265,620,5.322,621,4.01,622,5.369,623,5.012,624,5.012,625,5.012,626,4.408,627,5.012,628,3.852,629,5.012,630,6.52]],["title/classes/CreateUserCvDto.html",[26,0.256,631,2.996]],["body/classes/CreateUserCvDto.html",[3,0.114,4,0.114,5,0.059,7,0.428,10,1.997,11,0.01,13,0.704,16,0.212,25,0.114,26,0.417,33,0.008,34,0.008,82,2.039,111,1.014,130,0.678,132,2.519,226,1.985,462,0.965,488,4.012,492,3.275,498,1.683,500,1.436,513,2.38,515,1.74,516,1.74,517,1.883,532,4.194,552,3.062,583,4.742,585,4.532,586,4.532,588,6.117,590,6.197,593,6.197,599,3.345,600,3.345,602,4.979,631,4.886,632,4.979,633,5.661,634,5.661,635,5.661]],["title/classes/CreateUserDto.html",[26,0.256,540,2.68]],["body/classes/CreateUserDto.html",[3,0.089,4,0.089,5,0.046,7,0.335,10,2.163,11,0.01,13,0.762,16,0.202,25,0.089,26,0.433,33,0.007,34,0.007,82,1.739,111,1.229,129,0.67,130,0.749,226,1.694,250,1.787,265,1.354,271,1.822,272,3.85,273,3.85,274,2.961,275,3.408,276,3.387,334,3.086,340,2.235,392,2.978,462,0.756,488,3.004,492,3.398,496,4.453,497,4.453,498,1.318,499,3.729,500,1.124,503,1.471,508,2.62,510,3.932,513,2.527,515,1.485,516,1.806,517,1.185,528,5.494,529,3.075,532,4.453,533,2.216,534,2.901,535,2.216,536,2.216,537,2.901,538,2.901,539,3.548,540,3.729,541,4.453,542,4.809,543,4.028,544,4.809,545,4.809,546,4.809,547,4.809,548,2.235,549,2.794,550,4.809,552,2.399,561,3.9,636,4.435,637,4.435,638,4.435,639,4.435,640,4.435,641,3.9,642,4.435,643,4.435,644,4.435,645,4.435]],["title/controllers/DatabasesController.html",[0,1.356,646,3.201]],["body/controllers/DatabasesController.html",[0,2.051,2,2.051,3,0.131,4,0.131,5,0.068,11,0.01,16,0.212,18,1.241,25,0.131,26,0.387,29,3.267,33,0.009,34,0.009,116,3.149,358,3.149,646,5.694,647,5.749,648,6.537,649,5.34,650,5.749,651,6.537]],["title/modules/DatabasesModule.html",[35,1.155,49,2.996]],["body/modules/DatabasesModule.html",[2,2.138,3,0.108,4,0.108,5,0.056,11,0.01,16,0.236,18,1.019,25,0.108,26,0.318,33,0.008,34,0.008,35,2,37,2.331,38,2.41,39,2.585,40,2.585,41,2.41,42,3.605,43,2.585,49,5.921,59,3.281,60,2.585,61,2.585,63,2.585,64,2.903,65,1.684,129,0.687,132,1.684,231,4.688,248,3.722,276,2.256,383,3.03,385,3.251,613,2.585,646,5.545,649,5.432,650,4.72,652,4.72,653,4.72,654,5.367,655,5.367,656,4.725,657,3.976,658,4.725,659,3.722,660,4.456,661,3.329,662,4.72,663,4.294,664,3.976]],["title/injectables/DatabasesService.html",[107,1.013,649,2.826]],["body/injectables/DatabasesService.html",[3,0.073,4,0.073,5,0.038,7,0.275,8,0.941,11,0.01,13,0.562,15,0.672,16,0.22,18,0.69,19,4.502,20,2.147,25,0.073,26,0.215,27,2.199,28,3.625,29,3.062,33,0.006,34,0.006,65,1.14,79,1.888,80,1.392,81,1.888,82,1.052,97,1.474,106,2.13,107,1.226,108,1.435,128,0.747,129,0.715,130,0.321,131,0.709,132,1.641,176,2.254,190,1.609,192,3.567,226,1.474,231,3.784,243,1.24,248,2.52,253,1.11,254,1.817,258,1.689,263,2.692,268,3.842,271,1.638,272,3.459,273,3.459,274,2.661,275,3.062,276,3.109,282,3.196,306,2.349,323,2.496,388,4.552,397,2.052,406,2.614,515,0.898,527,2.349,543,3.62,613,1.751,649,3.421,657,2.692,659,2.52,661,2.254,665,3.196,666,6.702,667,7.395,668,3.196,669,5.389,670,4.903,671,6.127,672,5.23,673,4.6,674,3.634,675,5.23,676,2.52,677,2.52,678,2.377,679,4.539,680,2.908,681,4.539,682,5.23,683,1.275,684,3.634,685,3.196,686,2.908,687,3.634,688,3.634,689,3.634,690,6.127,691,3.634,692,6.127,693,3.634,694,6.127,695,3.634,696,3.696,697,3.634,698,3.634,699,3.634,700,3.634,701,4.6,702,3.634,703,4.6,704,3.634,705,3.634,706,3.634,707,2.692,708,2.692,709,2.908,710,1.392,711,3.196,712,3.196,713,3.634,714,4.185,715,3.634,716,2.908,717,6.127,718,6.127,719,3.634,720,6.127,721,3.62,722,6.127,723,5.23,724,3.634,725,2.908,726,3.634,727,3.634,728,3.634,729,3.634,730,3.196,731,3.634,732,3.196,733,3.634,734,2.692]],["title/classes/File.html",[5,0.045,26,0.256]],["body/classes/File.html",[3,0.138,4,0.138,5,0.087,11,0.009,25,0.138,26,0.407,33,0.009,34,0.009,462,1.17,735,6.04]],["title/controllers/FilesController.html",[0,1.356,736,3.201]],["body/controllers/FilesController.html",[0,1.384,2,1.384,3,0.089,4,0.089,5,0.076,7,0.333,8,1.078,10,1.985,11,0.01,13,0.699,15,1.41,16,0.211,18,0.838,21,3.24,22,1.916,25,0.089,26,0.261,29,2.205,31,1.336,33,0.007,34,0.007,80,1.69,111,1.195,116,2.125,128,1.5,129,0.669,130,0.645,131,1.423,155,2.386,157,3.382,163,2.205,172,2.737,177,3.88,280,2.44,306,1.981,324,3.168,325,2.601,326,2.601,338,1.981,340,2.925,342,2.051,345,2.737,349,2.491,350,2.606,358,2.125,365,3.539,366,2.606,368,3.918,372,3.539,374,2.606,736,4.437,737,3.88,738,3.53,739,6.801,740,4.412,741,4.412,742,4.412,743,5.677,744,4.412,745,4.412,746,6.801,747,4.412,748,5.268,749,4.412,750,4.412,751,5.268,752,4.412,753,5.99,754,5.99,755,4.412,756,4.412,757,3.268,758,4.448,759,3.88,760,3.268,761,3.53,762,4.412,763,4.412,764,4.412,765,4.412,766,4.412,767,4.412,768,4.412,769,4.412,770,4.412,771,5.99,772,4.412,773,4.412,774,4.412,775,4.412,776,4.412,777,4.412,778,3.53,779,4.412,780,4.412]],["title/modules/FilesModule.html",[35,1.155,50,2.996]],["body/modules/FilesModule.html",[2,2.26,3,0.118,4,0.118,5,0.061,11,0.01,16,0.231,18,1.114,25,0.118,26,0.347,33,0.008,34,0.008,35,2.083,37,2.548,38,2.635,39,2.826,40,2.826,41,2.635,42,3.754,43,2.826,50,5.889,59,3.469,60,2.826,61,2.826,63,2.826,172,3.64,736,5.774,757,4.347,758,5.554,759,5.16,781,5.16,782,5.16,783,5.868,784,5.868,785,5.868,786,5.336,787,5.868,788,5.868,789,5.868]],["title/injectables/FilesService.html",[107,1.013,758,2.826]],["body/injectables/FilesService.html",[3,0.1,4,0.1,5,0.083,7,0.376,8,1.167,11,0.01,13,0.728,15,1.532,16,0.2,18,0.944,25,0.1,26,0.294,31,1.39,33,0.007,34,0.007,107,1.521,108,1.964,111,1.142,128,1.573,129,0.702,130,0.676,131,1.492,280,2.642,306,2.233,323,2.642,324,3.323,325,2.817,326,2.817,338,2.913,340,3.027,342,3.015,345,4.024,392,3.462,558,5.504,559,3.684,738,3.979,743,5.749,758,4.243,760,3.684,761,5.19,790,4.374,791,6.487,792,4.973,793,4.973,794,4.973,795,4.973,796,4.973,797,7.937,798,4.973,799,4.973,800,4.973]],["title/controllers/HealthController.html",[0,1.356,801,3.201]],["body/controllers/HealthController.html",[0,1.893,2,1.893,3,0.121,4,0.121,5,0.063,7,0.456,8,1.318,10,1.57,11,0.01,13,0.553,15,1.115,16,0.218,18,1.145,21,3.963,22,2.62,25,0.121,26,0.357,27,2.536,28,3.405,31,1.057,33,0.008,34,0.008,116,2.905,801,5.427,802,5.305,803,7.326,804,6.565,805,6.032,806,6.032,807,7.326,808,7.326,809,7.326,810,4.827,811,6.032,812,6.032,813,6.032,814,6.032]],["title/modules/HealthModule.html",[35,1.155,51,2.996]],["body/modules/HealthModule.html",[2,2.398,3,0.13,4,0.13,5,0.068,11,0.01,16,0.225,18,1.229,25,0.13,26,0.383,33,0.009,34,0.009,35,2.042,37,2.811,51,5.299,63,3.117,801,6.023,810,5.178,815,6.471,816,7.641,817,6.471]],["title/classes/History.html",[26,0.256,818,2.68]],["body/classes/History.html",[3,0.104,4,0.104,5,0.054,7,0.391,10,1.915,11,0.01,13,0.675,16,0.222,25,0.104,26,0.476,33,0.008,34,0.008,82,1.497,111,1.059,130,0.727,226,1.875,250,1.538,265,1.58,271,1.382,459,3.205,462,0.882,466,3.677,470,2.549,492,3.98,499,4.564,500,1.312,508,3.056,513,2.798,515,1.278,516,1.644,517,1.382,548,1.924,549,2.404,582,3.209,583,3.056,584,3.587,587,4.346,594,4.55,615,3.587,617,4.615,622,4.93,818,5.19,819,5.386,820,5.173,821,5.173,822,5.173,823,2.92,824,2.687,825,3.457,826,3.832,827,4.139,828,3.384,829,2.404,830,4.139]],["title/interfaces/IUser.html",[124,1.655,831,2.826]],["body/interfaces/IUser.html",[3,0.108,4,0.108,5,0.056,7,0.405,11,0.01,25,0.108,33,0.008,34,0.008,35,1.434,111,1.297,124,2.61,129,0.762,130,0.78,131,1.329,226,1.92,265,2.536,268,4.259,271,2.104,272,4.445,273,4.445,274,3.42,275,3.935,276,3.31,392,3.383,472,4.652,576,3.51,831,3.51,832,4.294,833,4.72]],["title/classes/IsActiveValidConstraint.html",[26,0.256,501,2.245]],["body/classes/IsActiveValidConstraint.html",[3,0.055,4,0.055,5,0.028,7,0.206,8,0.759,11,0.01,13,0.387,15,0.78,16,0.075,25,0.134,26,0.41,31,1.515,33,0.005,34,0.005,97,1.599,111,1.081,128,0.868,129,0.473,130,0.373,131,0.823,190,1.403,243,3.007,250,2.185,253,1.919,270,2.843,439,2.399,462,0.465,470,2.546,478,2.507,498,2.128,500,0.692,501,2.192,502,1.417,503,0.904,504,1.417,506,1.417,515,1.917,516,1.917,517,1.776,519,2.904,520,1.417,523,2.192,527,2.609,548,1.014,549,2.399,628,3.713,683,2.432,696,3.141,710,2.546,834,1.611,835,2.828,836,1.667,837,2.737,838,3.224,839,2.727,840,2.902,841,2.737,842,2.727,843,2.737,844,2.803,845,2.682,846,1.895,847,3.605,848,2.618,849,1.719,850,2.618,851,2.707,852,1.692,853,2.482,854,1.268,855,2.618,856,2.618,857,2.103,858,2.318,859,1.692,860,1.692,861,1.611,862,1.54,863,1.54,864,1.54,865,1.077,866,2.663,867,3.605,868,1.54,869,3.605,870,3.202,871,2.618,872,3.202]],["title/classes/IsAddressValidConstraint.html",[26,0.256,533,2.16]],["body/classes/IsAddressValidConstraint.html",[3,0.07,4,0.07,5,0.036,7,0.263,8,0.912,11,0.01,13,0.465,15,0.937,16,0.096,25,0.12,26,0.389,31,1.469,33,0.006,34,0.006,94,2.275,97,1.438,128,1.042,129,0.548,130,0.448,131,0.988,190,1.473,243,2.955,250,1.034,253,2.131,254,2.532,258,2.355,270,2.709,274,1.51,450,2.796,452,2.275,462,0.593,498,1.952,500,0.882,503,1.153,515,1.857,516,2.02,517,1.755,533,2.532,536,1.738,548,2.222,683,2.304,710,3.134,721,2.993,835,2.756,836,2.001,837,2.593,838,3.194,840,2.877,841,2.593,843,2.593,844,2.716,845,2.556,846,2.948,849,1.416,851,2.434,853,2.001,857,2.434,858,2.684,865,2.001,866,1.293,873,2.054,874,3.478,875,1.807,876,4.112,877,3.143,878,4.073,879,2.993,880,4.073,881,3.143,882,3.143,883,3.143,884,3.143,885,3.478,886,3.143,887,3.143,888,2.157,889,3.143,890,2.157,891,2.157,892,2.157,893,3.143,894,2.157,895,2.993,896,3.143,897,2.157,898,2.157,899,2.157,900,2.054,901,2.157,902,1.807,903,2.157,904,2.157]],["title/classes/IsAgeValidConstraint.html",[26,0.256,534,2.826]],["body/classes/IsAgeValidConstraint.html",[3,0.072,4,0.072,5,0.037,7,0.269,8,0.928,11,0.01,13,0.473,15,0.953,16,0.099,25,0.122,26,0.393,31,1.474,33,0.006,34,0.006,94,1.6,97,1.458,128,1.06,129,0.556,130,0.456,131,1.006,190,1.488,243,2.963,250,1.533,253,2.152,254,1.781,258,1.657,270,2.732,274,1.548,450,2.254,452,1.6,462,0.607,478,1.216,498,1.974,500,0.904,503,1.182,515,1.815,516,1.916,517,1.775,533,1.781,534,2.331,536,1.781,548,2.254,683,2.33,696,1.781,710,2.814,721,3.047,835,2.783,836,2.037,837,2.623,838,3.211,840,2.901,841,2.623,843,2.623,844,2.736,845,2.578,846,2.982,849,1.452,851,2.468,853,2.623,854,1.657,857,2.101,858,2.316,865,1.407,866,1.325,873,2.106,876,3.421,877,2.211,878,3.759,879,2.106,880,3.199,881,2.211,882,2.211,883,2.211,884,2.211,886,3.199,887,3.199,888,2.211,889,3.759,890,4.371,891,3.759,892,2.211,893,3.199,894,2.211,895,3.047,896,3.199,897,2.211,898,2.211,899,2.211,900,2.106,901,2.211,902,1.851,903,2.211,904,2.211,905,3.564,906,3.564,907,3.564,908,3.564]],["title/classes/IsCompanyIdValidConstraint.html",[26,0.256,599,2.553]],["body/classes/IsCompanyIdValidConstraint.html",[3,0.07,4,0.07,5,0.037,7,0.265,8,0.916,11,0.01,13,0.467,15,0.941,16,0.141,25,0.132,26,0.414,31,1.527,33,0.006,34,0.006,82,1.473,97,1.585,128,1.047,129,0.467,130,0.45,131,0.993,190,1.541,243,2.793,250,2.34,253,1.069,258,1.627,270,1.893,271,1.951,419,1.572,450,1.302,462,0.597,478,2.246,498,2.17,500,0.888,515,1.804,516,1.861,517,1.87,535,1.75,585,4.134,586,3.544,589,3.721,599,3.008,600,2.068,601,2.172,683,2.455,710,2.298,835,2.883,836,2.01,837,2.763,838,3.265,840,2.976,841,2.763,843,2.763,844,2.986,845,1.786,849,2.85,851,2.683,853,2.883,854,3.252,857,2.074,865,2.01,866,2.602,875,1.819,902,3.116,909,2.428,910,3.501,911,4.879,912,3.501,913,3.772,914,2.594,915,3.772,916,3.772,917,3.772,918,2.594,919,3.772,920,3.772,921,3.531,922,2.594,923,2.594,924,2.594,925,2.594,926,2.428,927,2.428,928,2.594,929,2.428,930,2.594,931,2.594,932,4.444]],["title/classes/IsEmailValidConstraint.html",[26,0.256,535,2.16]],["body/classes/IsEmailValidConstraint.html",[3,0.068,4,0.068,5,0.035,7,0.257,8,0.897,11,0.01,13,0.457,15,0.921,16,0.138,25,0.131,26,0.409,31,1.523,33,0.006,34,0.006,82,1.442,97,1.563,128,1.025,129,0.457,130,0.44,131,0.972,190,1.526,243,2.777,250,2.276,253,1.522,258,2.316,270,1.853,271,2.151,419,1.527,450,1.853,462,0.579,478,2.012,498,2.148,500,0.862,515,1.844,516,1.93,517,1.848,535,2.49,585,3.485,586,3.485,589,3.659,599,2.008,600,2.008,601,2.109,683,2.426,710,2.768,835,2.854,836,1.968,837,2.731,838,3.247,840,2.948,841,2.731,843,2.731,844,2.97,845,1.748,849,2.817,851,2.646,853,2.948,854,3.214,857,2.646,865,2.565,866,2.571,875,2.588,902,3.064,909,2.358,911,4.37,913,3.691,914,2.518,915,3.691,916,3.691,917,3.691,918,2.518,919,3.691,920,3.691,921,4.09,922,2.518,923,2.518,924,2.518,925,2.518,926,3.455,927,3.455,928,2.518,929,3.455,930,2.518,931,2.518,932,4.37,933,3.4,934,3.4]],["title/classes/IsEmailValidConstraint-1.html",[26,0.213,419,1.618,535,1.801]],["body/classes/IsEmailValidConstraint-1.html",[3,0.071,4,0.071,5,0.037,7,0.266,8,0.92,11,0.01,13,0.469,15,0.945,16,0.097,25,0.121,26,0.391,31,1.472,33,0.006,34,0.006,94,1.581,97,1.448,128,1.051,129,0.552,130,0.452,131,0.997,190,1.48,243,2.959,250,1.519,253,2.142,254,1.759,258,2.376,270,2.72,271,1.874,274,1.529,450,2.456,452,1.581,462,0.6,498,1.963,500,0.893,503,1.167,515,1.864,516,1.977,517,1.765,533,1.759,535,1.759,536,1.759,548,1.901,683,2.317,710,3.019,721,3.02,835,2.769,836,2.018,837,2.608,838,3.203,840,2.889,841,2.608,843,2.608,844,2.726,845,2.567,846,2.965,849,1.434,851,2.451,853,2.376,854,1.636,857,2.69,858,2.295,865,2.376,866,1.901,873,2.08,875,1.829,876,3.397,877,2.184,878,3.733,879,2.08,880,3.171,881,2.184,882,2.184,883,2.184,884,2.184,886,3.171,887,3.171,888,2.184,889,3.171,890,2.184,891,2.184,892,2.184,893,3.171,894,2.184,895,3.02,896,3.171,897,2.184,898,2.184,899,2.184,900,2.08,901,2.184,902,1.829,903,2.184,904,2.184,921,2.441,926,2.441,927,2.441,929,2.441,935,3.52,936,3.52]],["title/classes/IsEndDateValidConstraint.html",[26,0.256,502,2.245]],["body/classes/IsEndDateValidConstraint.html",[3,0.055,4,0.055,5,0.028,7,0.206,8,0.759,11,0.01,13,0.387,15,0.78,16,0.075,25,0.134,26,0.41,31,1.515,33,0.005,34,0.005,97,1.599,111,1.081,128,0.868,129,0.473,130,0.373,131,0.823,190,1.403,243,3.007,250,2.185,253,1.919,270,2.843,439,2.399,462,0.465,470,2.546,478,2.507,498,2.128,500,0.692,501,1.417,502,2.192,503,0.904,504,1.417,506,1.417,515,1.917,516,1.917,517,1.776,519,2.904,520,1.417,523,2.192,527,2.609,548,1.014,549,2.399,628,3.713,683,2.432,696,3.141,710,2.546,834,1.611,835,2.828,836,1.667,837,2.737,838,3.224,840,2.902,841,2.737,843,2.737,844,2.803,845,2.682,846,1.895,847,3.605,848,2.618,849,1.719,850,2.618,851,2.707,852,1.692,853,2.482,854,1.268,855,2.618,856,2.618,857,2.103,858,2.318,859,1.692,860,1.692,861,1.611,862,1.54,863,1.54,864,1.54,865,1.077,866,2.663,867,3.605,868,1.54,869,3.605,870,3.202,871,2.618,872,3.202,937,2.727,938,2.727]],["title/classes/IsGenderValidConstraint.html",[26,0.256,536,2.16]],["body/classes/IsGenderValidConstraint.html",[3,0.073,4,0.073,5,0.038,7,0.273,8,0.936,11,0.01,13,0.477,15,0.962,16,0.1,25,0.123,26,0.395,31,1.477,33,0.006,34,0.006,94,1.621,97,1.469,128,1.07,129,0.56,130,0.46,131,1.015,190,1.495,243,2.967,250,1.547,253,2.04,254,1.804,258,1.677,270,2.744,274,1.567,450,2.27,452,1.621,462,0.615,498,1.986,500,0.915,503,1.197,515,1.878,516,1.923,517,1.785,533,1.804,536,2.601,548,1.935,683,2.344,710,2.827,721,3.606,835,2.797,836,2.055,837,2.638,838,3.219,840,2.914,841,2.638,843,2.638,844,2.746,845,2.589,846,3,849,1.47,851,2.486,853,1.425,857,2.12,858,2.337,865,1.425,866,1.935,873,2.132,876,3.446,877,2.239,878,3.786,879,2.132,880,3.228,881,2.239,882,2.239,883,2.239,884,2.239,886,3.228,887,3.228,888,2.239,889,3.228,890,2.239,891,2.239,892,2.239,893,3.786,894,2.239,895,3.947,896,4.144,897,3.228,898,3.228,899,3.228,900,3.074,901,2.239,902,1.875,903,2.239,904,2.239,939,3.609,940,3.609]],["title/classes/IsJobIdValidConstraint.html",[26,0.256,600,2.553]],["body/classes/IsJobIdValidConstraint.html",[3,0.07,4,0.07,5,0.037,7,0.265,8,0.916,11,0.01,13,0.467,15,0.941,16,0.141,25,0.132,26,0.414,31,1.527,33,0.006,34,0.006,82,1.473,97,1.585,128,1.047,129,0.467,130,0.45,131,0.993,190,1.541,243,2.793,250,2.34,253,1.069,258,1.627,270,1.893,271,1.951,419,1.572,450,1.302,462,0.597,478,2.246,498,2.17,500,0.888,515,1.804,516,1.861,517,1.87,535,1.75,585,3.544,586,4.134,589,3.721,599,2.068,600,3.008,601,2.172,683,2.455,710,2.298,835,2.883,836,2.01,837,2.763,838,3.265,840,2.976,841,2.763,843,2.763,844,2.986,845,1.786,849,2.85,851,2.683,853,2.883,854,3.252,857,2.074,865,2.01,866,2.602,875,1.819,902,3.116,909,2.428,911,4.879,913,3.772,914,2.594,915,3.772,916,3.772,917,3.772,918,2.594,919,3.772,920,3.772,921,3.531,922,2.594,923,2.594,924,2.594,925,2.594,926,2.428,927,2.428,928,2.594,929,2.428,930,2.594,931,2.594,932,4.444,941,3.501,942,3.501]],["title/classes/IsNameValidConstraint.html",[26,0.256,503,1.433]],["body/classes/IsNameValidConstraint.html",[3,0.108,4,0.108,5,0.056,7,0.405,8,1.226,11,0.01,13,0.625,15,1.26,16,0.148,25,0.108,26,0.403,31,0.94,33,0.008,34,0.008,97,1.291,128,1.401,129,0.687,130,0.602,131,1.329,243,2.685,250,1.595,270,1.996,334,2.056,450,2.534,462,0.915,498,2.225,500,1.361,503,2.259,515,1.683,516,1.683,517,1.434,683,2.391,710,2.056,835,2.956,836,2.69,837,2.119,838,3.28,840,3.109,841,2.69,843,2.69,844,2.46,845,1.883,846,2.41,853,2.69,862,3.03,863,3.03,864,3.03,865,2.119,866,1.996,875,2.788,876,3.03,943,4.72,944,5.367,945,6.3,946,5.992,947,6.813,948,3.976,949,5.367]],["title/classes/IsNameValidConstraint-1.html",[26,0.213,419,1.618,503,1.195]],["body/classes/IsNameValidConstraint-1.html",[3,0.053,4,0.053,5,0.028,7,0.2,8,0.742,11,0.01,13,0.378,15,0.762,16,0.073,25,0.132,26,0.406,31,1.51,33,0.005,34,0.005,97,1.58,111,1.048,128,0.848,129,0.464,130,0.364,131,0.804,190,1.386,243,3,250,2.213,253,1.892,270,2.821,439,2.354,450,1.533,462,0.451,470,2.515,478,2.418,498,2.107,500,0.671,501,1.375,502,1.375,503,1.367,504,1.375,506,1.375,515,1.952,516,1.952,517,1.832,519,2.858,520,1.375,523,2.141,527,2.567,548,0.984,549,2.354,628,3.661,683,2.405,696,3.097,710,2.626,834,1.563,835,2.799,836,1.628,837,2.707,838,3.207,840,2.876,841,2.707,843,2.707,844,2.783,845,2.661,846,1.851,847,3.547,848,2.557,849,1.679,850,2.557,851,2.674,852,1.641,853,2.707,854,1.23,855,2.557,856,2.557,857,2.063,858,2.274,859,1.641,860,1.641,861,1.563,862,2.327,863,2.327,864,2.327,865,1.628,866,2.708,867,3.547,868,1.494,869,3.547,870,3.141,871,2.557,872,3.141,875,1.375,876,1.494,945,4.575,948,1.96,950,2.646,951,2.97,952,2.646]],["title/classes/IsNameValidConstraint-2.html",[26,0.213,251,2.67,503,1.195]],["body/classes/IsNameValidConstraint-2.html",[3,0.072,4,0.072,5,0.037,7,0.269,8,0.928,11,0.01,13,0.473,15,0.953,16,0.099,25,0.122,26,0.393,31,1.474,33,0.006,34,0.006,94,1.6,97,1.458,128,1.06,129,0.556,130,0.456,131,1.006,190,1.488,243,2.963,250,1.533,253,2.028,254,1.781,258,1.657,270,2.732,274,1.548,450,2.621,452,1.6,462,0.607,498,1.974,500,0.904,503,1.71,515,1.871,516,1.953,517,1.775,533,1.781,536,1.781,548,1.918,683,2.33,710,2.902,721,3.047,835,2.783,836,2.037,837,2.623,838,3.211,840,2.901,841,2.623,843,2.623,844,2.736,845,2.578,846,2.982,849,1.452,851,2.468,853,2.393,857,2.101,858,2.316,862,2.012,863,2.012,864,2.012,865,2.037,866,1.918,873,2.106,875,1.851,876,3.749,877,2.211,878,3.759,879,2.106,880,3.199,881,2.211,882,2.211,883,2.211,884,2.211,886,3.199,887,3.199,888,2.211,889,3.199,890,2.211,891,2.211,892,2.211,893,3.199,894,2.211,895,3.047,896,3.199,897,2.211,898,2.211,899,2.211,900,2.106,901,2.211,902,1.851,903,2.211,904,2.211,945,5.314,948,2.64,953,3.564,954,3.564]],["title/classes/IsPasswordValidConstraint.html",[26,0.256,537,2.826]],["body/classes/IsPasswordValidConstraint.html",[3,0.07,4,0.07,5,0.036,7,0.263,8,0.913,11,0.01,13,0.466,15,0.938,16,0.096,25,0.12,26,0.389,31,1.469,33,0.006,34,0.006,94,1.566,97,1.44,128,1.044,129,0.549,130,0.449,131,0.99,190,1.475,243,2.956,250,1.509,253,2.008,254,1.743,258,1.621,270,2.711,274,1.514,450,2.711,452,1.566,462,0.594,478,1.189,498,1.954,500,0.884,503,1.156,515,1.942,516,2.021,517,1.757,533,1.743,536,1.743,537,2.281,548,1.888,683,2.307,710,2.883,721,2.999,835,2.759,836,2.005,837,2.596,838,3.196,840,2.879,841,2.596,843,2.596,844,2.718,845,2.558,846,2.952,849,1.42,851,2.438,853,2.005,857,2.678,858,2.279,865,2.005,866,1.888,873,2.06,875,1.811,876,3.944,877,2.163,878,3.713,879,2.06,880,3.713,881,2.163,882,2.163,883,2.163,884,2.163,886,3.149,887,3.149,888,2.163,889,3.149,890,2.163,891,2.163,892,2.163,893,3.149,894,2.163,895,2.999,896,3.149,897,2.163,898,2.163,899,2.163,900,2.06,901,2.163,902,1.811,903,2.163,904,2.163,948,2.583,955,3.487,956,6.986,957,6.986,958,3.487,959,3.067,960,3.487]],["title/classes/IsPhoneValidConstraint.html",[26,0.256,538,2.826]],["body/classes/IsPhoneValidConstraint.html",[3,0.071,4,0.071,5,0.037,7,0.267,8,0.923,11,0.01,13,0.471,15,0.949,16,0.098,25,0.121,26,0.392,31,1.473,33,0.006,34,0.006,94,2.304,97,1.453,128,1.055,129,0.554,130,0.454,131,1.001,190,1.484,243,2.961,250,1.052,253,2.365,254,1.769,258,1.645,270,2.725,274,1.537,450,2.725,452,1.59,462,0.603,478,1.207,498,1.968,500,0.898,503,1.174,515,1.81,516,1.98,517,1.769,533,1.769,536,1.769,538,2.315,548,1.908,683,2.323,710,2.896,721,3.032,835,2.775,836,2.026,837,2.614,838,3.206,840,2.894,841,2.614,843,2.614,844,2.73,845,2.572,846,2.973,849,1.442,851,2.459,853,2.026,857,2.459,858,2.711,865,1.398,866,1.316,873,2.091,875,1.839,876,3.968,877,2.196,878,3.745,879,2.091,880,3.183,881,2.196,882,2.196,883,2.196,884,2.196,886,4.36,887,4.36,888,2.196,889,3.183,890,2.196,891,2.196,892,2.196,893,3.183,894,2.196,895,3.032,896,3.183,897,2.196,898,2.196,899,2.196,900,2.091,901,2.196,902,1.839,903,2.196,904,2.196,961,3.54,962,3.54]],["title/classes/IsQuantityValidConstraint.html",[26,0.256,868,2.439]],["body/classes/IsQuantityValidConstraint.html",[3,0.055,4,0.055,5,0.028,7,0.206,8,0.759,11,0.01,13,0.387,15,0.78,16,0.075,25,0.134,26,0.41,31,1.515,33,0.005,34,0.005,97,1.599,111,1.081,128,0.868,129,0.473,130,0.373,131,0.823,190,1.403,243,3.007,250,2.185,253,1.919,270,2.843,439,2.399,462,0.465,470,2.546,478,2.507,498,2.128,500,0.692,501,1.417,502,1.417,503,0.904,504,1.417,506,1.417,515,1.917,516,1.917,517,1.776,519,2.904,520,1.417,523,2.192,527,2.609,548,1.014,549,2.399,628,3.713,683,2.432,696,3.141,710,2.546,834,1.611,835,2.828,836,1.667,837,2.737,838,3.224,840,2.902,841,2.737,843,2.737,844,2.803,845,2.682,846,1.895,847,3.605,848,2.618,849,1.719,850,2.618,851,2.707,852,1.692,853,2.482,854,1.268,855,2.618,856,2.618,857,2.103,858,2.318,859,1.692,860,1.692,861,1.611,862,1.54,863,1.54,864,1.54,865,1.077,866,2.663,867,3.605,868,2.383,869,3.605,870,3.202,871,2.618,872,3.202,963,2.727,964,2.727]],["title/classes/IsSalaryValidConstraint.html",[26,0.256,504,2.245]],["body/classes/IsSalaryValidConstraint.html",[3,0.055,4,0.055,5,0.028,7,0.206,8,0.759,11,0.01,13,0.387,15,0.78,16,0.075,25,0.134,26,0.41,31,1.515,33,0.005,34,0.005,97,1.599,111,1.081,128,0.868,129,0.473,130,0.373,131,0.823,190,1.403,243,3.007,250,2.185,253,1.919,270,2.843,439,2.399,462,0.465,470,2.546,478,2.507,498,2.128,500,0.692,501,1.417,502,1.417,503,0.904,504,2.192,506,1.417,515,1.917,516,1.917,517,1.776,519,2.904,520,1.417,523,2.192,527,2.609,548,1.014,549,2.399,628,3.713,683,2.432,696,3.141,710,2.546,834,1.611,835,2.828,836,1.667,837,2.737,838,3.224,840,2.902,841,2.737,843,2.737,844,2.803,845,2.682,846,1.895,847,3.605,848,2.618,849,1.719,850,2.618,851,2.707,852,1.692,853,2.482,854,1.268,855,2.618,856,2.618,857,2.103,858,2.318,859,1.692,860,1.692,861,1.611,862,1.54,863,1.54,864,1.54,865,1.077,866,2.663,867,3.605,868,1.54,869,3.605,870,3.202,871,2.618,872,3.202,965,2.727,966,2.727]],["title/classes/IsSkillValidConstraint.html",[26,0.256,505,2.996]],["body/classes/IsSkillValidConstraint.html",[3,0.055,4,0.055,5,0.028,7,0.206,8,0.759,11,0.01,13,0.387,15,0.78,16,0.075,25,0.134,26,0.41,31,1.515,33,0.005,34,0.005,97,1.599,111,1.081,128,0.868,129,0.473,130,0.373,131,0.823,190,1.403,243,3.007,250,2.185,253,1.919,270,2.843,439,2.399,462,0.465,470,2.546,478,2.507,498,2.128,500,0.692,501,1.417,502,1.417,503,0.904,504,1.417,505,1.891,506,1.417,515,1.917,516,1.917,517,1.776,519,2.904,520,1.417,523,2.192,527,2.609,548,1.014,549,2.399,628,3.713,683,2.432,696,3.141,710,2.546,834,1.611,835,2.828,836,1.667,837,2.737,838,3.224,840,2.902,841,2.737,843,2.737,844,2.803,845,2.682,846,1.895,847,3.605,848,2.618,849,1.719,850,2.618,851,2.707,852,1.692,853,2.482,854,1.268,855,2.618,856,2.618,857,2.103,858,2.318,859,1.692,860,1.692,861,1.611,862,1.54,863,1.54,864,1.54,865,1.077,866,2.663,867,3.605,868,1.54,869,3.605,870,3.202,871,2.618,872,3.202,967,2.727,968,2.727]],["title/classes/IsStartDateValidConstraint.html",[26,0.256,506,2.245]],["body/classes/IsStartDateValidConstraint.html",[3,0.055,4,0.055,5,0.028,7,0.206,8,0.759,11,0.01,13,0.387,15,0.78,16,0.075,25,0.134,26,0.41,31,1.515,33,0.005,34,0.005,97,1.599,111,1.081,128,0.868,129,0.473,130,0.373,131,0.823,190,1.403,243,3.007,250,2.185,253,1.919,270,2.843,439,2.399,462,0.465,470,2.546,478,2.507,498,2.128,500,0.692,501,1.417,502,1.417,503,0.904,504,1.417,506,2.192,515,1.917,516,1.917,517,1.776,519,2.904,520,1.417,523,2.192,527,2.609,548,1.014,549,2.399,628,3.713,683,2.432,696,3.141,710,2.546,834,1.611,835,2.828,836,1.667,837,2.737,838,3.224,840,2.902,841,2.737,843,2.737,844,2.803,845,2.682,846,1.895,847,3.605,848,2.618,849,1.719,850,2.618,851,2.707,852,1.692,853,2.482,854,1.268,855,2.618,856,2.618,857,2.103,858,2.318,859,1.692,860,1.692,861,1.611,862,1.54,863,1.54,864,1.54,865,1.077,866,2.663,867,3.605,868,1.54,869,3.605,870,3.202,871,2.618,872,3.202,969,2.727,970,2.727]],["title/classes/IsUserIdValidConstraint.html",[26,0.256,601,2.68]],["body/classes/IsUserIdValidConstraint.html",[3,0.07,4,0.07,5,0.037,7,0.265,8,0.916,11,0.01,13,0.467,15,0.941,16,0.141,25,0.132,26,0.414,31,1.527,33,0.006,34,0.006,82,1.473,97,1.585,128,1.047,129,0.467,130,0.45,131,0.993,190,1.541,243,2.793,250,2.34,253,1.069,258,1.627,270,1.893,271,1.951,419,1.572,450,1.302,462,0.597,478,2.246,498,2.17,500,0.888,515,1.804,516,1.861,517,1.87,535,1.75,585,3.544,586,3.544,589,4.341,599,2.068,600,2.068,601,3.158,683,2.455,710,2.298,835,2.883,836,2.01,837,2.763,838,3.265,840,2.976,841,2.763,843,2.763,844,2.986,845,1.786,849,2.85,851,2.683,853,2.883,854,3.252,857,2.074,865,2.01,866,2.602,875,1.819,902,3.116,909,2.428,911,4.879,913,3.772,914,2.594,915,3.772,916,3.772,917,3.772,918,2.594,919,3.772,920,3.772,921,3.531,922,2.594,923,2.594,924,2.594,925,2.594,926,2.428,927,2.428,928,2.594,929,2.428,930,2.594,931,2.594,932,4.444,971,3.501,972,3.501]],["title/classes/Job.html",[26,0.256,951,2.245]],["body/classes/Job.html",[3,0.067,4,0.067,5,0.035,7,0.25,10,2.205,11,0.01,13,0.777,16,0.135,25,0.117,26,0.196,33,0.006,34,0.006,65,1.039,82,1.415,106,3.496,111,1.248,129,0.588,130,0.789,190,0.699,226,1.377,265,1.959,271,1.553,293,2.7,334,2.226,385,2.123,392,3.096,406,2.904,408,2.166,410,2.609,459,2.226,460,2.7,462,0.564,464,3.432,465,3.432,466,2.904,467,5.255,468,6.334,470,3.275,472,3.79,473,4.112,478,2.592,484,5.28,485,2.055,486,2.888,487,2.055,488,3.206,512,3.28,514,4.029,519,2.904,520,3.018,521,4.304,523,3.018,525,4.304,527,2.609,845,1.162,951,2.539,973,2.454,974,3.312,975,3.312,976,3.312,977,3.312,978,3.312,979,3.312,980,3.312,981,3.312,982,3.312,983,3.312,984,3.312,985,3.312,986,3.312,987,3.312,988,3.312,989,3.312,990,3.312,991,3.312,992,2.297,993,2.297,994,2.913]],["title/controllers/JobsController.html",[0,1.356,995,3.201]],["body/controllers/JobsController.html",[0,1.29,2,1.29,3,0.083,4,0.083,5,0.043,7,0.31,8,1.027,10,1.936,11,0.01,13,0.682,15,1.375,16,0.213,18,0.78,21,3.545,22,1.785,25,0.083,26,0.243,29,2.054,31,1.303,33,0.006,34,0.006,80,1.574,93,3.075,111,1.254,116,1.979,124,3.17,128,1.529,129,0.682,130,0.657,131,1.45,132,2.711,155,3.086,157,3.221,163,2.054,169,1.785,280,2.669,323,2.324,324,2.846,325,2.478,326,2.478,330,1.91,331,3.29,332,3.614,337,2.652,338,1.845,339,3.288,340,2.993,342,1.91,343,2.549,345,2.549,347,2.85,349,2.32,350,2.428,351,2.562,358,1.979,359,2.549,361,4.565,362,3.288,363,3.288,365,2.428,366,2.428,368,2.688,369,3.288,370,3.614,372,2.428,374,2.428,490,2.688,509,4.775,951,4.299,995,4.226,996,3.614,997,3.288,998,3.614,999,2.688,1000,4.109,1001,4.109,1002,4.109,1003,4.109,1004,5.582,1005,4.109,1006,4.286,1007,3.614,1008,4.565,1009,3.044,1010,4.109,1011,3.614,1012,4.109,1013,4.109,1014,4.109,1015,4.109,1016,2.85,1017,4.109]],["title/modules/JobsModule.html",[35,1.155,52,2.996]],["body/modules/JobsModule.html",[2,2.26,3,0.118,4,0.118,5,0.061,11,0.01,16,0.231,18,1.114,25,0.118,26,0.347,33,0.008,34,0.008,35,2.083,37,2.548,38,2.635,39,2.826,40,2.826,41,2.635,42,3.754,43,2.826,52,5.889,59,3.469,60,2.826,61,2.826,63,2.826,64,3.174,65,1.841,129,0.538,383,3.313,385,2.548,951,3.048,993,4.995,995,5.774,1006,5.554,1007,5.16,1018,5.16,1019,5.16,1020,5.868,1021,5.868,1022,4.069,1023,4.695]],["title/injectables/JobsService.html",[107,1.013,1006,2.826]],["body/injectables/JobsService.html",[3,0.067,4,0.067,5,0.035,7,0.252,8,0.884,11,0.01,13,0.658,15,1.268,16,0.215,18,0.633,25,0.067,26,0.197,27,2.065,28,1.549,31,1.3,33,0.006,34,0.006,65,1.046,79,1.732,80,2.234,81,1.732,82,1.688,93,3.223,94,1.497,97,1.871,107,1.151,108,1.316,111,1.167,124,3.028,128,1.476,129,0.698,130,0.634,131,1.399,132,2.439,133,2.915,169,1.448,190,1.448,192,2.889,253,1.965,265,2.374,271,1.558,280,2.001,293,1.549,296,3.445,323,2.001,324,2.133,325,2.133,326,2.133,330,2.283,331,2.711,334,1.882,337,2.711,338,2.206,340,1.24,351,2.619,388,3.633,392,2.923,397,1.882,399,2.068,400,1.969,401,1.969,406,2.455,410,1.497,411,3.617,412,2.068,413,2.068,414,2.068,415,2.068,416,2.068,417,2.068,418,2.068,419,1.497,420,3.047,421,3.047,423,3.047,424,2.068,425,3.047,427,2.068,428,2.068,429,2.068,430,2.068,431,2.068,432,2.068,433,2.068,434,2.068,435,2.902,436,1.969,437,1.969,438,2.068,439,1.549,440,3.047,441,3.047,442,1.969,443,2.068,444,3.047,445,1.969,446,2.068,447,2.068,448,2.068,449,2.068,450,1.24,451,2.068,452,1.497,453,2.068,455,3.047,459,1.277,460,1.549,490,2.18,509,4.451,512,2.773,514,3.406,519,2.455,520,2.551,521,3.639,523,2.551,525,3.639,527,2.206,951,3.029,992,2.312,998,4.32,1004,5.281,1006,3.213,1008,3.93,1009,2.47,1022,2.312,1024,2.932,1025,3.334,1026,3.334,1027,4.32,1028,3.334,1029,3.334,1030,3.334,1031,4.912,1032,3.334,1033,3.639,1034,3.334,1035,2.932,1036,3.334,1037,3.334,1038,3.334,1039,3.334,1040,3.334,1041,3.334,1042,3.334,1043,4.912,1044,2.47,1045,3.334]],["title/injectables/JwtAuthGuard.html",[107,1.013,1046,3.457]],["body/injectables/JwtAuthGuard.html",[3,0.147,4,0.089,5,0.046,7,0.336,8,1.083,11,0.01,13,0.626,15,1.113,16,0.211,18,0.844,22,1.929,25,0.089,26,0.263,27,1.868,31,1.195,33,0.007,34,0.007,106,2.451,107,1.411,108,1.754,111,0.639,128,1.403,129,0.626,130,0.603,131,1.331,132,2.399,146,5.461,172,2.756,190,1.664,214,2.906,250,1.32,268,3.255,305,3.397,306,2.702,311,6.002,315,3.907,316,3.907,358,2.14,515,1.486,516,1.097,613,2.14,703,3.907,804,3.554,829,2.797,866,1.652,900,2.624,1046,4.815,1047,6.434,1048,3.554,1049,6.018,1050,6.018,1051,6.018,1052,3.907,1053,5.839,1054,4.442,1055,6.018,1056,5.971,1057,4.442,1058,5.419,1059,6.018,1060,4.442,1061,6.018,1062,3.907,1063,3.907,1064,3.291,1065,3.554,1066,3.554,1067,3.554,1068,5.293,1069,4.442,1070,4.815,1071,6.018,1072,4.442,1073,4.442,1074,6.018,1075,4.442,1076,4.442,1077,6.018,1078,4.442,1079,6.018,1080,4.442,1081,4.442,1082,4.733,1083,4.442,1084,4.442,1085,4.442,1086,4.442,1087,3.907,1088,4.442,1089,4.442,1090,4.442,1091,4.442]],["title/injectables/JwtStrategy.html",[107,1.013,208,2.996]],["body/injectables/JwtStrategy.html",[3,0.1,4,0.1,5,0.052,7,0.376,8,1.169,11,0.01,13,0.596,15,0.921,16,0.225,18,0.946,19,4.811,20,2.944,25,0.1,26,0.295,27,2.731,28,3.019,31,0.873,33,0.007,34,0.007,97,1.739,107,1.523,108,1.968,111,0.935,124,2.934,128,1.336,129,0.728,130,0.574,131,1.267,133,3.246,169,2.164,170,4.682,171,3.456,190,1.526,191,3.987,192,2.238,208,4.504,214,3.259,221,4.383,256,3.692,263,3.692,265,2.207,268,2.696,269,4.383,271,1.736,272,3.667,273,3.667,274,2.821,275,3.246,276,3.038,277,5.713,498,1.931,829,3.019,844,1.8,1067,3.987,1092,4.383,1093,5.713,1094,4.983,1095,4.983,1096,6.495,1097,4.983,1098,4.983,1099,4.383,1100,4.383,1101,4.383,1102,4.983,1103,4.983,1104,4.983,1105,4.983,1106,4.983]],["title/injectables/LocalAuthGuard.html",[107,1.013,164,3.201]],["body/injectables/LocalAuthGuard.html",[3,0.132,4,0.132,5,0.069,11,0.01,16,0.213,18,1.251,25,0.132,26,0.39,33,0.009,34,0.009,107,1.81,108,2.601,164,5.72,165,5.27,214,4.308,829,3.589,1048,5.27,1063,5.793,1107,7.721]],["title/injectables/LocalStrategy.html",[107,1.013,209,2.996]],["body/injectables/LocalStrategy.html",[3,0.109,4,0.109,5,0.057,7,0.411,8,1.236,11,0.01,13,0.63,15,1.005,16,0.219,18,1.032,25,0.109,26,0.322,27,2.285,31,0.952,33,0.008,34,0.008,97,1.812,107,1.61,108,2.146,111,1.199,128,1.412,129,0.63,130,0.607,131,1.339,132,2.363,161,5.168,162,4.348,190,1.147,192,2.441,209,4.762,214,3.555,241,4.348,242,6.04,256,4.026,305,3.068,306,2.441,358,2.618,498,2.041,515,1.342,543,4.673,829,3.192,1062,4.78,1067,4.348,1093,6.04,1099,4.78,1101,4.78,1108,4.78,1109,5.435,1110,5.435,1111,6.867,1112,5.435,1113,4.78,1114,5.435,1115,5.435,1116,4.78,1117,4.78,1118,4.78,1119,5.435,1120,5.435]],["title/controllers/MailController.html",[0,1.356,1121,3.201]],["body/controllers/MailController.html",[0,1.428,2,1.428,3,0.092,4,0.092,5,0.047,7,0.344,8,1.101,10,1.185,11,0.01,13,0.417,15,0.842,16,0.231,18,0.864,21,3.309,22,1.977,25,0.092,26,0.269,27,1.914,28,3.434,29,2.275,31,0.797,33,0.007,34,0.007,65,1.428,67,3.642,79,2.365,80,1.744,81,2.365,82,1.317,97,1.663,116,2.192,129,0.417,163,2.275,176,2.824,190,1.627,192,3.318,271,1.847,334,1.744,388,3.901,397,2.57,512,3.454,519,2.275,696,3.853,951,3.178,992,3.157,997,5.529,1022,3.157,1027,4.003,1035,4.003,1058,3.372,1121,4.532,1122,4.003,1123,4.552,1124,7.389,1125,4.552,1126,4.552,1127,4.552,1128,6.91,1129,3.372,1130,3.642,1131,4.003,1132,4.552,1133,4.52,1134,4.003,1135,2.689,1136,3.157,1137,3.372,1138,4.552,1139,4.003,1140,4.003,1141,4.552,1142,4.552,1143,4.552,1144,4.552,1145,4.552,1146,4.552,1147,4.895,1148,4.552,1149,4.552,1150,6.118,1151,4.552,1152,4.552,1153,4.552,1154,4.552,1155,4.552,1156,4.552,1157,4.552,1158,4.552,1159,4.552,1160,4.552,1161,4.552,1162,5.381,1163,4.552,1164,4.552,1165,4.552,1166,4.552,1167,4.003,1168,4.552,1169,4.552]],["title/modules/MailModule.html",[35,1.155,53,2.996]],["body/modules/MailModule.html",[2,2.036,3,0.1,4,0.1,5,0.052,11,0.01,16,0.237,18,0.944,19,4.521,20,2.938,25,0.1,26,0.294,33,0.007,34,0.007,35,1.929,37,2.16,38,2.233,39,2.395,40,2.395,41,2.233,42,3.477,43,2.395,53,5.644,59,3.125,60,2.395,61,2.395,63,2.395,64,2.69,65,1.561,96,3.979,97,1.197,103,3.979,106,2.642,117,4.374,129,0.595,132,1.561,239,4.374,306,2.233,383,2.808,385,2.817,844,1.796,951,2.584,993,4.499,1022,3.449,1023,3.979,1121,5.349,1129,4.806,1130,3.979,1133,5.323,1134,4.374,1135,2.938,1137,3.684,1167,4.374,1170,4.374,1171,4.374,1172,4.973,1173,6.487,1174,4.973,1175,4.973,1176,4.973,1177,4.499,1178,4.374,1179,3.449,1180,4.973,1181,4.973,1182,4.973,1183,4.973,1184,4.973,1185,4.973,1186,4.973,1187,4.973,1188,4.374,1189,4.973,1190,4.973,1191,4.973,1192,4.973,1193,4.973,1194,4.374]],["title/injectables/MailService.html",[107,1.013,1133,2.826]],["body/injectables/MailService.html",[3,0.136,4,0.136,5,0.071,11,0.01,16,0.187,18,1.284,25,0.136,26,0.4,33,0.009,34,0.009,107,1.837,108,2.669,1133,5.127,1195,5.945]],["title/injectables/MulterConfigService.html",[107,1.013,786,3.201]],["body/injectables/MulterConfigService.html",[3,0.09,4,0.09,5,0.076,7,0.337,8,1.085,11,0.01,13,0.627,15,1.115,16,0.212,18,0.846,25,0.09,26,0.264,31,1.197,33,0.007,34,0.007,106,2.457,107,1.414,108,1.76,111,0.984,128,0.917,129,0.627,130,0.394,131,0.869,140,5.305,172,2.765,176,4.241,190,1.273,226,1.7,243,1.52,323,1.816,514,3.091,613,2.147,683,1.564,732,5.305,751,3.92,757,3.302,786,4.469,1178,3.92,1179,4.183,1188,3.92,1196,3.92,1197,6.837,1198,7.326,1199,6.032,1200,4.458,1201,6.837,1202,6.032,1203,4.458,1204,4.458,1205,4.458,1206,4.458,1207,6.032,1208,6.032,1209,4.458,1210,6.032,1211,4.458,1212,4.458,1213,6.032,1214,7.654,1215,4.458,1216,4.458,1217,4.458,1218,6.032,1219,4.458,1220,4.458,1221,6.032,1222,4.458,1223,4.458,1224,4.458,1225,4.458,1226,6.837,1227,4.458,1228,4.458,1229,4.458,1230,4.458,1231,4.458,1232,4.458,1233,4.458,1234,4.458,1235,4.458,1236,4.458,1237,4.458,1238,6.032,1239,4.458,1240,4.458,1241,6.032,1242,4.458,1243,4.458,1244,4.458,1245,4.458,1246,6.032,1247,4.458,1248,6.032,1249,6.032,1250,4.458,1251,4.458,1252,4.458,1253,6.032,1254,4.458,1255,6.032,1256,4.458]],["title/classes/Permission.html",[26,0.256,613,2.081]],["body/classes/Permission.html",[3,0.085,4,0.085,5,0.044,7,0.319,10,2.187,11,0.01,13,0.77,16,0.161,25,0.134,26,0.25,33,0.007,34,0.007,35,1.775,65,1.323,82,1.681,106,3.348,111,1.262,129,0.609,130,0.772,190,0.89,226,1.636,265,2.029,271,1.775,293,3.088,385,2.522,410,2.983,459,2.545,460,3.088,462,0.719,464,3.925,465,3.925,466,3.32,467,5.438,468,6,470,3.245,472,3.925,473,4.197,478,2.441,484,4.44,485,2.616,486,3.431,487,2.616,488,3.32,576,4.345,577,4.607,613,2.797,658,2.924,677,2.924,1257,3.124,1258,4.217,1259,4.217,1260,4.217,1261,4.217,1262,4.217,1263,4.217,1264,4.217,1265,4.217,1266,4.217,1267,4.217,1268,4.217,1269,3.709]],["title/controllers/PermissionsController.html",[0,1.356,1270,3.201]],["body/controllers/PermissionsController.html",[0,1.3,2,1.3,3,0.083,4,0.083,5,0.043,7,0.313,8,1.032,10,1.942,11,0.01,13,0.684,15,1.379,16,0.213,18,0.787,22,1.799,25,0.083,26,0.245,29,2.07,31,1.306,33,0.007,34,0.007,80,1.587,93,3.085,111,1.255,116,1.995,124,3.175,128,1.534,129,0.684,130,0.659,131,1.455,132,2.714,155,3.103,157,3.239,163,2.07,169,1.799,268,3.56,280,2.337,323,2.337,324,2.858,325,2.491,326,2.491,330,1.925,331,3.302,337,2.666,338,1.86,340,2.999,342,1.925,343,2.57,345,2.57,347,2.873,349,2.339,350,2.447,351,2.576,358,1.995,359,2.57,365,2.447,366,2.447,368,2.709,372,2.447,374,2.447,573,5.047,574,2.873,613,3.884,778,3.314,999,2.709,1016,2.873,1270,4.25,1271,3.643,1272,3.643,1273,4.142,1274,2.873,1275,4.142,1276,3.069,1277,4.142,1278,4.142,1279,5.592,1280,4.142,1281,4.304,1282,3.643,1283,4.59,1284,3.069,1285,4.142,1286,3.069,1287,4.142,1288,4.25,1289,3.069,1290,3.069,1291,4.142,1292,4.142,1293,3.069,1294,4.142,1295,4.142]],["title/modules/PermissionsModule.html",[35,1.155,54,2.996]],["body/modules/PermissionsModule.html",[2,2.26,3,0.118,4,0.118,5,0.061,11,0.01,16,0.231,18,1.114,25,0.118,26,0.347,33,0.008,34,0.008,35,2.083,37,2.548,38,2.635,39,2.826,40,2.826,41,2.635,42,3.754,43,2.826,54,5.889,59,3.469,60,2.826,61,2.826,63,2.826,64,3.174,65,1.841,129,0.538,383,3.313,385,2.548,613,2.826,658,4.995,659,4.069,663,4.695,1270,5.774,1281,5.554,1282,5.16,1296,5.16,1297,5.16,1298,5.868,1299,5.868]],["title/injectables/PermissionsService.html",[107,1.013,1281,2.826]],["body/injectables/PermissionsService.html",[3,0.064,4,0.064,5,0.033,7,0.24,8,0.852,11,0.01,13,0.646,15,1.242,16,0.212,18,0.603,25,0.064,26,0.188,27,1.991,28,1.475,31,1.177,33,0.005,34,0.005,35,1.679,65,0.996,79,1.649,80,2.17,81,1.649,82,1.639,93,3.172,94,1.425,97,1.932,107,1.11,108,1.253,111,1.156,124,2.993,128,1.449,129,0.716,130,0.623,131,1.375,132,2.408,133,3.14,169,1.378,190,1.585,192,3.018,247,2.938,253,1.918,265,2.343,271,1.514,280,2.308,293,1.475,296,3.347,305,3.198,306,2.544,323,1.929,324,2.057,325,2.057,326,2.057,330,2.201,331,2.633,337,2.633,338,2.127,340,2.336,342,2.201,351,2.544,388,3.546,392,2.871,397,1.792,399,1.969,400,1.875,401,1.875,410,1.425,411,3.514,412,1.969,413,1.969,414,1.969,415,1.969,416,1.969,417,1.969,418,1.969,419,1.425,420,2.938,421,2.938,423,2.938,424,1.969,425,2.938,427,1.969,428,1.969,429,1.969,430,1.969,431,1.969,432,1.969,433,1.969,434,1.969,435,2.798,436,1.875,437,2.798,438,1.969,439,1.475,440,2.938,441,2.938,442,1.875,443,1.969,444,2.938,445,2.798,446,1.969,447,1.969,448,1.969,449,1.969,450,1.18,451,1.969,452,1.425,453,1.969,455,2.938,459,1.216,460,1.475,573,4.61,574,2.201,576,4.396,577,4.66,613,3.026,659,2.201,669,4.165,677,2.201,685,2.791,1033,2.351,1044,2.351,1082,3.284,1272,4.165,1279,5.206,1281,3.097,1283,3.789,1284,2.351,1300,2.791,1301,3.174,1302,3.174,1303,3.174,1304,3.174,1305,3.174,1306,3.174,1307,3.174,1308,3.174,1309,3.174,1310,3.174,1311,2.351,1312,3.174,1313,3.174,1314,3.174,1315,3.174,1316,2.351,1317,3.174,1318,3.174,1319,2.351,1320,3.789,1321,3.174,1322,4.736,1323,3.174]],["title/classes/RegisterUserDto.html",[26,0.256,152,2.826]],["body/classes/RegisterUserDto.html",[3,0.105,4,0.105,5,0.054,7,0.393,10,2.181,11,0.01,13,0.768,16,0.185,25,0.105,26,0.395,33,0.008,34,0.008,111,1.244,129,0.677,130,0.741,152,4.37,167,5.885,226,1.882,271,1.972,272,4.165,273,4.165,274,3.204,275,3.688,392,3.171,462,0.887,498,1.547,500,1.32,503,1.726,510,4.37,529,3.609,533,2.601,534,3.404,535,2.601,536,2.601,537,3.404,538,3.404,539,4.164,541,4.949,542,5.345,543,4.359,544,5.345,545,5.345,546,5.345,547,5.345,641,4.577,1324,5.204,1325,5.204,1326,5.204,1327,5.204,1328,5.204,1329,5.204]],["title/interfaces/Response.html",[135,2.826,831,2.826]],["body/interfaces/Response.html",[3,0.11,4,0.11,5,0.057,7,0.411,11,0.01,16,0.226,18,1.034,22,2.365,25,0.138,26,0.322,31,0.954,33,0.008,34,0.008,107,1.612,111,1.085,130,0.666,131,1.341,135,4.498,226,1.938,358,2.623,392,3.07,473,4.077,513,3.432,683,1.911,734,6.176,831,3.562,832,4.358,1053,5.583,1056,5.094,1058,4.035,1064,4.035,1070,4.358,1330,4.358,1331,7.179,1332,6.048,1333,6.048,1334,4.035,1335,4.79,1336,4.79,1337,6.048,1338,4.358,1339,4.035,1340,4.79,1341,4.79,1342,4.79,1343,4.79,1344,4.79,1345,4.79]],["title/classes/Resume.html",[26,0.256,1346,2.68]],["body/classes/Resume.html",[3,0.075,4,0.075,5,0.039,7,0.281,10,2.191,11,0.01,13,0.772,16,0.187,25,0.125,26,0.22,33,0.006,34,0.006,65,1.167,82,1.539,106,1.515,111,1.233,130,0.788,190,0.785,226,1.498,265,2.068,271,2.051,293,2.885,334,1.424,382,2.975,384,3.27,385,2.309,410,2.787,459,2.595,460,2.885,462,0.634,464,3.666,465,3.666,466,3.385,467,5.222,470,3.201,472,4.001,473,4.031,478,2.31,484,5.256,485,2.306,486,3.141,487,2.306,488,4.177,585,3.666,586,3.666,587,4.001,588,4.598,589,3.85,818,3.85,845,2.615,951,1.932,1022,2.579,1023,2.975,1346,3.298,1347,2.755,1348,5.419,1349,3.718,1350,3.718,1351,3.718,1352,3.718,1353,3.718,1354,3.718,1355,3.718,1356,3.718,1357,3.718,1358,3.718,1359,3.718,1360,3.718,1361,3.718,1362,3.718,1363,2.755,1364,3.718,1365,2.755,1366,3.27]],["title/controllers/ResumesController.html",[0,1.356,1367,3.201]],["body/controllers/ResumesController.html",[0,1.214,2,1.214,3,0.078,4,0.078,5,0.04,7,0.292,8,0.984,10,1.966,11,0.01,13,0.693,15,1.396,16,0.215,18,0.735,22,1.68,25,0.078,26,0.229,29,1.934,31,1.322,33,0.006,34,0.006,80,1.482,93,2.994,111,1.258,116,1.863,124,3.223,128,1.553,129,0.693,130,0.667,131,1.473,132,2.75,155,2.958,157,2.184,163,1.934,169,1.68,323,2.228,324,2.755,325,2.375,326,2.375,330,1.798,331,3.205,337,2.542,338,1.737,340,3.039,342,1.798,343,2.4,347,2.683,349,2.184,350,2.286,351,2.456,358,1.863,359,2.4,365,2.286,366,2.286,368,2.531,372,2.286,374,2.286,582,2.4,583,3.231,587,4.461,631,5.236,819,2.683,826,4.052,828,2.531,999,2.531,1016,2.683,1274,2.683,1276,2.866,1286,2.866,1288,4.052,1289,2.866,1290,2.866,1293,2.866,1346,4.918,1367,4.052,1368,3.403,1369,6.397,1370,5.469,1371,5.469,1372,3.403,1373,3.869,1374,3.869,1375,3.869,1376,3.869,1377,5.469,1378,3.869,1379,3.869,1380,3.869,1381,3.869,1382,3.869,1383,4.149,1384,3.403,1385,3.403,1386,3.869,1387,3.869,1388,3.403,1389,3.869,1390,3.869,1391,3.869,1392,3.869,1393,3.869,1394,3.869,1395,3.869,1396,3.869]],["title/modules/ResumesModule.html",[35,1.155,55,2.996]],["body/modules/ResumesModule.html",[2,2.26,3,0.118,4,0.118,5,0.061,11,0.01,16,0.231,18,1.114,25,0.118,26,0.347,33,0.008,34,0.008,35,2.083,37,2.548,38,2.635,39,2.826,40,2.826,41,2.635,42,3.754,43,2.826,55,5.889,59,3.469,60,2.826,61,2.826,63,2.826,64,3.174,65,1.841,129,0.538,383,3.313,385,2.548,1346,3.64,1365,5.336,1367,5.774,1383,5.554,1384,5.16,1397,5.16,1398,5.16,1399,5.868,1400,5.868,1401,5.16,1402,5.868]],["title/injectables/ResumesService.html",[107,1.013,1383,2.826]],["body/injectables/ResumesService.html",[3,0.061,4,0.061,5,0.031,7,0.227,8,0.819,11,0.01,13,0.658,15,1.277,16,0.204,18,0.572,25,0.061,26,0.178,27,1.914,28,1.399,31,1.21,33,0.005,34,0.005,65,0.945,79,1.564,80,2.103,81,1.564,82,1.588,93,3.116,94,1.352,97,1.82,107,1.067,108,1.189,111,1.178,124,3.076,128,1.475,129,0.694,130,0.634,131,1.399,132,2.491,133,2.743,169,1.308,190,1.515,192,2.747,247,1.868,253,1.868,265,2.424,271,1.918,280,1.854,293,2.116,296,3.881,305,2.57,306,2.747,323,1.854,324,1.977,325,1.977,326,1.977,330,2.116,331,2.551,337,2.551,338,2.044,340,2.275,342,2.116,351,2.465,388,3.454,392,2.815,397,1.7,399,1.868,400,1.779,401,1.779,410,1.352,411,3.795,412,1.868,413,2.824,414,1.868,415,1.868,416,1.868,417,1.868,418,1.868,419,2.465,420,2.824,421,2.824,423,2.824,424,1.868,425,2.824,427,1.868,428,1.868,429,1.868,430,1.868,431,1.868,432,1.868,433,1.868,434,1.868,435,2.689,436,1.779,437,1.779,438,1.868,439,1.399,440,2.824,441,2.824,442,1.779,443,1.868,444,2.824,445,1.779,446,1.868,447,1.868,448,1.868,449,1.868,450,1.12,451,1.868,452,1.352,453,1.868,455,2.824,459,2.103,460,1.399,466,2.275,470,1.744,583,1.779,585,3.242,586,3.242,587,4.365,588,3.372,589,2.824,631,4.792,818,2.824,1033,3.372,1044,2.23,1179,3.157,1316,2.23,1319,2.23,1320,3.642,1346,3.404,1363,2.23,1372,4.003,1383,2.977,1385,2.648,1401,2.648,1403,2.648,1404,4.552,1405,3.011,1406,3.011,1407,4.552,1408,3.011,1409,3.011,1410,4.552,1411,3.011,1412,3.011,1413,3.011,1414,3.011,1415,3.011,1416,3.011,1417,3.011,1418,4.552,1419,3.011,1420,3.011,1421,3.011,1422,4.552,1423,3.011,1424,3.011,1425,2.648,1426,3.642,1427,4.552,1428,3.011,1429,3.011]],["title/classes/Role.html",[26,0.256,276,1.817]],["body/classes/Role.html",[3,0.088,4,0.088,5,0.045,7,0.329,10,2.199,11,0.01,13,0.775,16,0.187,25,0.136,26,0.258,33,0.007,34,0.007,65,1.366,82,1.717,106,1.773,111,1.154,129,0.619,130,0.778,190,0.919,226,1.672,265,2.062,268,3.653,271,1.805,276,2.495,293,3.139,385,2.578,406,3.375,410,3.033,459,2.587,460,3.139,462,0.742,464,3.99,465,3.99,466,3.375,467,4.499,470,3.001,472,3.99,473,4.238,478,2.474,484,5.457,485,2.7,486,3.506,487,2.7,488,3.625,527,3.033,613,3.253,659,3.018,660,2.847,663,3.482,678,2.847,845,2.082,1348,4.748,1430,3.224,1431,4.352,1432,4.352,1433,4.352,1434,4.352,1435,4.352,1436,4.352,1437,4.352,1438,4.352,1439,4.352,1440,4.352,1441,4.352,1442,3.828]],["title/controllers/RolesController.html",[0,1.356,1443,3.201]],["body/controllers/RolesController.html",[0,1.3,2,1.3,3,0.083,4,0.083,5,0.043,7,0.313,8,1.032,10,1.942,11,0.01,13,0.684,15,1.379,16,0.213,18,0.787,22,1.799,25,0.083,26,0.245,29,2.07,31,1.306,33,0.007,34,0.007,80,1.587,93,3.085,111,1.255,116,1.995,124,3.175,128,1.534,129,0.684,130,0.659,131,1.455,132,2.714,155,3.103,157,3.239,163,2.07,169,1.799,170,3.715,171,2.873,276,3.391,280,2.337,323,2.337,324,2.858,325,2.491,326,2.491,330,1.925,331,3.302,337,2.666,338,1.86,340,2.999,342,1.925,343,2.57,345,2.57,347,2.873,349,2.339,350,2.447,351,2.576,358,1.995,359,2.57,365,2.447,366,2.447,368,2.709,372,2.447,374,2.447,603,5.047,604,2.873,778,3.314,999,2.709,1016,2.873,1274,2.873,1276,3.069,1286,3.069,1288,4.25,1289,3.069,1290,3.069,1293,3.069,1443,4.25,1444,3.643,1445,5.788,1446,3.643,1447,4.142,1448,4.142,1449,4.142,1450,4.142,1451,5.592,1452,4.142,1453,4.59,1454,3.069,1455,4.142,1456,4.142,1457,4.142,1458,4.142,1459,4.142,1460,4.142]],["title/modules/RolesModule.html",[35,1.155,56,2.826]],["body/modules/RolesModule.html",[2,2.226,3,0.115,4,0.115,5,0.06,11,0.01,16,0.229,18,1.087,25,0.115,26,0.339,33,0.008,34,0.008,35,2.06,37,2.486,38,2.571,39,2.757,40,2.757,41,2.571,42,3.713,43,3.713,56,5.597,59,3.417,60,2.757,61,2.757,63,2.757,64,3.096,65,1.796,129,0.525,170,5.003,171,3.97,276,2.407,383,3.232,385,2.486,660,4.64,661,3.551,664,4.241,1443,5.711,1461,5.034,1462,5.034,1463,5.034,1464,5.724,1465,5.724]],["title/injectables/RolesService.html",[107,1.013,170,2.439]],["body/injectables/RolesService.html",[3,0.061,4,0.061,5,0.032,7,0.23,8,0.825,11,0.01,13,0.636,15,1.219,16,0.214,18,0.577,25,0.061,26,0.18,27,1.927,28,1.412,31,1.155,33,0.005,34,0.005,35,0.812,65,0.954,79,1.579,80,2.115,81,1.579,82,1.597,93,3.126,94,1.365,97,1.972,107,1.075,108,1.2,111,1.145,124,2.96,128,1.426,129,0.73,130,0.613,131,1.352,132,2.38,133,3.297,169,1.32,170,2.588,190,1.601,192,3.233,247,1.885,253,1.877,254,1.519,265,2.316,268,3.568,271,1.475,276,2.584,280,1.867,293,1.412,296,3.261,305,3.47,306,2.76,307,2.432,323,1.867,324,1.991,325,1.991,326,1.991,330,2.131,331,2.565,337,2.565,338,2.059,340,2.286,342,2.131,351,2.479,388,3.47,392,2.825,397,1.716,399,1.885,400,1.795,401,1.795,406,3.072,410,1.365,411,3.424,412,1.885,413,1.885,414,1.885,415,1.885,416,1.885,417,1.885,418,1.885,419,3.114,420,2.844,421,2.844,423,2.844,424,1.885,425,2.844,427,1.885,428,1.885,429,1.885,430,1.885,431,1.885,432,1.885,433,1.885,434,1.885,435,2.708,436,1.795,437,2.708,438,1.885,439,1.412,440,2.844,441,2.844,442,1.795,443,1.885,444,2.844,445,2.708,446,1.885,447,1.885,448,1.885,449,1.885,450,1.13,451,1.885,452,1.365,453,1.885,455,2.844,459,1.164,460,1.412,527,2.76,576,1.988,577,2.107,603,4.536,604,2.107,661,1.885,670,3.668,678,1.988,679,3.396,686,2.432,701,2.673,714,2.432,1033,3.396,1044,2.251,1082,3.179,1179,2.107,1311,2.251,1316,2.251,1319,2.251,1320,3.668,1426,2.432,1446,4.032,1451,5.138,1453,3.668,1454,2.251,1466,2.673,1467,3.039,1468,3.039,1469,3.039,1470,3.039,1471,3.039,1472,3.039,1473,3.039,1474,2.673,1475,3.039,1476,3.039,1477,3.039,1478,3.039,1479,3.039,1480,3.039,1481,3.039,1482,3.039,1483,3.039,1484,4.584,1485,3.039,1486,3.039,1487,3.039,1488,2.673,1489,3.039]],["title/classes/Subscriber.html",[26,0.256,1135,2.553]],["body/classes/Subscriber.html",[3,0.091,4,0.091,5,0.047,7,0.341,10,2.194,11,0.01,13,0.773,16,0.168,25,0.138,26,0.268,33,0.007,34,0.007,65,1.418,82,1.762,106,2.805,111,1.201,129,0.632,130,0.776,190,0.954,226,1.716,265,2.103,271,2.117,293,3.2,385,2.644,410,3.092,459,2.638,460,3.2,462,0.77,464,4.068,465,4.068,466,3.441,467,4.271,468,3.349,470,3.035,472,4.068,473,4.285,478,2.077,484,5.444,485,2.804,486,3.597,487,2.804,488,3.441,512,3.887,1135,3.597,1136,3.135,1177,3.135,1490,3.349,1491,4.52,1492,4.52,1493,4.52,1494,4.52,1495,4.52,1496,4.52,1497,4.52,1498,4.52,1499,4.52,1500,4.52,1501,4.52,1502,3.975]],["title/controllers/SubscribersController.html",[0,1.356,1503,3.201]],["body/controllers/SubscribersController.html",[0,1.24,2,1.24,3,0.079,4,0.079,5,0.041,7,0.299,8,0.999,10,1.979,11,0.01,13,0.697,15,1.406,16,0.21,18,0.75,22,1.716,25,0.079,26,0.234,29,1.975,31,1.332,33,0.006,34,0.006,80,1.514,93,3.023,111,1.231,116,1.903,124,3.234,128,1.563,129,0.697,130,0.672,131,1.483,132,2.721,155,3.003,157,3.134,163,1.975,169,1.716,280,2.614,323,2.261,324,2.787,325,2.411,326,2.411,330,1.837,331,3.235,335,4.442,337,2.58,338,1.775,340,2.827,342,1.837,343,2.451,349,3.134,350,2.335,351,2.493,358,1.903,359,2.451,365,2.335,366,2.335,372,2.335,374,2.335,512,2.231,619,4.973,620,2.741,999,2.585,1016,2.741,1135,4.709,1147,5.134,1274,2.741,1276,2.928,1286,2.928,1288,4.113,1289,2.928,1290,2.928,1293,2.928,1388,3.476,1503,4.113,1504,3.476,1505,5.551,1506,3.476,1507,3.952,1508,3.952,1509,3.952,1510,3.952,1511,3.952,1512,5.551,1513,3.952,1514,3.952,1515,3.952,1516,3.476,1517,5.272,1518,3.952,1519,3.952,1520,4.197,1521,3.476,1522,4.442,1523,2.928,1524,5.134,1525,3.952,1526,3.952,1527,3.952,1528,3.952,1529,3.952,1530,3.952,1531,3.952,1532,3.952,1533,3.952]],["title/modules/SubscribersModule.html",[35,1.155,57,2.996]],["body/modules/SubscribersModule.html",[2,2.254,3,0.117,4,0.117,5,0.061,11,0.01,16,0.23,18,1.109,25,0.117,26,0.346,33,0.008,34,0.008,35,2.079,37,2.537,38,2.623,39,2.813,40,2.813,41,2.623,42,3.747,43,2.813,57,5.882,59,3.46,60,2.813,61,2.813,63,2.813,64,3.16,65,1.833,129,0.536,383,3.298,385,2.537,1135,3.451,1137,4.327,1177,4.981,1194,5.137,1503,5.763,1520,5.548,1521,5.137,1534,5.137,1535,5.137,1536,5.841,1537,5.841]],["title/injectables/SubscribersService.html",[107,1.013,1520,2.826]],["body/injectables/SubscribersService.html",[3,0.063,4,0.063,5,0.033,7,0.237,8,0.844,11,0.01,13,0.667,15,1.297,16,0.211,18,0.595,25,0.063,26,0.185,27,1.971,28,1.455,31,1.309,33,0.005,34,0.005,65,0.983,79,1.627,80,2.153,81,1.627,82,1.626,93,3.158,94,1.406,97,1.84,106,1.275,107,1.099,108,1.237,111,1.1,124,3.101,128,1.495,129,0.701,130,0.643,131,1.418,132,2.48,133,2.809,169,1.36,190,1.535,192,3.001,247,2.908,253,2.041,265,2.22,271,2.14,280,1.91,296,3.32,305,1.768,306,1.406,317,2.505,318,2.505,323,1.91,324,2.036,325,2.036,326,2.036,330,2.179,331,2.612,337,2.612,338,2.105,340,2.485,342,2.179,351,2.524,388,3.523,392,2.857,397,1.768,399,1.942,400,1.85,401,1.85,410,2.105,411,3.871,412,1.942,413,1.942,414,1.942,415,1.942,416,1.942,417,1.942,418,1.942,419,2.105,420,2.908,421,2.908,423,2.908,424,1.942,425,2.908,427,1.942,428,1.942,429,1.942,430,1.942,431,1.942,432,1.942,433,1.942,434,1.942,435,2.77,436,1.85,437,2.77,438,1.942,439,1.455,440,2.908,441,2.908,442,1.85,443,1.942,444,2.908,445,1.85,446,1.942,447,1.942,448,1.942,449,1.942,450,1.164,451,1.942,452,1.406,453,2.908,455,2.908,459,1.2,460,1.455,512,3.173,619,4.587,620,2.171,707,2.32,708,2.32,709,2.505,1082,3.251,1135,1.85,1136,2.171,1137,2.32,1139,2.754,1140,4.123,1147,3.751,1311,2.32,1316,2.32,1319,2.32,1506,4.123,1516,4.123,1517,4.864,1520,3.066,1522,3.751,1523,2.32,1538,2.754,1539,4.688,1540,3.131,1541,3.131,1542,3.131,1543,3.131,1544,3.131,1545,4.688,1546,3.131,1547,3.131,1548,3.131,1549,5.62,1550,2.754,1551,2.754,1552,3.131,1553,3.131,1554,3.131,1555,3.131,1556,3.131,1557,3.131,1558,4.688,1559,3.131,1560,3.131]],["title/injectables/TransformInterceptor.html",[107,1.013,1339,3.201]],["body/injectables/TransformInterceptor.html",[3,0.108,4,0.108,5,0.056,7,0.404,8,1.223,11,0.01,13,0.623,15,0.988,16,0.224,18,1.015,22,2.321,25,0.137,26,0.316,27,2.247,31,0.936,33,0.008,34,0.008,107,1.593,108,2.111,111,0.769,128,1.397,129,0.623,130,0.601,131,1.325,135,3.496,358,2.574,392,2.177,473,2.891,513,2.857,683,1.875,734,5.534,831,3.496,1052,4.7,1053,6.146,1056,5.824,1058,5.034,1064,3.959,1070,4.276,1330,4.276,1331,5.976,1332,5.976,1333,6.914,1334,3.959,1335,4.7,1336,4.7,1337,6.57,1338,4.276,1339,5.034,1340,6.57,1341,6.57,1342,4.7,1343,4.7,1344,4.7,1345,4.7,1561,5.345,1562,5.345,1563,5.345]],["title/classes/UpdateCompanyDto.html",[26,0.256,346,2.996]],["body/classes/UpdateCompanyDto.html",[3,0.128,4,0.128,5,0.066,7,0.479,11,0.01,13,0.582,16,0.209,25,0.128,26,0.376,33,0.009,34,0.009,111,1.087,130,0.561,226,2.128,265,2.462,328,4.149,346,5.237,354,4.399,355,5.076,356,5.594,462,1.081,551,5.076,823,3.582,824,3.296,825,3.296,829,3.51,1564,7.551,1565,6.344]],["title/classes/UpdateFileDto.html",[26,0.256,743,2.996]],["body/classes/UpdateFileDto.html",[3,0.132,4,0.132,5,0.069,11,0.01,16,0.213,25,0.132,26,0.389,33,0.009,34,0.009,462,1.12,558,4.556,559,4.867,560,5.257,743,5.346,760,4.867,761,5.257,823,3.709,824,3.413,825,3.413,829,3.583,1566,7.709]],["title/classes/UpdateJobDto.html",[26,0.256,1004,2.996]],["body/classes/UpdateJobDto.html",[3,0.132,4,0.132,5,0.069,11,0.01,16,0.213,25,0.132,26,0.389,33,0.009,34,0.009,462,1.12,490,4.297,491,4.867,509,4.076,823,3.709,824,3.413,825,3.413,829,3.583,1004,5.346,1008,5.257,1009,4.867,1567,7.709]],["title/classes/UpdatePermissionDto.html",[26,0.256,1279,2.996]],["body/classes/UpdatePermissionDto.html",[3,0.132,4,0.132,5,0.069,11,0.01,16,0.213,25,0.132,26,0.389,33,0.009,34,0.009,462,1.12,573,4.297,574,4.556,575,5.257,823,3.709,824,3.413,825,3.413,829,3.583,1279,5.346,1283,5.257,1284,4.867,1568,7.709]],["title/classes/UpdateResumeDto.html",[26,0.256,828,2.826]],["body/classes/UpdateResumeDto.html",[3,0.106,4,0.106,5,0.055,7,0.398,10,1.371,11,0.01,13,0.483,16,0.223,25,0.106,26,0.478,33,0.008,34,0.008,82,1.524,111,0.969,130,0.691,226,1.897,250,2.001,265,1.609,271,1.408,459,2.996,462,0.898,466,2.633,470,2.018,492,3.905,499,4.603,500,1.336,508,3.112,513,2.831,515,1.663,516,1.932,517,1.408,548,2.504,549,3.129,552,2.85,582,3.268,583,3.112,584,3.653,587,3.112,615,3.653,617,4.669,622,4.988,626,4.633,818,5.406,819,4.669,823,2.974,824,2.737,825,3.498,826,3.903,827,4.215,828,4.404,829,3.129,830,5.387,1569,5.268,1570,5.268]],["title/classes/UpdateRoleDto.html",[26,0.256,1451,2.996]],["body/classes/UpdateRoleDto.html",[3,0.132,4,0.132,5,0.069,11,0.01,16,0.213,25,0.132,26,0.389,33,0.009,34,0.009,462,1.12,603,4.297,604,4.556,605,5.257,823,3.709,824,3.413,825,3.413,829,3.583,1451,5.346,1453,5.257,1454,4.867,1571,7.709]],["title/classes/UpdateSubscriberDto.html",[26,0.256,1517,2.996]],["body/classes/UpdateSubscriberDto.html",[3,0.132,4,0.132,5,0.069,11,0.01,16,0.213,25,0.132,26,0.389,33,0.009,34,0.009,462,1.12,619,4.297,620,4.556,621,5.257,823,3.709,824,3.413,825,3.413,829,3.583,1517,5.346,1522,5.257,1523,4.867,1572,7.709]],["title/classes/UpdateUserDto.html",[26,0.256,1573,2.996]],["body/classes/UpdateUserDto.html",[3,0.119,4,0.119,5,0.062,7,0.446,10,1.538,11,0.01,13,0.542,16,0.216,25,0.119,26,0.428,33,0.008,34,0.008,111,1.041,130,0.522,168,4.097,190,1.527,226,2.038,265,2.387,340,2.69,462,1.007,492,3.362,500,1.498,513,2.484,515,1.787,516,1.787,517,1.933,528,3.864,529,4.097,540,3.665,543,4.273,552,3.196,824,3.069,825,3.069,829,3.362,1573,5.016,1574,5.359,1575,7.233,1576,5.908,1577,5.908]],["title/classes/UpdatedBy.html",[26,0.256,459,1.655]],["body/classes/UpdatedBy.html",[3,0.106,4,0.106,5,0.055,7,0.4,10,1.757,11,0.01,13,0.619,16,0.224,25,0.106,26,0.479,33,0.008,34,0.008,82,1.531,111,1.07,130,0.715,226,1.902,250,1.572,265,2.27,271,1.987,459,3.1,462,0.901,466,2.644,470,2.027,492,3.957,499,4.612,500,1.341,508,3.125,513,2.838,515,1.307,516,1.667,517,1.414,548,1.967,549,2.459,582,3.281,583,3.125,584,3.668,587,3.125,615,3.668,617,4.681,622,5.001,818,5.132,819,5.156,823,2.986,824,2.748,825,3.507,826,3.919,827,5.401,828,3.46,829,2.459,830,4.232,1578,5.29,1579,5.29,1580,5.29]],["title/classes/User.html",[26,0.256,132,1.356]],["body/classes/User.html",[3,0.071,4,0.071,5,0.037,7,0.267,10,2.215,11,0.01,13,0.78,16,0.167,25,0.121,26,0.21,33,0.006,34,0.006,65,1.111,82,1.485,106,1.442,111,1.268,129,0.607,130,0.791,132,1.61,190,0.747,199,4.472,226,1.446,265,2.022,271,1.959,272,3.408,273,3.408,274,2.622,275,3.017,276,2.783,293,2.806,334,2.313,385,2.229,392,3.154,410,2.711,459,2.313,460,2.806,462,0.603,464,3.566,465,3.566,466,3.017,467,5.277,470,3.144,472,3.911,473,4.189,478,2.258,484,5.303,485,2.196,486,3.032,487,2.196,488,3.779,543,3.566,656,2.455,661,2.196,664,2.622,676,2.455,845,1.801,1348,4.106,1581,2.622,1582,3.54,1583,3.54,1584,3.54,1585,3.54,1586,3.54,1587,3.54,1588,3.54,1589,3.54,1590,3.54,1591,3.54,1592,3.54,1593,3.54,1594,3.54,1595,3.54,1596,3.54,1597,3.54,1598,3.54,1599,3.113]],["title/controllers/UsersController.html",[0,1.356,1600,3.201]],["body/controllers/UsersController.html",[0,1.254,2,1.254,3,0.08,4,0.08,5,0.042,7,0.302,8,1.007,10,1.916,11,0.01,13,0.675,15,1.361,16,0.211,18,0.759,21,3.026,22,1.735,25,0.08,26,0.236,29,1.997,31,1.289,33,0.006,34,0.006,80,1.53,93,3.037,97,1.954,111,1.233,116,1.924,124,3.152,128,1.514,129,0.675,130,0.651,131,1.436,132,2.798,133,3.226,155,3.026,157,2.255,163,1.997,168,3.879,169,1.735,192,2.899,231,3.644,248,2.77,265,1.22,280,2.629,290,3.513,292,3.513,293,1.857,294,3.513,323,2.629,324,2.803,325,2.429,326,2.429,330,1.857,331,3.25,337,2.6,338,1.794,339,3.196,340,2.913,342,1.857,343,2.478,349,3.158,350,2.36,351,2.512,358,1.924,359,2.478,361,4.475,362,3.196,363,3.196,365,2.36,366,2.36,369,3.196,372,2.36,373,3.513,374,2.36,528,2.613,540,4.732,999,2.613,1011,3.513,1274,2.77,1573,5.291,1574,2.959,1600,4.144,1601,3.513,1602,3.513,1603,3.513,1604,3.995,1605,3.995,1606,3.995,1607,3.995,1608,3.995,1609,3.995,1610,3.995,1611,3.995,1612,3.995,1613,3.995,1614,3.995,1615,3.995,1616,3.995,1617,3.995]],["title/modules/UsersModule.html",[35,1.155,58,2.826]],["body/modules/UsersModule.html",[2,2.178,3,0.111,4,0.111,5,0.058,11,0.01,16,0.231,18,1.05,25,0.111,26,0.327,33,0.008,34,0.008,35,2.028,37,2.401,38,2.482,39,2.663,40,2.663,41,2.482,42,3.655,43,3.655,58,5.555,59,3.343,60,2.663,61,2.663,63,2.663,64,2.99,65,1.735,129,0.637,132,1.735,231,4.98,248,3.834,276,2.324,383,3.121,385,3.015,656,4.814,657,4.095,660,4.54,661,3.429,662,4.862,664,4.095,1600,5.621,1618,4.862,1619,5.528,1620,4.862,1621,5.528,1622,5.528]],["title/injectables/UsersService.html",[107,1.013,231,2.439]],["body/injectables/UsersService.html",[3,0.048,4,0.048,5,0.025,7,0.179,8,0.681,11,0.01,13,0.688,15,0.873,16,0.213,18,0.451,22,1.032,25,0.048,26,0.141,27,1.592,28,1.76,31,1.333,33,0.004,34,0.004,65,0.745,79,1.234,80,1.809,81,1.234,82,1.366,93,2.856,94,1.067,97,1.736,107,0.888,108,0.938,111,1.079,124,2.402,128,1.107,129,0.688,130,0.476,131,1.05,132,2.353,133,2.36,152,3.523,167,1.647,168,3.274,176,4.236,183,3.03,190,1.607,192,3.16,199,3.99,226,1.067,231,2.138,236,3.33,241,3.03,243,2.329,247,2.929,253,1.914,254,1.187,263,1.76,265,2.203,271,2.144,272,3.041,273,3.041,274,2.339,275,2.692,276,2.765,280,1.923,296,2.789,305,2.665,306,2.12,307,1.901,317,3.03,318,3.03,323,1.542,324,1.644,325,2.339,326,2.05,330,1.76,331,2.194,334,1.451,337,2.194,340,2.188,351,2.12,388,3.713,392,2.553,397,1.341,399,1.474,400,1.403,401,1.403,410,1.067,411,2.929,412,1.474,413,1.474,414,1.474,415,1.474,416,1.474,417,1.474,418,1.474,419,2.642,420,2.349,421,2.349,423,2.349,424,1.474,425,2.349,427,1.474,428,1.474,429,1.474,430,1.474,431,1.474,432,1.474,433,1.474,434,1.474,435,2.237,436,1.403,437,2.789,438,1.474,439,1.104,440,2.349,441,2.349,442,1.403,443,1.474,444,2.349,445,1.403,446,1.474,447,1.474,448,1.474,449,1.474,450,0.883,451,1.474,452,1.067,453,2.349,455,2.349,459,0.91,460,1.104,528,1.554,540,3.889,543,4.034,657,1.76,661,1.474,668,2.089,670,3.777,673,3.33,676,1.647,678,1.554,681,2.805,686,1.901,707,2.805,708,2.805,709,3.03,712,3.33,714,1.901,716,3.03,730,2.089,804,3.03,1082,3.735,1117,2.089,1118,2.089,1179,3.274,1311,2.805,1425,4.152,1426,4.707,1474,2.089,1488,2.089,1550,3.33,1551,3.33,1573,3.735,1574,1.76,1603,3.33,1623,2.089,1624,4.721,1625,4.721,1626,6.577,1627,4.721,1628,4.721,1629,2.375,1630,2.375,1631,2.375,1632,2.375,1633,2.375,1634,2.375,1635,2.375,1636,2.375,1637,2.375,1638,2.375,1639,2.375,1640,2.375,1641,2.375,1642,2.375,1643,2.375,1644,2.375,1645,2.375,1646,2.089,1647,2.375,1648,3.786,1649,2.375,1650,2.375,1651,3.786,1652,5.386,1653,3.786,1654,3.786,1655,2.375,1656,3.786,1657,3.786,1658,2.375,1659,4.721,1660,2.375,1661,3.786,1662,2.375,1663,2.375,1664,2.375]],["title/coverage.html",[1665,5.194]],["body/coverage.html",[0,2.409,1,1.822,5,0.041,6,2.163,11,0.01,21,1.33,23,1.609,26,0.522,33,0.004,34,0.004,41,1.104,107,1.893,109,2.163,114,1.822,115,2.163,124,0.942,130,0.611,132,1.516,135,1.609,152,1.609,161,1.526,163,1.229,164,1.822,165,1.968,167,1.705,170,1.388,208,1.705,209,1.705,225,2.163,231,1.388,276,1.034,306,1.104,320,1.822,321,2.163,328,1.609,334,1.85,346,1.705,352,1.609,354,1.705,356,1.822,381,1.822,386,2.163,398,1.822,459,0.942,463,3.578,490,2.546,491,3.578,501,1.278,502,1.278,503,1.602,504,1.278,505,1.705,506,1.278,509,1.526,528,2.546,529,3.809,533,1.229,534,1.609,535,1.945,536,1.229,537,1.609,538,1.609,540,1.526,551,3.114,558,1.705,559,1.822,560,3.114,573,1.609,574,1.705,575,3.114,582,1.526,583,2.299,584,3.809,599,1.453,600,1.453,601,1.526,603,1.609,604,1.705,605,3.114,613,1.184,619,1.609,620,1.705,621,3.114,631,1.705,632,2.163,646,1.822,647,2.163,649,1.609,656,1.705,658,1.705,660,1.609,665,2.163,676,1.705,677,1.705,678,1.609,679,1.822,680,1.968,681,1.822,696,4.543,735,2.163,736,1.822,737,2.163,743,1.705,758,1.609,760,1.822,786,1.822,790,2.163,801,1.822,802,2.163,818,1.526,819,3.35,828,1.609,831,2.546,833,2.163,834,3.939,868,1.388,873,3.939,909,3.809,943,2.163,951,1.278,973,3.578,992,1.705,993,1.705,995,1.822,996,2.163,1004,1.705,1006,1.609,1009,1.822,1024,2.163,1046,1.968,1047,2.163,1048,3.114,1065,1.968,1066,1.968,1092,2.163,1108,2.163,1121,1.822,1122,2.163,1133,1.609,1135,1.453,1136,1.705,1177,1.705,1195,2.163,1196,2.163,1257,3.578,1270,1.822,1271,2.163,1279,1.705,1281,1.609,1284,1.822,1300,2.163,1330,3.114,1334,1.822,1339,1.822,1346,1.526,1347,3.578,1363,1.822,1365,1.822,1367,1.822,1368,2.163,1383,1.609,1403,2.163,1430,3.578,1443,1.822,1444,2.163,1451,1.705,1454,1.822,1466,2.163,1490,3.578,1503,1.822,1504,2.163,1517,1.705,1520,1.609,1523,1.822,1524,1.968,1538,2.163,1573,1.705,1574,1.822,1581,3.578,1600,1.822,1601,2.163,1623,2.163,1665,2.163,1666,2.459,1667,2.459,1668,2.459,1669,6.667,1670,6.913,1671,5.492,1672,6.913,1673,8.637,1674,8.354,1675,6.667,1676,4.83,1677,5.492,1678,8.073,1679,6.667,1680,4.248,1681,5.863,1682,2.459,1683,2.163,1684,2.459,1685,2.459,1686,3.892,1687,2.459,1688,2.459,1689,2.459,1690,2.459]],["title/dependencies.html",[38,2.335,1691,3.17]],["body/dependencies.html",[11,0.01,18,1.041,20,3.238,26,0.409,33,0.008,34,0.008,38,2.461,65,1.72,67,4.385,69,4.385,79,2.847,80,2.1,81,2.847,82,1.998,172,3.4,212,4.385,214,3.585,218,4.385,256,5.599,283,4.385,351,2.461,400,3.238,401,3.238,500,1.39,508,3.238,757,4.06,810,4.385,824,2.847,825,2.847,1064,4.06,1100,4.82,1113,4.82,1129,4.06,1130,4.385,1131,4.82,1338,4.385,1646,4.82,1692,5.481,1693,7.934,1694,5.481,1695,7.558,1696,5.481,1697,5.481,1698,5.481,1699,5.481,1700,5.481,1701,5.481,1702,5.481,1703,5.481,1704,5.481,1705,5.481,1706,5.481,1707,5.481,1708,5.481,1709,5.481,1710,4.82,1711,5.481,1712,5.481,1713,5.481,1714,5.481,1715,5.481,1716,5.481,1717,5.481,1718,5.481,1719,5.481,1720,5.481,1721,5.481,1722,5.481,1723,5.481]],["title/index.html",[7,0.272,1724,3.604,1725,3.604]],["body/index.html",[5,0.046,11,0.01,33,0.007,34,0.007,250,2.271,253,2.082,254,3.408,255,3.9,258,3.904,280,1.806,308,5.286,313,6.303,435,2.62,436,3.551,437,2.62,442,2.62,445,3.551,450,2.235,452,1.991,516,1.887,608,3.9,707,5.66,708,3.285,711,3.9,725,3.548,854,2.061,858,1.991,861,3.551,866,1.649,879,2.62,895,2.62,946,5.286,959,5.286,1087,5.286,1116,3.9,1129,3.285,1162,3.9,1726,4.435,1727,4.435,1728,8.399,1729,8.308,1730,4.435,1731,4.435,1732,4.435,1733,4.435,1734,4.435,1735,4.435,1736,6.819,1737,4.435,1738,4.435,1739,4.435,1740,6.011,1741,6.011,1742,4.435,1743,6.011,1744,4.435,1745,6.011,1746,6.011,1747,6.011,1748,6.819,1749,3.548,1750,4.435,1751,4.435,1752,4.435,1753,6.011,1754,4.435,1755,4.435,1756,4.435,1757,4.435,1758,4.435,1759,6.011,1760,4.435,1761,8.196,1762,4.435,1763,6.819,1764,6.011,1765,6.011,1766,4.435,1767,4.435,1768,6.011,1769,6.011,1770,7.31,1771,6.819,1772,4.435,1773,4.435,1774,4.435,1775,4.435,1776,4.435,1777,4.435,1778,4.435,1779,4.435,1780,4.435,1781,4.435,1782,4.435,1783,4.435,1784,6.011,1785,6.011,1786,4.435,1787,4.435,1788,3.9,1789,4.435,1790,4.435,1791,4.435,1792,6.011,1793,4.435,1794,4.435,1795,4.435,1796,4.435,1797,4.435,1798,4.435,1799,4.435,1800,4.435,1801,4.435,1802,4.435,1803,4.435,1804,4.435,1805,4.435,1806,4.435,1807,4.435]],["title/modules.html",[37,2.565]],["body/modules.html",[11,0.008,33,0.008,34,0.008,36,4.438,37,2.602,47,4.154,48,4.154,49,4.154,50,4.154,51,4.154,52,4.154,53,4.154,54,4.154,55,4.154,56,3.918,57,4.154,58,3.918,1808,8.912,1809,8.912,1810,8.912,1811,8.943,1812,5.99,1813,5.99]],["title/overview.html",[1814,5.194]],["body/overview.html",[2,1.328,11,0.01,23,4.353,33,0.007,34,0.007,35,1.131,36,6.624,37,1.837,38,1.9,39,2.038,40,2.038,41,1.9,42,2.038,43,2.038,44,3.721,45,3.721,46,3.721,47,5.955,48,5.386,49,5.518,50,5.212,51,4.615,52,5.212,53,5.212,54,5.212,55,5.212,56,5.204,57,5.212,58,5.204,59,2.804,60,2.038,61,2.038,108,1.671,161,4.936,170,4.492,204,3.721,205,3.721,207,3.721,208,4.615,209,4.615,231,4.576,251,3.134,352,5.204,376,3.721,377,3.721,378,3.721,462,0.721,649,4.353,652,3.721,653,3.721,758,4.353,781,3.721,782,3.721,832,3.385,1006,4.353,1018,3.721,1019,3.721,1133,4.353,1170,3.721,1171,3.721,1281,4.353,1296,3.721,1297,3.721,1383,4.353,1397,3.721,1398,3.721,1461,3.721,1462,3.721,1463,3.721,1520,4.353,1534,3.721,1535,3.721,1618,3.721,1620,3.721,1814,3.721,1815,5.821,1816,4.231,1817,4.231]],["title/properties.html",[226,1.465,1691,3.17]],["body/properties.html",[11,0.01,33,0.009,34,0.009,226,1.91,406,3.388,516,1.674,725,5.423,1749,5.423,1788,5.961,1818,6.778,1819,6.778,1820,6.778,1821,6.778,1822,6.778]],["title/miscellaneous/typealiases.html",[1823,2.67,1824,5.199]],["body/miscellaneous/typealiases.html",[7,0.482,11,0.009,33,0.009,34,0.009,130,0.564,398,5.611,463,4.723,486,5.168,676,5.252,677,5.252,678,4.954,973,4.723,992,5.252,1136,5.252,1257,4.723,1347,4.723,1363,5.611,1430,4.723,1490,4.723,1581,4.723,1823,4.723,1825,6.375,1826,5.607,1827,5.607,1828,5.607,1829,5.607,1830,5.607,1831,5.607,1832,5.607]],["title/miscellaneous/variables.html",[1823,2.67,1833,4.572]],["body/miscellaneous/variables.html",[5,0.016,7,0.114,8,0.271,11,0.01,19,0.888,21,2.193,31,0.263,33,0.003,34,0.003,35,2.144,41,1.163,80,2.492,97,0.362,106,1.862,111,0.719,116,0.724,129,0.736,130,0.473,132,1.855,133,0.752,146,1.203,155,3.057,163,1.295,176,4.488,190,0.965,192,1.163,243,2.468,265,2.637,268,2.473,270,2.983,271,2.153,276,1.705,280,2.035,283,1.203,293,3.729,306,0.675,322,4.02,323,2.035,334,1.751,335,3.997,340,1.858,349,2.82,381,1.919,410,3.602,419,0.675,459,0.576,463,1.114,464,4.739,465,4.739,466,4.009,489,1.323,513,1.089,576,5.247,577,5.563,587,0.888,613,2.202,656,1.796,658,1.796,660,1.694,679,1.919,680,2.072,681,1.919,696,4.009,716,6.446,734,1.114,738,1.203,748,1.323,844,2.909,951,2.375,973,1.114,993,1.796,994,1.323,997,3.657,1053,1.114,1056,1.114,1065,2.072,1066,2.072,1068,1.323,1177,1.796,1257,1.114,1269,1.323,1334,2.527,1346,2.835,1347,1.114,1365,1.919,1366,1.323,1369,4.706,1430,1.114,1442,1.323,1445,4.393,1490,1.114,1502,1.323,1524,2.072,1581,1.114,1599,1.323,1602,4.02,1680,1.323,1681,1.323,1683,1.323,1710,1.323,1749,1.203,1823,1.114,1826,1.323,1827,1.323,1828,1.323,1829,1.323,1830,1.323,1831,1.323,1832,1.323,1833,1.323,1834,3.411,1835,1.504,1836,5.35,1837,1.504,1838,1.504,1839,2.59,1840,8.056,1841,8.625,1842,8.625,1843,2.59,1844,8.022,1845,1.504,1846,3.411,1847,2.59,1848,1.504,1849,2.59,1850,1.504,1851,2.59,1852,1.504,1853,2.59,1854,1.504,1855,2.59,1856,1.504,1857,1.504,1858,1.504,1859,2.59,1860,1.504,1861,3.411,1862,2.59,1863,1.504,1864,2.59,1865,1.504,1866,2.59,1867,1.504,1868,1.504,1869,1.504,1870,2.59,1871,1.504,1872,2.59,1873,2.59,1874,1.504,1875,3.411,1876,2.59,1877,1.504,1878,2.59,1879,1.504,1880,2.59,1881,1.504,1882,2.59,1883,1.504,1884,2.59,1885,2.59,1886,1.504,1887,4.995,1888,2.59,1889,1.504,1890,3.411,1891,2.59,1892,1.504,1893,2.59,1894,1.504,1895,2.59,1896,1.504,1897,1.504,1898,2.59,1899,1.504,1900,2.59,1901,2.59,1902,1.504,1903,2.59,1904,1.504,1905,3.411,1906,2.59,1907,1.504,1908,2.59,1909,1.504,1910,2.59,1911,1.504,1912,2.59,1913,2.59,1914,1.504,1915,2.59,1916,1.504,1917,3.411,1918,2.59,1919,1.504,1920,2.59,1921,1.504,1922,2.59,1923,1.504,1924,1.504,1925,1.504,1926,1.504,1927,1.504,1928,1.504,1929,1.504,1930,1.504,1931,1.504,1932,1.504,1933,1.504,1934,1.504,1935,1.504,1936,1.504,1937,1.504,1938,1.504,1939,4.054,1940,1.504,1941,1.504,1942,1.504,1943,1.504,1944,1.504,1945,1.504,1946,1.504,1947,1.504,1948,1.504,1949,1.504,1950,1.504,1951,1.504,1952,1.504,1953,1.504,1954,1.504,1955,1.504,1956,1.504,1957,1.504,1958,1.504,1959,1.504,1960,1.504,1961,1.504,1962,1.504,1963,1.504,1964,1.504,1965,1.504]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":696,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"controllers/MailController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0')@responsemessage('send",{"_index":1126,"title":{},"body":{"controllers/MailController.html":{}}}],["0.0.1",{"_index":1818,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":1702,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":1721,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1701,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":1716,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1673,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1686,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1685,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1677,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1688,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1684,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1687,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1682,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1669,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1674,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1672,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1676,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1670,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1675,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1671,"title":{},"body":{"coverage.html":{}}}],["0365741416",{"_index":720,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["06",{"_index":1842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":419,"title":{"classes/Company-1.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsNameValidConstraint-1.html":{}},"body":{"injectables/CompaniesService.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":1718,"title":{},"body":{"dependencies.html":{}}}],["1.0.15",{"_index":1723,"title":{},"body":{"dependencies.html":{}}}],["1.4.7",{"_index":1704,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["1000",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["1024",{"_index":771,"title":{},"body":{"controllers/FilesController.html":{}}}],["11.0.0",{"_index":1695,"title":{},"body":{"dependencies.html":{}}}],["11.0.5",{"_index":1693,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":1815,"title":{},"body":{"overview.html":{}}}],["15t06:47:49.369z",{"_index":1856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:48:22.224z",{"_index":1859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:51:01.241z",{"_index":1862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:51:23.973z",{"_index":1864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:54:05.131z",{"_index":1857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:54:32.799z",{"_index":1866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:59:31.898z",{"_index":1843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:59:51.041z",{"_index":1847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:00:13.364z",{"_index":1849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:00:41.934z",{"_index":1851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:00:56.274z",{"_index":1853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:01:36.923z",{"_index":1870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:06:16.508z",{"_index":1873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:06:33.697z",{"_index":1876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:06:46.085z",{"_index":1878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:07:24.175z",{"_index":1880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:07:37.896z",{"_index":1882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:08:14.659z",{"_index":1885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:08:33.395z",{"_index":1888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:08:50.801z",{"_index":1891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:09:15.785z",{"_index":1893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:09:41.694z",{"_index":1895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:10:05.961z",{"_index":1898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:10:50.946z",{"_index":1901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:11:10.914z",{"_index":1903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:11:33.234z",{"_index":1906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:11:48.081z",{"_index":1908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:12:11.323z",{"_index":1910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:12:51.974z",{"_index":1913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:06.618z",{"_index":1915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:20.853z",{"_index":1918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:36.836z",{"_index":1920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:52.798z",{"_index":1922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18",{"_index":1816,"title":{},"body":{"overview.html":{}}}],["2",{"_index":251,"title":{"classes/Company-2.html":{},"classes/IsNameValidConstraint-2.html":{}},"body":{"injectables/AuthService.html":{},"overview.html":{}}}],["2.0.2",{"_index":1692,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":1696,"title":{},"body":{"dependencies.html":{}}}],["2.1.3",{"_index":1713,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":1700,"title":{},"body":{"dependencies.html":{}}}],["20.14.0",{"_index":1750,"title":{},"body":{"index.html":{}}}],["200",{"_index":889,"title":{},"body":{"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{}}}],["2023",{"_index":1841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["255",{"_index":878,"title":{},"body":{"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{}}}],["26",{"_index":727,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["3.1.10",{"_index":1707,"title":{},"body":{"dependencies.html":{}}}],["3.5.0",{"_index":1705,"title":{},"body":{"dependencies.html":{}}}],["32",{"_index":719,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["4.0.0",{"_index":1694,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":1717,"title":{},"body":{"dependencies.html":{}}}],["4.7.8",{"_index":1709,"title":{},"body":{"dependencies.html":{}}}],["49",{"_index":1817,"title":{},"body":{"overview.html":{}}}],["5",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FilesController.html":{}}}],["5.0.1",{"_index":1697,"title":{},"body":{"dependencies.html":{}}}],["5.4.0",{"_index":1699,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":948,"title":{},"body":{"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{}}}],["6.10.0",{"_index":1715,"title":{},"body":{"dependencies.html":{}}}],["6.4.0",{"_index":1698,"title":{},"body":{"dependencies.html":{}}}],["60000",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["648ab415f4328bd3153ee211",{"_index":1854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab436f4328bd3153ee216",{"_index":1858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab4d5f4328bd3153ee21b",{"_index":1860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab4ebf4328bd3153ee220",{"_index":1863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab5a8072f2a2ef910638d",{"_index":1865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6d3fa16b294212e4033",{"_index":1838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6e7fa16b294212e4038",{"_index":1845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6fdfa16b294212e403d",{"_index":1848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab719fa16b294212e4042",{"_index":1850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab728fa16b294212e4047",{"_index":1852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab750fa16b294212e404c",{"_index":1867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad488dafdb9754f40b846",{"_index":1871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad499dafdb9754f40b84b",{"_index":1874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4a6dafdb9754f40b850",{"_index":1877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4ccdafdb9754f40b859",{"_index":1879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4d9dafdb9754f40b85e",{"_index":1881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4fedafdb9754f40b863",{"_index":1883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad511dafdb9754f40b868",{"_index":1886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad522dafdb9754f40b86d",{"_index":1889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad53bdafdb9754f40b872",{"_index":1892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad555dafdb9754f40b877",{"_index":1894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad56ddafdb9754f40b87c",{"_index":1896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad59adafdb9754f40b881",{"_index":1899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5aedafdb9754f40b886",{"_index":1902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5c5dafdb9754f40b88b",{"_index":1904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5d4dafdb9754f40b890",{"_index":1907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5ebdafdb9754f40b895",{"_index":1909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad613dafdb9754f40b89a",{"_index":1911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad622dafdb9754f40b89f",{"_index":1914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad630dafdb9754f40b8a6",{"_index":1916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad640dafdb9754f40b8ab",{"_index":1919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad650dafdb9754f40b8b0",{"_index":1921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6792d1fd4b0b913cf722ef75",{"_index":1840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["69",{"_index":729,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["7.8.1",{"_index":1722,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":1711,"title":{},"body":{"dependencies.html":{}}}],["8.9.5",{"_index":1712,"title":{},"body":{"dependencies.html":{}}}],["9._",{"_index":923,"title":{},"body":{"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{}}}],["9\\s",{"_index":903,"title":{},"body":{"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{}}}],["9]+$/.test(value.tostring",{"_index":867,"title":{},"body":{"classes/IsActiveValidConstraint.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{}}}],["9]/.test(localpart",{"_index":919,"title":{},"body":{"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{}}}],["__v",{"_index":1844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_id",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["_id.tostring",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["access_token",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["action",{"_index":797,"title":{},"body":{"injectables/FilesService.html":{}}}],["adapter",{"_index":1191,"title":{},"body":{"modules/MailModule.html":{}}}],["add",{"_index":712,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["addfiletypevalidator",{"_index":766,"title":{},"body":{"controllers/FilesController.html":{}}}],["addmaxsizevalidator",{"_index":769,"title":{},"body":{"controllers/FilesController.html":{}}}],["address",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["addressregex",{"_index":901,"title":{},"body":{"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{}}}],["addressregex.test(value",{"_index":904,"title":{},"body":{"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{}}}],["adds",{"_index":798,"title":{},"body":{"injectables/FilesService.html":{}}}],["admin",{"_index":701,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{}}}],["admin@gmail.com",{"_index":716,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["admin_role",{"_index":679,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["adminrole",{"_index":713,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["adminrole?._id",{"_index":723,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["age",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["alias",{"_index":1679,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":1825,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":732,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{}}}],["ang",{"_index":1772,"title":{},"body":{"index.html":{}}}],["api",{"_index":400,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["api/v1/companies",{"_index":1855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/companies/:id",{"_index":1861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/files/upload",{"_index":1869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/jobs",{"_index":1872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/jobs/:id",{"_index":1875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/permissions",{"_index":1900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/permissions/:id",{"_index":1905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes",{"_index":1884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes/:id",{"_index":1890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes/by",{"_index":1897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/roles",{"_index":1912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/roles/:id",{"_index":1917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/users",{"_index":1839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/users/:id",{"_index":1846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apipath",{"_index":576,"title":{},"body":{"classes/CreatePermissionDto.html":{},"interfaces/IUser.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["apipath=${apipath",{"_index":1309,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["app",{"_index":1924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.enablecors",{"_index":1942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.enableversioning",{"_index":1948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.get(configservice",{"_index":1926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.get(reflector",{"_index":1927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.listen(port",{"_index":1954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.setbaseviewsdir(join(__dirname",{"_index":1933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.setglobalprefix('api",{"_index":1947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.setviewengine('ejs",{"_index":1935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.use(cookieparser",{"_index":1940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.use(helmet",{"_index":1951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.useglobalguards(new",{"_index":1928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.useglobalinterceptors(new",{"_index":1930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.useglobalpipes",{"_index":1936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.usestaticassets(join(__dirname",{"_index":1932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":36,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":23,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["aqp",{"_index":399,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["aqp(reqstring",{"_index":415,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["args",{"_index":840,"title":{},"body":{"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{}}}],["args.value",{"_index":851,"title":{},"body":{"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{}}}],["array",{"_index":615,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/History.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{}}}],["array'})@isstring({each",{"_index":627,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["array'})@validatenested()@type(undefined",{"_index":1569,"title":{},"body":{"classes/UpdateResumeDto.html":{}}}],["array.isarray(value",{"_index":852,"title":{},"body":{"classes/IsActiveValidConstraint.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{}}}],["async",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["atindex",{"_index":913,"title":{},"body":{"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{}}}],["auth",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"modules/MailModule.html":{}}}],["auth.guard",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.guard.ts",{"_index":1048,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:13",{"_index":1054,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:18",{"_index":1057,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:29",{"_index":1060,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authcontroller",{"_index":114,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":1063,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":1049,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":1107,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":47,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1821,"title":{},"body":{"properties.html":{}}}],["authservice",{"_index":161,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":1813,"title":{},"body":{"modules.html":{}}}],["await",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["backend",{"_index":1726,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception('không",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception('not",{"_index":1320,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{}}}],["badrequestexception(`not",{"_index":454,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["badrequestexception(`role",{"_index":1475,"title":{},"body":{"injectables/RolesService.html":{}}}],["bao",{"_index":926,"title":{},"body":{"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{}}}],["basename",{"_index":1253,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["bcryptjs",{"_index":1646,"title":{},"body":{"injectables/UsersService.html":{},"dependencies.html":{}}}],["biệt",{"_index":879,"title":{},"body":{"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"index.html":{}}}],["body",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["body(\"status",{"_index":1394,"title":{},"body":{"controllers/ResumesController.html":{}}}],["boolean",{"_index":478,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["boolean(isinit",{"_index":689,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["bootstrap",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["break",{"_index":1226,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["browse",{"_index":1811,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1808,"title":{},"body":{"modules.html":{}}}],["build",{"_index":772,"title":{},"body":{"controllers/FilesController.html":{}}}],["bulk",{"_index":698,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["bạn",{"_index":1087,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"index.html":{}}}],["bản",{"_index":440,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["bắt",{"_index":862,"title":{},"body":{"classes/IsActiveValidConstraint.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{}}}],["bằng",{"_index":864,"title":{},"body":{"classes/IsActiveValidConstraint.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{}}}],["c",{"_index":516,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"injectables/JwtAuthGuard.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"index.html":{},"properties.html":{}}}],["ca",{"_index":1793,"title":{},"body":{"index.html":{}}}],["call",{"_index":1144,"title":{},"body":{"controllers/MailController.html":{}}}],["callhandler",{"_index":1333,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["canactivate",{"_index":1050,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["canactivate(context",{"_index":1055,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["case",{"_index":1221,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["catch",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["cb",{"_index":1238,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["cb(null",{"_index":1246,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ch",{"_index":710,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{}}}],["check",{"_index":804,"title":{},"body":{"controllers/HealthController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/UsersService.html":{}}}],["chuỗi",{"_index":859,"title":{},"body":{"classes/IsActiveValidConstraint.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{}}}],["chào",{"_index":1760,"title":{},"body":{"index.html":{}}}],["chính",{"_index":1119,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["chơi",{"_index":1795,"title":{},"body":{"index.html":{}}}],["chạy",{"_index":1748,"title":{},"body":{"index.html":{}}}],["chấm",{"_index":884,"title":{},"body":{"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{}}}],["chọn",{"_index":898,"title":{},"body":{"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{}}}],["chứa",{"_index":857,"title":{},"body":{"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{}}}],["class",{"_index":26,"title":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/File.html":{},"classes/History.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":462,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/File.html":{},"classes/History.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"overview.html":{}}}],["clone",{"_index":1751,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":204,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":207,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":206,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":205,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_companiesmodule",{"_index":376,"title":{},"body":{"modules/CompaniesModule.html":{},"overview.html":{}}}],["cluster_companiesmodule_exports",{"_index":378,"title":{},"body":{"modules/CompaniesModule.html":{},"overview.html":{}}}],["cluster_companiesmodule_providers",{"_index":377,"title":{},"body":{"modules/CompaniesModule.html":{},"overview.html":{}}}],["cluster_databasesmodule",{"_index":652,"title":{},"body":{"modules/DatabasesModule.html":{},"overview.html":{}}}],["cluster_databasesmodule_providers",{"_index":653,"title":{},"body":{"modules/DatabasesModule.html":{},"overview.html":{}}}],["cluster_filesmodule",{"_index":781,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_providers",{"_index":782,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_jobsmodule",{"_index":1018,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_jobsmodule_providers",{"_index":1019,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":1170,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":1171,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_permissionsmodule",{"_index":1296,"title":{},"body":{"modules/PermissionsModule.html":{},"overview.html":{}}}],["cluster_permissionsmodule_providers",{"_index":1297,"title":{},"body":{"modules/PermissionsModule.html":{},"overview.html":{}}}],["cluster_resumesmodule",{"_index":1397,"title":{},"body":{"modules/ResumesModule.html":{},"overview.html":{}}}],["cluster_resumesmodule_providers",{"_index":1398,"title":{},"body":{"modules/ResumesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule",{"_index":1461,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule_exports",{"_index":1462,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule_providers",{"_index":1463,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_subscribersmodule",{"_index":1534,"title":{},"body":{"modules/SubscribersModule.html":{},"overview.html":{}}}],["cluster_subscribersmodule_providers",{"_index":1535,"title":{},"body":{"modules/SubscribersModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1618,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1620,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1619,"title":{},"body":{"modules/UsersModule.html":{}}}],["companies",{"_index":322,"title":{},"body":{"controllers/CompaniesController.html":{},"miscellaneous/variables.html":{}}}],["companiescontroller",{"_index":320,"title":{"controllers/CompaniesController.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"coverage.html":{}}}],["companiesmodule",{"_index":48,"title":{"modules/CompaniesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CompaniesModule.html":{},"modules.html":{},"overview.html":{}}}],["companiesservice",{"_index":352,"title":{"injectables/CompaniesService.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"coverage.html":{},"overview.html":{}}}],["company",{"_index":334,"title":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/IsNameValidConstraint.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"classes/Resume.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["company.dto",{"_index":355,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/UpdateCompanyDto.html":{}}}],["company.dto.ts",{"_index":551,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["company.dto.ts:12",{"_index":554,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:15",{"_index":555,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:5",{"_index":1565,"title":{},"body":{"classes/UpdateCompanyDto.html":{}}}],["company.dto.ts:6",{"_index":556,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:9",{"_index":553,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.name",{"_index":384,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/Resume.html":{}}}],["companydocument",{"_index":398,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["companyid",{"_index":585,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["companymodel",{"_index":390,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["companyschema",{"_index":381,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/Company.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["comparesync",{"_index":1643,"title":{},"body":{"injectables/UsersService.html":{}}}],["comparesync(password",{"_index":1658,"title":{},"body":{"injectables/UsersService.html":{}}}],["config",{"_index":1939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configmodule",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forroot",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"miscellaneous/variables.html":{}}}],["configservice.get('email_auth_pass",{"_index":1186,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('email_auth_user",{"_index":1185,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('email_host",{"_index":1183,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('jwt_access_token_secret",{"_index":221,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get('mongo_url",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('port",{"_index":1953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["confirm",{"_index":1166,"title":{},"body":{"controllers/MailController.html":{}}}],["connection",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["connection.plugin(softdeleteplugin",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["connectionfactory",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["console.error(error",{"_index":1235,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["console.log",{"_index":1143,"title":{},"body":{"controllers/MailController.html":{}}}],["console.log('directory",{"_index":1215,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["console.log(`server",{"_index":1955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"injectables/DatabasesService.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/HealthController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":1109,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(companymodel",{"_index":387,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["constructor(configservice",{"_index":1094,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(jobmodel",{"_index":1025,"title":{},"body":{"injectables/JobsService.html":{}}}],["constructor(permissionmodel",{"_index":1301,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["constructor(private",{"_index":358,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/PermissionsController.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{}}}],["constructor(reflector",{"_index":1052,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/TransformInterceptor.html":{}}}],["constructor(resumemodel",{"_index":1405,"title":{},"body":{"injectables/ResumesService.html":{}}}],["constructor(rolemodel",{"_index":1467,"title":{},"body":{"injectables/RolesService.html":{}}}],["constructor(subscribermodel",{"_index":1540,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["constructor(usermodel",{"_index":668,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["contains",{"_index":1230,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["context",{"_index":1058,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/MailController.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["context.getclass",{"_index":1071,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.gethandler",{"_index":1070,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["context.switchtohttp().getrequest",{"_index":1073,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.switchtohttp().getresponse().statuscode",{"_index":1344,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('companies",{"_index":357,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["controller('databases",{"_index":651,"title":{},"body":{"controllers/DatabasesController.html":{}}}],["controller('files",{"_index":762,"title":{},"body":{"controllers/FilesController.html":{}}}],["controller('health",{"_index":811,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller('jobs",{"_index":1010,"title":{},"body":{"controllers/JobsController.html":{}}}],["controller('mail",{"_index":1138,"title":{},"body":{"controllers/MailController.html":{}}}],["controller('permissions",{"_index":1285,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["controller('resumes",{"_index":1386,"title":{},"body":{"controllers/ResumesController.html":{}}}],["controller('roles",{"_index":1455,"title":{},"body":{"controllers/RolesController.html":{}}}],["controller('subscribers",{"_index":1525,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["controller('users",{"_index":1611,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cookie",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["cors",{"_index":1941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["countpermission",{"_index":692,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["countrole",{"_index":694,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["countuser",{"_index":690,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["coverage",{"_index":1665,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":323,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":359,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["create(createcompanydto",{"_index":327,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{}}}],["create(createfiledto",{"_index":791,"title":{},"body":{"injectables/FilesService.html":{}}}],["create(createjobdto",{"_index":998,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["create(createpermissiondto",{"_index":1272,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{}}}],["create(createroledto",{"_index":1446,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["create(createsubscriberdto",{"_index":1506,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["create(createusercvdto",{"_index":1372,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{}}}],["create(createuserdto",{"_index":1603,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createcompanydto",{"_index":328,"title":{"classes/CreateCompanyDto.html":{}},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["createcompanydto.address",{"_index":405,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["createcompanydto.description",{"_index":407,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["createcompanydto.logo",{"_index":409,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["createcompanydto.name",{"_index":404,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["created",{"_index":1217,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["createdat",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["createdby",{"_index":410,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["createfiledto",{"_index":558,"title":{"classes/CreateFileDto.html":{}},"body":{"classes/CreateFileDto.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["createjobdto",{"_index":509,"title":{"classes/CreateJobDto.html":{}},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["createmulteroptions",{"_index":1198,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["createparamdecorator",{"_index":1962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createpermissiondto",{"_index":573,"title":{"classes/CreatePermissionDto.html":{}},"body":{"classes/CreatePermissionDto.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["createresumedto",{"_index":582,"title":{"classes/CreateResumeDto.html":{}},"body":{"classes/CreateResumeDto.html":{},"classes/History.html":{},"controllers/ResumesController.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"coverage.html":{}}}],["createroledto",{"_index":603,"title":{"classes/CreateRoleDto.html":{}},"body":{"classes/CreateRoleDto.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["createsubscriberdto",{"_index":619,"title":{"classes/CreateSubscriberDto.html":{}},"body":{"classes/CreateSubscriberDto.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["createusercvdto",{"_index":631,"title":{"classes/CreateUserCvDto.html":{}},"body":{"classes/CreateUserCvDto.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"coverage.html":{}}}],["createuserdto",{"_index":540,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["credentials",{"_index":1946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cron",{"_index":1131,"title":{},"body":{"controllers/MailController.html":{},"dependencies.html":{}}}],["cron('0",{"_index":1145,"title":{},"body":{"controllers/MailController.html":{}}}],["cron(cronexpression.every_30_seconds",{"_index":1141,"title":{},"body":{"controllers/MailController.html":{}}}],["cronexpression",{"_index":1132,"title":{},"body":{"controllers/MailController.html":{}}}],["ctx",{"_index":1963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":434,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["currentpage",{"_index":337,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["cv.dto",{"_index":1385,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{}}}],["cv.dto.ts",{"_index":632,"title":{},"body":{"classes/CreateUserCvDto.html":{},"coverage.html":{}}}],["cv.dto.ts:10",{"_index":635,"title":{},"body":{"classes/CreateUserCvDto.html":{}}}],["cv.dto.ts:13",{"_index":633,"title":{},"body":{"classes/CreateUserCvDto.html":{}}}],["cv.dto.ts:16",{"_index":634,"title":{},"body":{"classes/CreateUserCvDto.html":{}}}],["cài",{"_index":1752,"title":{},"body":{"index.html":{}}}],["các",{"_index":858,"title":{},"body":{"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"index.html":{}}}],["cách",{"_index":959,"title":{},"body":{"classes/IsPasswordValidConstraint.html":{},"index.html":{}}}],["cái",{"_index":865,"title":{},"body":{"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{}}}],["công",{"_index":946,"title":{},"body":{"classes/IsNameValidConstraint.html":{},"index.html":{}}}],["cũng",{"_index":1790,"title":{},"body":{"index.html":{}}}],["cảm",{"_index":1730,"title":{},"body":{"index.html":{}}}],["cần",{"_index":711,"title":{},"body":{"injectables/DatabasesService.html":{},"index.html":{}}}],["cập",{"_index":1089,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["của",{"_index":1798,"title":{},"body":{"index.html":{}}}],["d",{"_index":1728,"title":{},"body":{"index.html":{}}}],["d+$/.test(value",{"_index":888,"title":{},"body":{"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{}}}],["data",{"_index":734,"title":{},"body":{"injectables/DatabasesService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["databases",{"_index":648,"title":{},"body":{"controllers/DatabasesController.html":{}}}],["databasescontroller",{"_index":646,"title":{"controllers/DatabasesController.html":{}},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"coverage.html":{}}}],["databasesmodule",{"_index":49,"title":{"modules/DatabasesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabasesModule.html":{},"modules.html":{},"overview.html":{}}}],["databasesservice",{"_index":649,"title":{"injectables/DatabasesService.html":{}},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"coverage.html":{},"overview.html":{}}}],["date",{"_index":470,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/History.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{}}}],["date.now()}${extname",{"_index":1256,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["db",{"_index":812,"title":{},"body":{"controllers/HealthController.html":{}}}],["declarations",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"classes/History.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["defaultlimit",{"_index":420,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["defaultmessage",{"_index":836,"title":{},"body":{"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{}}}],["defaultmessage(args",{"_index":837,"title":{},"body":{"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{}}}],["defaultversion",{"_index":1950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"classes/History.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":372,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["delete(':id')@responsemessage('delete",{"_index":343,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["deletedat",{"_index":464,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["deletedby",{"_index":460,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["denied",{"_index":1234,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["dependencies",{"_index":38,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":406,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"properties.html":{}}}],["destination",{"_index":1237,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["di",{"_index":1771,"title":{},"body":{"index.html":{}}}],["dir",{"_index":1188,"title":{},"body":{"modules/MailModule.html":{},"injectables/MulterConfigService.html":{}}}],["directory",{"_index":1225,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["diskstorage",{"_index":1208,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["documentation",{"_index":1666,"title":{},"body":{"coverage.html":{}}}],["domainpart",{"_index":917,"title":{},"body":{"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{}}}],["dài",{"_index":877,"title":{},"body":{"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{}}}],["dùng/ứng",{"_index":705,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["dạng",{"_index":549,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{}}}],["dạng'})@isnotempty({message",{"_index":623,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["dấu",{"_index":880,"title":{},"body":{"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{}}}],["dụng",{"_index":707,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["each",{"_index":612,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{}}}],["edan",{"_index":724,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["edanprince@gmail.com",{"_index":726,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["eexist",{"_index":1222,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ejs",{"_index":1706,"title":{},"body":{"dependencies.html":{}}}],["email",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-2.html":{},"classes/CreateResumeDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["emailregex",{"_index":922,"title":{},"body":{"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{}}}],["emailregex.test(value",{"_index":925,"title":{},"body":{"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{}}}],["end",{"_index":872,"title":{},"body":{"classes/IsActiveValidConstraint.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{}}}],["enddate",{"_index":525,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{}}}],["endpoint",{"_index":1090,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["enotdir",{"_index":1227,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ensureexists",{"_index":1199,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ensureexists(targetdirectory",{"_index":1202,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["env",{"_index":1755,"title":{},"body":{"index.html":{}}}],["err",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{}}}],["error",{"_index":1214,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["error.code",{"_index":1220,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["errorhttpstatuscode",{"_index":773,"title":{},"body":{"controllers/FilesController.html":{}}}],["exec",{"_index":432,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["executioncontext",{"_index":1056,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["exists",{"_index":1218,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["expiresin",{"_index":223,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":746,"title":{},"body":{"controllers/FilesController.html":{}}}],["extends",{"_index":829,"title":{},"body":{"classes/History.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{}}}],["extension",{"_index":1248,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["extname",{"_index":1249,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["extractjwt",{"_index":1098,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":1103,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":844,"title":{},"body":{"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"miscellaneous/variables.html":{}}}],["female",{"_index":893,"title":{},"body":{"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{}}}],["fetch",{"_index":1887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{"classes/File.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["file')@useinterceptors(undefined",{"_index":749,"title":{},"body":{"controllers/FilesController.html":{}}}],["file.dto",{"_index":761,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{}}}],["file.dto.ts",{"_index":560,"title":{},"body":{"classes/CreateFileDto.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["file.filename",{"_index":775,"title":{},"body":{"controllers/FilesController.html":{}}}],["fileinterceptor",{"_index":756,"title":{},"body":{"controllers/FilesController.html":{}}}],["filename",{"_index":751,"title":{},"body":{"controllers/FilesController.html":{},"injectables/MulterConfigService.html":{}}}],["files",{"_index":738,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"miscellaneous/variables.html":{}}}],["filescontroller",{"_index":736,"title":{"controllers/FilesController.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"coverage.html":{}}}],["filesmodule",{"_index":50,"title":{"modules/FilesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules.html":{},"overview.html":{}}}],["filesservice",{"_index":758,"title":{"injectables/FilesService.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"coverage.html":{},"overview.html":{}}}],["filetype",{"_index":767,"title":{},"body":{"controllers/FilesController.html":{}}}],["filter",{"_index":412,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["filter.current",{"_index":416,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["filter.pagesize",{"_index":417,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["finalname",{"_index":1255,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["find",{"_index":1424,"title":{},"body":{"injectables/ResumesService.html":{}}}],["find(filter",{"_index":427,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["findall",{"_index":324,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findall(currentpage",{"_index":330,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findbyusers",{"_index":1404,"title":{},"body":{"injectables/ResumesService.html":{}}}],["findbyusers(user",{"_index":1410,"title":{},"body":{"injectables/ResumesService.html":{}}}],["findone",{"_index":325,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":366,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["findone(id",{"_index":338,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{}}}],["findonebyusername",{"_index":1624,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbytoken",{"_index":1625,"title":{},"body":{"injectables/UsersService.html":{}}}],["folder",{"_index":1239,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["forbiddenexception",{"_index":1061,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["found",{"_index":455,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["foundrole",{"_index":1485,"title":{},"body":{"injectables/RolesService.html":{}}}],["foundrole.name",{"_index":1487,"title":{},"body":{"injectables/RolesService.html":{}}}],["founduser",{"_index":1661,"title":{},"body":{"injectables/UsersService.html":{}}}],["founduser.email",{"_index":1663,"title":{},"body":{"injectables/UsersService.html":{}}}],["fs",{"_index":1210,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["fs.existssync(fullpath",{"_index":1244,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["fs.mkdir(targetdirectory",{"_index":1212,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["fs.mkdirsync(fullpath",{"_index":1245,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["full",{"_index":702,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["fullpath",{"_index":1241,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["gender",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["gensaltsync",{"_index":1644,"title":{},"body":{"injectables/UsersService.html":{}}}],["gensaltsync(10",{"_index":1649,"title":{},"body":{"injectables/UsersService.html":{}}}],["get('/account",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/refresh",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{}}}],["get(':id",{"_index":365,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["get(':id')@responsemessage('fetch",{"_index":1276,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{}}}],["get()@public()@cron('0",{"_index":1125,"title":{},"body":{"controllers/MailController.html":{}}}],["get()@public()@healthcheck",{"_index":805,"title":{},"body":{"controllers/HealthController.html":{}}}],["get()@responsemessage('fetch",{"_index":1274,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["get,head,put,patch,post,delete",{"_index":1944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getresumesbyuser",{"_index":1370,"title":{},"body":{"controllers/ResumesController.html":{}}}],["getresumesbyuser(@user",{"_index":1389,"title":{},"body":{"controllers/ResumesController.html":{}}}],["getresumesbyuser(user",{"_index":1376,"title":{},"body":{"controllers/ResumesController.html":{}}}],["getrootpath",{"_index":1197,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["getskills",{"_index":1539,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["getskills(user",{"_index":1545,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["getting",{"_index":1724,"title":{"index.html":{}},"body":{}}],["getuserskills",{"_index":1505,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["getuserskills(@user",{"_index":1528,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["getuserskills(user",{"_index":1510,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["ghi",{"_index":441,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["gi",{"_index":608,"title":{},"body":{"classes/CreateRoleDto.html":{},"index.html":{}}}],["giãn",{"_index":1797,"title":{},"body":{"index.html":{}}}],["giản",{"_index":1805,"title":{},"body":{"index.html":{}}}],["giới",{"_index":895,"title":{},"body":{"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"index.html":{}}}],["giữa",{"_index":899,"title":{},"body":{"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{}}}],["gmail.com",{"_index":921,"title":{},"body":{"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{}}}],["gmail\\.com",{"_index":924,"title":{},"body":{"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{}}}],["graph",{"_index":1812,"title":{},"body":{"modules.html":{}}}],["gạch",{"_index":882,"title":{},"body":{"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{}}}],["gọn",{"_index":1801,"title":{},"body":{"index.html":{}}}],["gồm",{"_index":927,"title":{},"body":{"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{}}}],["h",{"_index":708,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["handlebars",{"_index":1708,"title":{},"body":{"dependencies.html":{}}}],["handlebarsadapter",{"_index":1173,"title":{},"body":{"modules/MailModule.html":{}}}],["handlegetaccount",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlegetaccount(@user",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlegetaccount(user",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogin",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogin(@req",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogin(req",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogout",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogout(response",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerefreshtoken",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerefreshtoken(request",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleregister",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleregister(@body",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleregister(registeruserdto",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerequest",{"_index":1051,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlerequest(err",{"_index":1059,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handletestemail",{"_index":1124,"title":{},"body":{"controllers/MailController.html":{}}}],["hash",{"_index":1657,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashpassword",{"_index":1626,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashsync",{"_index":1645,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashsync(password",{"_index":1650,"title":{},"body":{"injectables/UsersService.html":{}}}],["health",{"_index":803,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheck",{"_index":807,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":808,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":801,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":51,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["hello",{"_index":112,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":1710,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["hierarchy",{"_index":1229,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["history",{"_index":818,"title":{"classes/History.html":{}},"body":{"classes/History.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"coverage.html":{}}}],["hiểu",{"_index":1802,"title":{},"body":{"index.html":{}}}],["hiện",{"_index":436,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["hiệu",{"_index":1803,"title":{},"body":{"index.html":{}}}],["host",{"_index":1182,"title":{},"body":{"modules/MailModule.html":{}}}],["hoặc",{"_index":900,"title":{},"body":{"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"injectables/JwtAuthGuard.html":{}}}],["http://localhost:${port}/api/v1",{"_index":1957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httponly",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://minhducnguyen.io.vn",{"_index":1788,"title":{},"body":{"index.html":{},"properties.html":{}}}],["httpstatus",{"_index":755,"title":{},"body":{"controllers/FilesController.html":{}}}],["httpstatus.unprocessable_entity",{"_index":774,"title":{},"body":{"controllers/FilesController.html":{}}}],["hydrateddocument",{"_index":486,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["hát",{"_index":1794,"title":{},"body":{"index.html":{}}}],["hãy",{"_index":897,"title":{},"body":{"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{}}}],["hơn",{"_index":891,"title":{},"body":{"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{}}}],["hạn",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{}}}],["hết",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{}}}],["học",{"_index":1774,"title":{},"body":{"index.html":{}}}],["hội",{"_index":1783,"title":{},"body":{"index.html":{}}}],["hợp",{"_index":866,"title":{},"body":{"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"injectables/JwtAuthGuard.html":{},"index.html":{}}}],["hứng",{"_index":1731,"title":{},"body":{"index.html":{}}}],["id",{"_index":340,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company-2.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["id'})@isarray({message",{"_index":614,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["id=${id",{"_index":456,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["identifier",{"_index":1667,"title":{},"body":{"coverage.html":{}}}],["if(jobwithmatchingskills?.length",{"_index":1154,"title":{},"body":{"controllers/MailController.html":{}}}],["ignoreexpiration",{"_index":1104,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ii",{"_index":1758,"title":{},"body":{"index.html":{}}}],["image",{"_index":1247,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["image's",{"_index":1251,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["implements",{"_index":683,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"injectables/MulterConfigService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["init",{"_index":733,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["init_permissions",{"_index":680,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{}}}],["injectable",{"_index":107,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":108,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":397,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(company.name",{"_index":402,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["injectmodel(job.name",{"_index":1035,"title":{},"body":{"injectables/JobsService.html":{},"controllers/MailController.html":{}}}],["injectmodel(permission.name",{"_index":685,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/PermissionsService.html":{}}}],["injectmodel(resume.name",{"_index":1415,"title":{},"body":{"injectables/ResumesService.html":{}}}],["injectmodel(role.name",{"_index":686,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(subscriber.name",{"_index":1139,"title":{},"body":{"controllers/MailController.html":{},"injectables/SubscribersService.html":{}}}],["injectmodel(user.name",{"_index":684,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["injectmodel(usermodal.name",{"_index":1647,"title":{},"body":{"injectables/UsersService.html":{}}}],["install",{"_index":1754,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":930,"title":{},"body":{"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{}}}],["intercept",{"_index":1340,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["intercept(context",{"_index":1562,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["interface",{"_index":831,"title":{"interfaces/IUser.html":{},"interfaces/Response.html":{}},"body":{"interfaces/IUser.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["interfaces",{"_index":832,"title":{},"body":{"interfaces/IUser.html":{},"interfaces/Response.html":{},"overview.html":{}}}],["is_public_key",{"_index":1065,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["is_public_permission",{"_index":1066,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isactive",{"_index":527,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{}}}],["isactivevalidconstraint",{"_index":501,"title":{"classes/IsActiveValidConstraint.html":{}},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"coverage.html":{}}}],["isaddressvalidconstraint",{"_index":533,"title":{"classes/IsAddressValidConstraint.html":{}},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/RegisterUserDto.html":{},"coverage.html":{}}}],["isagevalidconstraint",{"_index":534,"title":{"classes/IsAgeValidConstraint.html":{}},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/IsAgeValidConstraint.html":{},"classes/RegisterUserDto.html":{},"coverage.html":{}}}],["isarray",{"_index":617,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/History.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{}}}],["isboolean",{"_index":618,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["iscompanyidvalidconstraint",{"_index":599,"title":{"classes/IsCompanyIdValidConstraint.html":{}},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"coverage.html":{}}}],["isdeleted",{"_index":465,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["isemail",{"_index":622,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/History.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{}}}],["isemailvalidconstraint",{"_index":535,"title":{"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{}},"body":{"classes/Company-2.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserDto.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"classes/RegisterUserDto.html":{},"coverage.html":{}}}],["isenddatevalidconstraint",{"_index":502,"title":{"classes/IsEndDateValidConstraint.html":{}},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"coverage.html":{}}}],["isexist",{"_index":1082,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["isgendervalidconstraint",{"_index":536,"title":{"classes/IsGenderValidConstraint.html":{}},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/RegisterUserDto.html":{},"coverage.html":{}}}],["isglobal",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["isinit",{"_index":687,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["isjobidvalidconstraint",{"_index":600,"title":{"classes/IsJobIdValidConstraint.html":{}},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"coverage.html":{}}}],["ismongoid",{"_index":532,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{}}}],["isnamevalidconstraint",{"_index":503,"title":{"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{}},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/RegisterUserDto.html":{},"coverage.html":{}}}],["isnan(date.parse(value",{"_index":869,"title":{},"body":{"classes/IsActiveValidConstraint.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{}}}],["isnotempty",{"_index":492,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{}}}],["isnotempty()@isemail",{"_index":1579,"title":{},"body":{"classes/UpdatedBy.html":{}}}],["isnotempty({message",{"_index":552,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{}}}],["isnotemptyobject",{"_index":496,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{}}}],["isnotemptyobject()@isobject()@validatenested()@type(undefined",{"_index":561,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{}}}],["isobject",{"_index":497,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{}}}],["ispasswordvalidconstraint",{"_index":537,"title":{"classes/IsPasswordValidConstraint.html":{}},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/RegisterUserDto.html":{},"coverage.html":{}}}],["isphonevalidconstraint",{"_index":538,"title":{"classes/IsPhoneValidConstraint.html":{}},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/RegisterUserDto.html":{},"coverage.html":{}}}],["ispublic",{"_index":1068,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["ispublicpermission",{"_index":1958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isquantityvalidconstraint",{"_index":868,"title":{"classes/IsQuantityValidConstraint.html":{}},"body":{"classes/IsActiveValidConstraint.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"coverage.html":{}}}],["issalaryvalidconstraint",{"_index":504,"title":{"classes/IsSalaryValidConstraint.html":{}},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"coverage.html":{}}}],["isskillvalidconstraint",{"_index":505,"title":{"classes/IsSkillValidConstraint.html":{}},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/IsSkillValidConstraint.html":{},"coverage.html":{}}}],["isskippermission",{"_index":1074,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["isstartdatevalidconstraint",{"_index":506,"title":{"classes/IsStartDateValidConstraint.html":{}},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"coverage.html":{}}}],["isstring",{"_index":630,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["isuseridvalidconstraint",{"_index":601,"title":{"classes/IsUserIdValidConstraint.html":{}},"body":{"classes/CreateResumeDto.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"coverage.html":{}}}],["isvalid",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["isvalidpassword",{"_index":1627,"title":{},"body":{"injectables/UsersService.html":{}}}],["it's",{"_index":1224,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["item",{"_index":848,"title":{},"body":{"classes/IsActiveValidConstraint.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{}}}],["item.company.name",{"_index":1157,"title":{},"body":{"controllers/MailController.html":{}}}],["item.name",{"_index":1156,"title":{},"body":{"controllers/MailController.html":{}}}],["item.salary}`.replace(/\\b(?=(\\d{3})+(?!\\d))/g",{"_index":1158,"title":{},"body":{"controllers/MailController.html":{}}}],["item.skills",{"_index":1159,"title":{},"body":{"controllers/MailController.html":{}}}],["itviec",{"_index":1733,"title":{},"body":{"index.html":{}}}],["iuser",{"_index":124,"title":{"interfaces/IUser.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"interfaces/IUser.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["iều",{"_index":446,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["iện",{"_index":886,"title":{},"body":{"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{}}}],["job",{"_index":951,"title":{"classes/Job.html":{}},"body":{"classes/IsNameValidConstraint-1.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Resume.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["job.dto",{"_index":1008,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{}}}],["job.dto.ts",{"_index":491,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["job.dto.ts:20",{"_index":493,"title":{},"body":{"classes/Company-1.html":{}}}],["job.dto.ts:23",{"_index":495,"title":{},"body":{"classes/Company-1.html":{}}}],["job.dto.ts:26",{"_index":494,"title":{},"body":{"classes/Company-1.html":{}}}],["job.dto.ts:31",{"_index":568,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:34",{"_index":571,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:40",{"_index":562,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:43",{"_index":567,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:46",{"_index":570,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:49",{"_index":569,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:52",{"_index":566,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:55",{"_index":563,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:58",{"_index":572,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:61",{"_index":564,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:64",{"_index":565,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.name",{"_index":1023,"title":{},"body":{"modules/JobsModule.html":{},"modules/MailModule.html":{},"classes/Resume.html":{}}}],["jobdocument",{"_index":992,"title":{},"body":{"classes/Job.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["jobhunter",{"_index":1162,"title":{},"body":{"controllers/MailController.html":{},"index.html":{}}}],["jobid",{"_index":586,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["jobmodel",{"_index":1027,"title":{},"body":{"injectables/JobsService.html":{},"controllers/MailController.html":{}}}],["jobs",{"_index":997,"title":{},"body":{"controllers/JobsController.html":{},"controllers/MailController.html":{},"miscellaneous/variables.html":{}}}],["jobschema",{"_index":993,"title":{},"body":{"classes/Job.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jobscontroller",{"_index":995,"title":{"controllers/JobsController.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"coverage.html":{}}}],["jobsmodule",{"_index":52,"title":{"modules/JobsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{},"modules.html":{},"overview.html":{}}}],["jobsservice",{"_index":1006,"title":{"injectables/JobsService.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"coverage.html":{},"overview.html":{}}}],["jobwithmatchingskills",{"_index":1152,"title":{},"body":{"controllers/MailController.html":{}}}],["jobwithmatchingskills.map(item",{"_index":1155,"title":{},"body":{"controllers/MailController.html":{}}}],["join",{"_index":1178,"title":{},"body":{"modules/MailModule.html":{},"injectables/MulterConfigService.html":{}}}],["join(__dirname",{"_index":1189,"title":{},"body":{"modules/MailModule.html":{}}}],["join(this.getrootpath",{"_index":1242,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["jpg|jpeg|image\\/jpeg|png|image\\/png|gif|txt|pdf|application\\/pdf|doc|docx|text\\/plain)$/i",{"_index":768,"title":{},"body":{"controllers/FilesController.html":{}}}],["jwt",{"_index":1100,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":1046,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtauthguard(reflector",{"_index":1929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtfromrequest",{"_index":1102,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":211,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":219,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":208,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["k",{"_index":876,"title":{},"body":{"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{}}}],["khoản",{"_index":1118,"title":{},"body":{"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{}}}],["khoảng",{"_index":958,"title":{},"body":{"classes/IsPasswordValidConstraint.html":{}}}],["khác",{"_index":1551,"title":{},"body":{"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["không",{"_index":515,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/History.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{}}}],["khẩu",{"_index":957,"title":{},"body":{"classes/IsPasswordValidConstraint.html":{}}}],["kirito",{"_index":1762,"title":{},"body":{"index.html":{}}}],["kiếm",{"_index":1740,"title":{},"body":{"index.html":{}}}],["kiện",{"_index":447,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["kết",{"_index":451,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["l",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"injectables/JwtAuthGuard.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"index.html":{}}}],["legend",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["level",{"_index":521,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{}}}],["license",{"_index":1819,"title":{},"body":{"properties.html":{}}}],["limit",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["limit(defaultlimit",{"_index":429,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["list",{"_index":333,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["literal",{"_index":472,"title":{},"body":{"classes/Company.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["liên",{"_index":1785,"title":{},"body":{"index.html":{}}}],["local",{"_index":1113,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":164,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localpart",{"_index":915,"title":{},"body":{"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{}}}],["localstrategy",{"_index":209,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["location",{"_index":514,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/MulterConfigService.html":{}}}],["logger",{"_index":666,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["logger(databasesservice.name",{"_index":675,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["logic",{"_index":1651,"title":{},"body":{"injectables/UsersService.html":{}}}],["login",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(user",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["logo",{"_index":408,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{}}}],["logout",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["luôn",{"_index":1780,"title":{},"body":{"index.html":{}}}],["làm",{"_index":1742,"title":{},"body":{"index.html":{}}}],["lòng",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["lĩnh",{"_index":1766,"title":{},"body":{"index.html":{}}}],["lượng",{"_index":439,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["lại",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{}}}],["lấy",{"_index":442,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["lập",{"_index":1764,"title":{},"body":{"index.html":{}}}],["lớn",{"_index":907,"title":{},"body":{"classes/IsAgeValidConstraint.html":{}}}],["m",{"_index":1763,"title":{},"body":{"index.html":{}}}],["mail",{"_index":1123,"title":{},"body":{"controllers/MailController.html":{}}}],["mailcontroller",{"_index":1121,"title":{"controllers/MailController.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"coverage.html":{}}}],["mailermodule",{"_index":1175,"title":{},"body":{"modules/MailModule.html":{}}}],["mailermodule.forrootasync",{"_index":1180,"title":{},"body":{"modules/MailModule.html":{}}}],["mailerservice",{"_index":1128,"title":{},"body":{"controllers/MailController.html":{}}}],["mailmodule",{"_index":53,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules.html":{},"overview.html":{}}}],["mailservice",{"_index":1133,"title":{"injectables/MailService.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["male",{"_index":721,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{}}}],["map",{"_index":1335,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["map((data",{"_index":1343,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["matching",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(totalitems",{"_index":424,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["maxage",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["maxsize",{"_index":770,"title":{},"body":{"controllers/FilesController.html":{}}}],["message",{"_index":513,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"miscellaneous/variables.html":{}}}],["meta",{"_index":433,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["metadata",{"_index":1720,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":577,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["method=${method",{"_index":1310,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["minh",{"_index":1822,"title":{},"body":{"properties.html":{}}}],["miscellaneous",{"_index":1823,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":35,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"classes/CreatePermissionDto.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"interfaces/IUser.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":37,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":1130,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/handlebars.adapter",{"_index":1174,"title":{},"body":{"modules/MailModule.html":{}}}],["mong",{"_index":1781,"title":{},"body":{"index.html":{}}}],["mongo",{"_index":550,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{}}}],["mongoose",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-2.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/History.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoose.schema.types.array",{"_index":1364,"title":{},"body":{"classes/Resume.html":{}}}],["mongoose.schema.types.objectid",{"_index":488,"title":{},"body":{"classes/Company.html":{},"classes/Company-2.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["mongoose.types.objectid",{"_index":931,"title":{},"body":{"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{}}}],["mongoose.types.objectid.isvalid(_id",{"_index":1044,"title":{},"body":{"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{}}}],["mongoose.types.objectid.isvalid(id",{"_index":453,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["mongoose.types.objectid.isvalid(value",{"_index":932,"title":{},"body":{"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{}}}],["mongoosehealthindicator",{"_index":809,"title":{},"body":{"controllers/HealthController.html":{}}}],["mongoosemodule",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":383,"title":{},"body":{"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["ms",{"_index":218,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["ms(configservice.get('jwt_access_expire'))/1000",{"_index":224,"title":{},"body":{"modules/AuthModule.html":{}}}],["ms(this.configservice.get('jwt_refresh_expire",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["multer",{"_index":1209,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["multerconfigservice",{"_index":786,"title":{"injectables/MulterConfigService.html":{}},"body":{"modules/FilesModule.html":{},"injectables/MulterConfigService.html":{},"coverage.html":{}}}],["multermodule",{"_index":785,"title":{},"body":{"modules/FilesModule.html":{}}}],["multermodule.registerasync",{"_index":788,"title":{},"body":{"modules/FilesModule.html":{}}}],["multermoduleoptions",{"_index":1201,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["multeroptionsfactory",{"_index":1207,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["muốn",{"_index":1782,"title":{},"body":{"index.html":{}}}],["môi",{"_index":1745,"title":{},"body":{"index.html":{}}}],["mạnh",{"_index":1807,"title":{},"body":{"index.html":{}}}],["mảng",{"_index":855,"title":{},"body":{"classes/IsActiveValidConstraint.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{}}}],["mật",{"_index":956,"title":{},"body":{"classes/IsPasswordValidConstraint.html":{}}}],["mỗi",{"_index":860,"title":{},"body":{"classes/IsActiveValidConstraint.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{}}}],["một",{"_index":854,"title":{},"body":{"classes/IsActiveValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"index.html":{}}}],["mục",{"_index":1734,"title":{},"body":{"index.html":{}}}],["n",{"_index":1729,"title":{},"body":{"index.html":{}}}],["name",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["name=\"${name",{"_index":1476,"title":{},"body":{"injectables/RolesService.html":{}}}],["nekkochan2k@gmail.com",{"_index":1161,"title":{},"body":{"controllers/MailController.html":{}}}],["nestfactory.create(appmodule",{"_index":1925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestinterceptor",{"_index":1332,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["nestjs",{"_index":1129,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/common",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1064,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":212,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":824,"title":{},"body":{"classes/History.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":214,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":757,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["nestjs/schedule",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"controllers/MailController.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":810,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"dependencies.html":{}}}],["new",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newcv",{"_index":1416,"title":{},"body":{"injectables/ResumesService.html":{}}}],["newcv?._id",{"_index":1419,"title":{},"body":{"injectables/ResumesService.html":{}}}],["newcv?.createdat",{"_index":1420,"title":{},"body":{"injectables/ResumesService.html":{}}}],["newjob",{"_index":1036,"title":{},"body":{"injectables/JobsService.html":{}}}],["newjob?._id",{"_index":1038,"title":{},"body":{"injectables/JobsService.html":{}}}],["newjob?.createdat",{"_index":1039,"title":{},"body":{"injectables/JobsService.html":{}}}],["newpermission",{"_index":1312,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["newpermission?._id",{"_index":1314,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["newpermission?.createdat",{"_index":1315,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["newrole",{"_index":1477,"title":{},"body":{"injectables/RolesService.html":{}}}],["newrole?._id",{"_index":1479,"title":{},"body":{"injectables/RolesService.html":{}}}],["newrole?.createdat",{"_index":1480,"title":{},"body":{"injectables/RolesService.html":{}}}],["newsubs",{"_index":1552,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["newsubs?._id",{"_index":1554,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["newsubs?.createdat",{"_index":1555,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["newuser",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["newuser?._id",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["newuser?.createdat",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["next",{"_index":1341,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["next.handle().pipe",{"_index":1342,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["ng",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateSubscriberDto.html":{},"index.html":{}}}],["ngh",{"_index":1743,"title":{},"body":{"index.html":{}}}],["ngoài",{"_index":1789,"title":{},"body":{"index.html":{}}}],["nguyên",{"_index":906,"title":{},"body":{"classes/IsAgeValidConstraint.html":{}}}],["nguyễn",{"_index":725,"title":{},"body":{"injectables/DatabasesService.html":{},"index.html":{},"properties.html":{}}}],["ngành",{"_index":1775,"title":{},"body":{"index.html":{}}}],["ngày",{"_index":871,"title":{},"body":{"classes/IsActiveValidConstraint.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{}}}],["người",{"_index":704,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["ngắn",{"_index":1800,"title":{},"body":{"index.html":{}}}],["nh",{"_index":548,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{}}}],["nhưng",{"_index":1806,"title":{},"body":{"index.html":{}}}],["nhạc",{"_index":1796,"title":{},"body":{"index.html":{}}}],["nhất",{"_index":875,"title":{},"body":{"classes/IsAddressValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{}}}],["nhập",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["nodejs",{"_index":1747,"title":{},"body":{"index.html":{}}}],["nodemailer",{"_index":1714,"title":{},"body":{"dependencies.html":{}}}],["normal_user",{"_index":1923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":1753,"title":{},"body":{"index.html":{}}}],["null",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":392,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["này",{"_index":1091,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["nếu",{"_index":1756,"title":{},"body":{"index.html":{}}}],["nền",{"_index":1738,"title":{},"body":{"index.html":{}}}],["nối",{"_index":883,"title":{},"body":{"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{}}}],["object",{"_index":473,"title":{},"body":{"classes/Company.html":{},"classes/CreateRoleDto.html":{},"classes/Job.html":{},"classes/Permission.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{}}}],["objectid",{"_index":911,"title":{},"body":{"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{}}}],["observable",{"_index":1337,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["offset",{"_index":418,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["ok",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["omittype",{"_index":1577,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["omittype(createuserdto",{"_index":1575,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["onmoduleinit",{"_index":667,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["optional",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":1192,"title":{},"body":{"modules/MailModule.html":{}}}],["origin",{"_index":1943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["out",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["override",{"_index":1163,"title":{},"body":{"controllers/MailController.html":{}}}],["overview",{"_index":1814,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1691,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pages",{"_index":443,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["pagesize",{"_index":438,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["paginate",{"_index":335,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/SubscribersController.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":350,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":370,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{}}}],["parameters",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["params",{"_index":401,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["parent",{"_index":1228,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["parsefilepipebuilder",{"_index":754,"title":{},"body":{"controllers/FilesController.html":{}}}],["parser",{"_index":1703,"title":{},"body":{"dependencies.html":{}}}],["partialtype",{"_index":823,"title":{},"body":{"classes/History.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdatedBy.html":{}}}],["partialtype(createcompanydto",{"_index":1564,"title":{},"body":{"classes/UpdateCompanyDto.html":{}}}],["partialtype(createfiledto",{"_index":1566,"title":{},"body":{"classes/UpdateFileDto.html":{}}}],["partialtype(createjobdto",{"_index":1567,"title":{},"body":{"classes/UpdateJobDto.html":{}}}],["partialtype(createpermissiondto",{"_index":1568,"title":{},"body":{"classes/UpdatePermissionDto.html":{}}}],["partialtype(createresumedto",{"_index":830,"title":{},"body":{"classes/History.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{}}}],["partialtype(createroledto",{"_index":1571,"title":{},"body":{"classes/UpdateRoleDto.html":{}}}],["partialtype(createsubscriberdto",{"_index":1572,"title":{},"body":{"classes/UpdateSubscriberDto.html":{}}}],["pass",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{},"modules/MailModule.html":{}}}],["passport",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":213,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":1101,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":1093,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passthrough",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{}}}],["password",{"_index":543,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["patch",{"_index":349,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["patch(':id",{"_index":368,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{}}}],["patch(':id')@responsemessage('update",{"_index":347,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{}}}],["patch()@responsemessage('update",{"_index":1609,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch()@skipcheckpermission()@responsemessage('update",{"_index":1518,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["path",{"_index":1179,"title":{},"body":{"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["path.basename(file.originalname",{"_index":1254,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["path.extname(file.originalname",{"_index":1250,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["payload",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["pending",{"_index":1418,"title":{},"body":{"injectables/ResumesService.html":{}}}],["permission",{"_index":613,"title":{"classes/Permission.html":{}},"body":{"classes/CreateRoleDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Role.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permission.apipath",{"_index":1085,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permission.dto",{"_index":1283,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{}}}],["permission.dto.ts",{"_index":575,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["permission.dto.ts:11",{"_index":579,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:14",{"_index":580,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:5",{"_index":581,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:8",{"_index":578,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.method",{"_index":1084,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permission.name",{"_index":663,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/PermissionsModule.html":{},"classes/Role.html":{}}}],["permissiondocument",{"_index":677,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["permissionmodel",{"_index":669,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/PermissionsService.html":{}}}],["permissions",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["permissions.find",{"_index":1083,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permissionschema",{"_index":658,"title":{},"body":{"modules/DatabasesModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permissionscontroller",{"_index":1270,"title":{"controllers/PermissionsController.html":{}},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"coverage.html":{}}}],["permissionsmodule",{"_index":54,"title":{"modules/PermissionsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PermissionsModule.html":{},"modules.html":{},"overview.html":{}}}],["permissionsservice",{"_index":1281,"title":{"injectables/PermissionsService.html":{}},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"coverage.html":{},"overview.html":{}}}],["phiên",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["phone",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["phát",{"_index":1768,"title":{},"body":{"index.html":{}}}],["phải",{"_index":853,"title":{},"body":{"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{}}}],["phần",{"_index":449,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["phẩy",{"_index":881,"title":{},"body":{"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{}}}],["plugin",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["populate",{"_index":1425,"title":{},"body":{"injectables/ResumesService.html":{},"injectables/UsersService.html":{}}}],["populate(population",{"_index":431,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["population",{"_index":414,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["port",{"_index":1952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["post(\"skills",{"_index":1527,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["post('/login",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/logout",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/register",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('by",{"_index":1377,"title":{},"body":{"controllers/ResumesController.html":{}}}],["post('skills')@responsemessage('get",{"_index":1511,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["post('upload",{"_index":763,"title":{},"body":{"controllers/FilesController.html":{}}}],["post()@responsemessage('create",{"_index":999,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["prefix",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["preflightcontinue",{"_index":1945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preview",{"_index":1187,"title":{},"body":{"modules/MailModule.html":{}}}],["private",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/HealthController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["process.cwd",{"_index":1211,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["processnewtoken",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["projection",{"_index":1316,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{}}}],["promise",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["prop",{"_index":484,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["prop({required",{"_index":1495,"title":{},"body":{"classes/Subscriber.html":{}}}],["prop({type",{"_index":467,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["properties",{"_index":226,"title":{"properties.html":{}},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"properties.html":{}}}],["providers",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@get(':id')@responsemessage('fetch",{"_index":339,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/UsersController.html":{}}}],["public()@get()@render('home.ejs",{"_index":12,"title":{},"body":{"controllers/AppController.html":{}}}],["public()@get()@responsemessage('fetch",{"_index":332,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{}}}],["public()@post('/register')@responsemessage('register",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@post('upload')@responsemessage('upload",{"_index":747,"title":{},"body":{"controllers/FilesController.html":{}}}],["public()@responsemessage('get",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@useguards(localauthguard)@useguards(throttlerguard)@throttle({default",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["public/images/${folder",{"_index":1243,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["push",{"_index":1428,"title":{},"body":{"injectables/ResumesService.html":{}}}],["qu",{"_index":452,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["qua",{"_index":1787,"title":{},"body":{"index.html":{}}}],["quan",{"_index":1786,"title":{},"body":{"index.html":{}}}],["quantity",{"_index":520,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/Job.html":{},"injectables/JobsService.html":{}}}],["query",{"_index":351,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["query(\"current",{"_index":1289,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{}}}],["query(\"pagesize",{"_index":1290,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{}}}],["query('current",{"_index":362,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/UsersController.html":{}}}],["query('pagesize",{"_index":363,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/UsersController.html":{}}}],["quyền",{"_index":703,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/JwtAuthGuard.html":{}}}],["ra",{"_index":1737,"title":{},"body":{"index.html":{}}}],["react(typescript",{"_index":1744,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["receiver",{"_index":1168,"title":{},"body":{"controllers/MailController.html":{}}}],["recursive",{"_index":1213,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ref",{"_index":1348,"title":{},"body":{"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["reflect",{"_index":1719,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":1053,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["refresh",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh_token",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["register",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["register(user",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["registeruserdto",{"_index":152,"title":{"classes/RegisterUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RegisterUserDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["remove",{"_index":326,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":374,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["remove(_id",{"_index":1031,"title":{},"body":{"injectables/JobsService.html":{}}}],["remove(id",{"_index":342,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{}}}],["removes",{"_index":800,"title":{},"body":{"injectables/FilesService.html":{}}}],["render",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["render('home.ejs",{"_index":30,"title":{},"body":{"controllers/AppController.html":{}}}],["req",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MulterConfigService.html":{}}}],["req?.headers?.folder_type",{"_index":1240,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["reqstring",{"_index":331,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["request",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["request.cookies['refresh_token",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{}}}],["request.method",{"_index":1078,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["request.route?.path",{"_index":1080,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["request.user",{"_index":1965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requested",{"_index":1223,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["required",{"_index":468,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Subscriber.html":{}}}],["res",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{}}}],["reset",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":135,"title":{"interfaces/Response.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["response.clearcookie('refresh_token",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.cookie('refresh_token",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["response_message",{"_index":1334,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsemessage",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsemessage(\"create",{"_index":1286,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{}}}],["responsemessage(\"delete",{"_index":1016,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{}}}],["responsemessage(\"fetch",{"_index":1288,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{}}}],["responsemessage(\"get",{"_index":1388,"title":{},"body":{"controllers/ResumesController.html":{},"controllers/SubscribersController.html":{}}}],["responsemessage(\"update",{"_index":1293,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{}}}],["responsemessage(\"upload",{"_index":764,"title":{},"body":{"controllers/FilesController.html":{}}}],["responsemessage('create",{"_index":1011,"title":{},"body":{"controllers/JobsController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('delete",{"_index":373,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('fetch",{"_index":361,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('get",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('information",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('logout",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('register",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('send",{"_index":1146,"title":{},"body":{"controllers/MailController.html":{}}}],["responsemessage('update",{"_index":369,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('user",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{}}}],["result",{"_index":425,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["results",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resume",{"_index":1346,"title":{"classes/Resume.html":{}},"body":{"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resume.dto",{"_index":826,"title":{},"body":{"classes/History.html":{},"controllers/ResumesController.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{}}}],["resume.dto.ts",{"_index":584,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/History.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"coverage.html":{}}}],["resume.dto.ts:11",{"_index":592,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:13",{"_index":1580,"title":{},"body":{"classes/UpdatedBy.html":{}}}],["resume.dto.ts:14",{"_index":598,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:17",{"_index":596,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:18",{"_index":820,"title":{},"body":{"classes/History.html":{}}}],["resume.dto.ts:20",{"_index":595,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:21",{"_index":821,"title":{},"body":{"classes/History.html":{}}}],["resume.dto.ts:23",{"_index":591,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:26",{"_index":594,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/History.html":{}}}],["resume.dto.ts:34",{"_index":1570,"title":{},"body":{"classes/UpdateResumeDto.html":{}}}],["resume.dto.ts:9",{"_index":1578,"title":{},"body":{"classes/UpdatedBy.html":{}}}],["resume.name",{"_index":1402,"title":{},"body":{"modules/ResumesModule.html":{}}}],["resumedocument",{"_index":1363,"title":{},"body":{"classes/Resume.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["resumemodel",{"_index":1407,"title":{},"body":{"injectables/ResumesService.html":{}}}],["resumes",{"_index":1369,"title":{},"body":{"controllers/ResumesController.html":{},"miscellaneous/variables.html":{}}}],["resumeschema",{"_index":1365,"title":{},"body":{"classes/Resume.html":{},"modules/ResumesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resumescontroller",{"_index":1367,"title":{"controllers/ResumesController.html":{}},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"coverage.html":{}}}],["resumesmodule",{"_index":55,"title":{"modules/ResumesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ResumesModule.html":{},"modules.html":{},"overview.html":{}}}],["resumesservice",{"_index":1383,"title":{"injectables/ResumesService.html":{}},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"overview.html":{}}}],["return",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["role",{"_index":276,"title":{"classes/Role.html":{}},"body":{"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["role.dto",{"_index":1453,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{}}}],["role.dto.ts",{"_index":605,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["role.dto.ts:13",{"_index":609,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:18",{"_index":616,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:6",{"_index":610,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:9",{"_index":606,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.name",{"_index":664,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/RolesModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["roledocument",{"_index":678,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["rolemodel",{"_index":670,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["roles",{"_index":1445,"title":{},"body":{"controllers/RolesController.html":{},"miscellaneous/variables.html":{}}}],["roleschema",{"_index":660,"title":{},"body":{"modules/DatabasesModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolescontroller",{"_index":1443,"title":{"controllers/RolesController.html":{}},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{},"coverage.html":{}}}],["rolesmodule",{"_index":56,"title":{"modules/RolesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RolesModule.html":{},"modules.html":{},"overview.html":{}}}],["rolesservice",{"_index":170,"title":{"injectables/RolesService.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"coverage.html":{},"overview.html":{}}}],["running",{"_index":1956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rxjs",{"_index":1338,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1336,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["rất",{"_index":1791,"title":{},"body":{"index.html":{}}}],["s",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["salary",{"_index":519,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{}}}],["salt",{"_index":1648,"title":{},"body":{"injectables/UsersService.html":{}}}],["same",{"_index":1231,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["sample",{"_index":682,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["schedulemodule",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["schema",{"_index":385,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/Company.html":{},"modules/DatabasesModule.html":{},"classes/Job.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"classes/Resume.html":{},"modules/ResumesModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["schemafactory",{"_index":485,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(company",{"_index":489,"title":{},"body":{"classes/Company.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(job",{"_index":994,"title":{},"body":{"classes/Job.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(permission",{"_index":1269,"title":{},"body":{"classes/Permission.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(resume",{"_index":1366,"title":{},"body":{"classes/Resume.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(role",{"_index":1442,"title":{},"body":{"classes/Role.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(subscriber",{"_index":1502,"title":{},"body":{"classes/Subscriber.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":1599,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["secret",{"_index":220,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["secretorkey",{"_index":1105,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":1184,"title":{},"body":{"modules/MailModule.html":{}}}],["select",{"_index":1426,"title":{},"body":{"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["select(projection",{"_index":1319,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{}}}],["set",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{}}}],["setmetadata(is_public_key",{"_index":1959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(is_public_permission",{"_index":1961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(response_message",{"_index":1960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signoptions",{"_index":222,"title":{},"body":{"modules/AuthModule.html":{}}}],["single",{"_index":748,"title":{},"body":{"controllers/FilesController.html":{},"miscellaneous/variables.html":{}}}],["skill",{"_index":628,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{}}}],["skills",{"_index":512,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["skills')@skipcheckpermission",{"_index":1513,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["skip(offset",{"_index":428,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["skipcheckpermission",{"_index":1524,"title":{},"body":{"controllers/SubscribersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["soft",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["softdeletemodel",{"_index":388,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["softdeleteplugin",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["sort",{"_index":413,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["sort(sort",{"_index":430,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/.../company.schema.ts",{"_index":1826,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../customize.ts",{"_index":1836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../job.schema.ts",{"_index":1827,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../permission.schema.ts",{"_index":1828,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../resume.schema.ts",{"_index":1829,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../role.schema.ts",{"_index":1830,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../sample.ts",{"_index":1834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../subscriber.schema.ts",{"_index":1831,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":1832,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src//users/types/user.interface",{"_index":1642,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app.controller",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:16",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":109,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":110,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller",{"_index":217,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:33",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:41",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:47",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:56",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:66",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.module.ts",{"_index":210,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["src/auth/auth.service.ts",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:100",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:12",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:21",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:37",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:78",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:86",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:92",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/jwt",{"_index":1047,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/local",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/passport/jwt.strategy",{"_index":216,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/passport/jwt.strategy.ts",{"_index":1092,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/passport/jwt.strategy.ts:21",{"_index":1097,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/passport/jwt.strategy.ts:9",{"_index":1095,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/passport/local.strategy",{"_index":215,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/passport/local.strategy.ts",{"_index":1108,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/passport/local.strategy.ts:12",{"_index":1112,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/passport/local.strategy.ts:7",{"_index":1110,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/companies/companies.controller",{"_index":380,"title":{},"body":{"modules/CompaniesModule.html":{}}}],["src/companies/companies.controller.ts",{"_index":321,"title":{},"body":{"controllers/CompaniesController.html":{},"coverage.html":{}}}],["src/companies/companies.controller.ts:22",{"_index":329,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:29",{"_index":336,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:40",{"_index":341,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:46",{"_index":348,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:56",{"_index":344,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.module",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["src/companies/companies.module.ts",{"_index":379,"title":{},"body":{"modules/CompaniesModule.html":{}}}],["src/companies/companies.service",{"_index":353,"title":{},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{}}}],["src/companies/companies.service.ts",{"_index":386,"title":{},"body":{"injectables/CompaniesService.html":{},"coverage.html":{}}}],["src/companies/companies.service.ts:12",{"_index":389,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:18",{"_index":391,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:31",{"_index":393,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:60",{"_index":394,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:67",{"_index":396,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:80",{"_index":395,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/dto/create",{"_index":354,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["src/companies/dto/update",{"_index":356,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["src/companies/schemas/company.schema",{"_index":382,"title":{},"body":{"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Resume.html":{}}}],["src/companies/schemas/company.schema.ts",{"_index":463,"title":{},"body":{"classes/Company.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/companies/schemas/company.schema.ts:12",{"_index":469,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:15",{"_index":477,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:18",{"_index":480,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:21",{"_index":474,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:27",{"_index":483,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:33",{"_index":476,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:39",{"_index":471,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:42",{"_index":482,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:45",{"_index":475,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:48",{"_index":479,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:9",{"_index":481,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/validator/validate.company",{"_index":557,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["src/companies/validator/validate.company.ts",{"_index":943,"title":{},"body":{"classes/IsNameValidConstraint.html":{},"coverage.html":{}}}],["src/companies/validator/validate.company.ts:10",{"_index":949,"title":{},"body":{"classes/IsNameValidConstraint.html":{}}}],["src/companies/validator/validate.company.ts:20",{"_index":944,"title":{},"body":{"classes/IsNameValidConstraint.html":{}}}],["src/core/transform.interceptor.ts",{"_index":1330,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["src/core/transform.interceptor.ts:21",{"_index":1561,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/core/transform.interceptor.ts:24",{"_index":1563,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/databases/databases.controller",{"_index":655,"title":{},"body":{"modules/DatabasesModule.html":{}}}],["src/databases/databases.controller.ts",{"_index":647,"title":{},"body":{"controllers/DatabasesController.html":{},"coverage.html":{}}}],["src/databases/databases.module",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["src/databases/databases.module.ts",{"_index":654,"title":{},"body":{"modules/DatabasesModule.html":{}}}],["src/databases/databases.service",{"_index":650,"title":{},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{}}}],["src/databases/databases.service.ts",{"_index":665,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{}}}],["src/databases/databases.service.ts:16",{"_index":672,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["src/databases/databases.service.ts:29",{"_index":674,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["src/databases/sample",{"_index":1474,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["src/databases/sample.ts",{"_index":1680,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorator/customize",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["src/decorator/customize.ts",{"_index":1681,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/files/config/multer.config",{"_index":787,"title":{},"body":{"modules/FilesModule.html":{}}}],["src/files/config/multer.config.ts",{"_index":1196,"title":{},"body":{"injectables/MulterConfigService.html":{},"coverage.html":{}}}],["src/files/config/multer.config.ts:12",{"_index":1206,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/files/config/multer.config.ts:16",{"_index":1203,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/files/config/multer.config.ts:40",{"_index":1200,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/files/dto/create",{"_index":559,"title":{},"body":{"classes/CreateFileDto.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["src/files/dto/update",{"_index":760,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["src/files/files.controller",{"_index":784,"title":{},"body":{"modules/FilesModule.html":{}}}],["src/files/files.controller.ts",{"_index":737,"title":{},"body":{"controllers/FilesController.html":{},"coverage.html":{}}}],["src/files/files.controller.ts:27",{"_index":750,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:48",{"_index":740,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:53",{"_index":741,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:58",{"_index":744,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:63",{"_index":742,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.module",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["src/files/files.module.ts",{"_index":783,"title":{},"body":{"modules/FilesModule.html":{}}}],["src/files/files.service",{"_index":759,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{}}}],["src/files/files.service.ts",{"_index":790,"title":{},"body":{"injectables/FilesService.html":{},"coverage.html":{}}}],["src/files/files.service.ts:11",{"_index":793,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:15",{"_index":794,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:19",{"_index":796,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:23",{"_index":795,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:7",{"_index":792,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/schemas/file.schema.ts",{"_index":735,"title":{},"body":{"classes/File.html":{},"coverage.html":{}}}],["src/health/health.controller",{"_index":817,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/health/health.controller.ts",{"_index":802,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:19",{"_index":806,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["src/health/health.module.ts",{"_index":815,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/jobs/dto/create",{"_index":490,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["src/jobs/dto/update",{"_index":1009,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["src/jobs/jobs.controller",{"_index":1021,"title":{},"body":{"modules/JobsModule.html":{}}}],["src/jobs/jobs.controller.ts",{"_index":996,"title":{},"body":{"controllers/JobsController.html":{},"coverage.html":{}}}],["src/jobs/jobs.controller.ts:23",{"_index":1000,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:30",{"_index":1001,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:41",{"_index":1002,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:47",{"_index":1005,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:57",{"_index":1003,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.module",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["src/jobs/jobs.module.ts",{"_index":1020,"title":{},"body":{"modules/JobsModule.html":{}}}],["src/jobs/jobs.service",{"_index":1007,"title":{},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{}}}],["src/jobs/jobs.service.ts",{"_index":1024,"title":{},"body":{"injectables/JobsService.html":{},"coverage.html":{}}}],["src/jobs/jobs.service.ts:105",{"_index":1032,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:12",{"_index":1026,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:18",{"_index":1028,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:55",{"_index":1029,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:85",{"_index":1030,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:92",{"_index":1034,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/schemas/job.schema",{"_index":1022,"title":{},"body":{"modules/JobsModule.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Resume.html":{}}}],["src/jobs/schemas/job.schema.ts",{"_index":973,"title":{},"body":{"classes/Job.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/jobs/schemas/job.schema.ts:12",{"_index":988,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:15",{"_index":974,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:22",{"_index":984,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:25",{"_index":987,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:28",{"_index":986,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:31",{"_index":983,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:34",{"_index":979,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:37",{"_index":989,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:40",{"_index":980,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:43",{"_index":981,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:46",{"_index":976,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:52",{"_index":991,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:58",{"_index":978,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:64",{"_index":975,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:67",{"_index":990,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:70",{"_index":977,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:73",{"_index":982,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:9",{"_index":985,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/validator/validate.job",{"_index":507,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["src/jobs/validator/validate.job.ts",{"_index":834,"title":{},"body":{"classes/IsActiveValidConstraint.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"coverage.html":{}}}],["src/jobs/validator/validate.job.ts:10",{"_index":952,"title":{},"body":{"classes/IsNameValidConstraint-1.html":{}}}],["src/jobs/validator/validate.job.ts:100",{"_index":963,"title":{},"body":{"classes/IsQuantityValidConstraint.html":{}}}],["src/jobs/validator/validate.job.ts:117",{"_index":970,"title":{},"body":{"classes/IsStartDateValidConstraint.html":{}}}],["src/jobs/validator/validate.job.ts:124",{"_index":969,"title":{},"body":{"classes/IsStartDateValidConstraint.html":{}}}],["src/jobs/validator/validate.job.ts:139",{"_index":938,"title":{},"body":{"classes/IsEndDateValidConstraint.html":{}}}],["src/jobs/validator/validate.job.ts:146",{"_index":937,"title":{},"body":{"classes/IsEndDateValidConstraint.html":{}}}],["src/jobs/validator/validate.job.ts:161",{"_index":842,"title":{},"body":{"classes/IsActiveValidConstraint.html":{}}}],["src/jobs/validator/validate.job.ts:168",{"_index":839,"title":{},"body":{"classes/IsActiveValidConstraint.html":{}}}],["src/jobs/validator/validate.job.ts:20",{"_index":950,"title":{},"body":{"classes/IsNameValidConstraint-1.html":{}}}],["src/jobs/validator/validate.job.ts:38",{"_index":968,"title":{},"body":{"classes/IsSkillValidConstraint.html":{}}}],["src/jobs/validator/validate.job.ts:50",{"_index":967,"title":{},"body":{"classes/IsSkillValidConstraint.html":{}}}],["src/jobs/validator/validate.job.ts:71",{"_index":966,"title":{},"body":{"classes/IsSalaryValidConstraint.html":{}}}],["src/jobs/validator/validate.job.ts:78",{"_index":965,"title":{},"body":{"classes/IsSalaryValidConstraint.html":{}}}],["src/jobs/validator/validate.job.ts:93",{"_index":964,"title":{},"body":{"classes/IsQuantityValidConstraint.html":{}}}],["src/mail/mail.controller",{"_index":1176,"title":{},"body":{"modules/MailModule.html":{}}}],["src/mail/mail.controller.ts",{"_index":1122,"title":{},"body":{"controllers/MailController.html":{},"coverage.html":{}}}],["src/mail/mail.controller.ts:33",{"_index":1127,"title":{},"body":{"controllers/MailController.html":{}}}],["src/mail/mail.module",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["src/mail/mail.module.ts",{"_index":1172,"title":{},"body":{"modules/MailModule.html":{}}}],["src/mail/mail.service",{"_index":1134,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["src/mail/mail.service.ts",{"_index":1195,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":1683,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/permissions/dto/create",{"_index":574,"title":{},"body":{"classes/CreatePermissionDto.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["src/permissions/dto/update",{"_index":1284,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["src/permissions/permissions.controller",{"_index":1299,"title":{},"body":{"modules/PermissionsModule.html":{}}}],["src/permissions/permissions.controller.ts",{"_index":1271,"title":{},"body":{"controllers/PermissionsController.html":{},"coverage.html":{}}}],["src/permissions/permissions.controller.ts:14",{"_index":1273,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:20",{"_index":1275,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:30",{"_index":1277,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:36",{"_index":1280,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:42",{"_index":1278,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.module",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["src/permissions/permissions.module.ts",{"_index":1298,"title":{},"body":{"modules/PermissionsModule.html":{}}}],["src/permissions/permissions.service",{"_index":1282,"title":{},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{}}}],["src/permissions/permissions.service.ts",{"_index":1300,"title":{},"body":{"injectables/PermissionsService.html":{},"coverage.html":{}}}],["src/permissions/permissions.service.ts:104",{"_index":1306,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:15",{"_index":1302,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:21",{"_index":1303,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:45",{"_index":1304,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:72",{"_index":1305,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:79",{"_index":1307,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/schemas/permission.schema",{"_index":659,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Role.html":{}}}],["src/permissions/schemas/permission.schema.ts",{"_index":1257,"title":{},"body":{"classes/Permission.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/permissions/schemas/permission.schema.ts:12",{"_index":1258,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:15",{"_index":1264,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:18",{"_index":1265,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:21",{"_index":1260,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:27",{"_index":1268,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:33",{"_index":1262,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:39",{"_index":1259,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:42",{"_index":1267,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:45",{"_index":1263,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:48",{"_index":1261,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:9",{"_index":1266,"title":{},"body":{"classes/Permission.html":{}}}],["src/resumes/dto/create",{"_index":583,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/History.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"coverage.html":{}}}],["src/resumes/dto/update",{"_index":819,"title":{},"body":{"classes/History.html":{},"controllers/ResumesController.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"coverage.html":{}}}],["src/resumes/resumes.controller",{"_index":1400,"title":{},"body":{"modules/ResumesModule.html":{}}}],["src/resumes/resumes.controller.ts",{"_index":1368,"title":{},"body":{"controllers/ResumesController.html":{},"coverage.html":{}}}],["src/resumes/resumes.controller.ts:15",{"_index":1373,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:21",{"_index":1379,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:27",{"_index":1374,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:37",{"_index":1375,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:43",{"_index":1382,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:49",{"_index":1380,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.module",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["src/resumes/resumes.module.ts",{"_index":1399,"title":{},"body":{"modules/ResumesModule.html":{}}}],["src/resumes/resumes.service",{"_index":1384,"title":{},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{}}}],["src/resumes/resumes.service.ts",{"_index":1403,"title":{},"body":{"injectables/ResumesService.html":{},"coverage.html":{}}}],["src/resumes/resumes.service.ts:11",{"_index":1406,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:123",{"_index":1413,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:17",{"_index":1408,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:45",{"_index":1409,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:72",{"_index":1412,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:79",{"_index":1411,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:97",{"_index":1414,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/schemas/resume.schema",{"_index":1401,"title":{},"body":{"modules/ResumesModule.html":{},"injectables/ResumesService.html":{}}}],["src/resumes/schemas/resume.schema.ts",{"_index":1347,"title":{},"body":{"classes/Resume.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/resumes/schemas/resume.schema.ts:11",{"_index":1354,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:14",{"_index":1362,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:17",{"_index":1361,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:20",{"_index":1358,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:26",{"_index":1349,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:32",{"_index":1357,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:35",{"_index":1355,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:45",{"_index":1351,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:51",{"_index":1360,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:57",{"_index":1353,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:63",{"_index":1350,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:66",{"_index":1359,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:69",{"_index":1356,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:72",{"_index":1352,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/validator/validate.resume",{"_index":602,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{}}}],["src/resumes/validator/validate.resume.ts",{"_index":909,"title":{},"body":{"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"coverage.html":{}}}],["src/resumes/validator/validate.resume.ts:102",{"_index":941,"title":{},"body":{"classes/IsJobIdValidConstraint.html":{}}}],["src/resumes/validator/validate.resume.ts:11",{"_index":934,"title":{},"body":{"classes/IsEmailValidConstraint.html":{}}}],["src/resumes/validator/validate.resume.ts:34",{"_index":933,"title":{},"body":{"classes/IsEmailValidConstraint.html":{}}}],["src/resumes/validator/validate.resume.ts:56",{"_index":972,"title":{},"body":{"classes/IsUserIdValidConstraint.html":{}}}],["src/resumes/validator/validate.resume.ts:66",{"_index":971,"title":{},"body":{"classes/IsUserIdValidConstraint.html":{}}}],["src/resumes/validator/validate.resume.ts:77",{"_index":912,"title":{},"body":{"classes/IsCompanyIdValidConstraint.html":{}}}],["src/resumes/validator/validate.resume.ts:84",{"_index":910,"title":{},"body":{"classes/IsCompanyIdValidConstraint.html":{}}}],["src/resumes/validator/validate.resume.ts:95",{"_index":942,"title":{},"body":{"classes/IsJobIdValidConstraint.html":{}}}],["src/roles/dto/create",{"_index":604,"title":{},"body":{"classes/CreateRoleDto.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["src/roles/dto/update",{"_index":1454,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["src/roles/roles.controller",{"_index":1465,"title":{},"body":{"modules/RolesModule.html":{}}}],["src/roles/roles.controller.ts",{"_index":1444,"title":{},"body":{"controllers/RolesController.html":{},"coverage.html":{}}}],["src/roles/roles.controller.ts:14",{"_index":1447,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:20",{"_index":1448,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:30",{"_index":1449,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:36",{"_index":1452,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:42",{"_index":1450,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.module",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["src/roles/roles.module.ts",{"_index":1464,"title":{},"body":{"modules/RolesModule.html":{}}}],["src/roles/roles.service",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{}}}],["src/roles/roles.service.ts",{"_index":1466,"title":{},"body":{"injectables/RolesService.html":{},"coverage.html":{}}}],["src/roles/roles.service.ts:101",{"_index":1472,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:13",{"_index":1468,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:19",{"_index":1469,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:44",{"_index":1470,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:71",{"_index":1471,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:81",{"_index":1473,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/schemas/role.schema",{"_index":661,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/roles/schemas/role.schema.ts",{"_index":1430,"title":{},"body":{"classes/Role.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/roles/schemas/role.schema.ts:10",{"_index":1438,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:13",{"_index":1435,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:16",{"_index":1436,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:19",{"_index":1439,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:22",{"_index":1432,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:28",{"_index":1441,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:34",{"_index":1434,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:40",{"_index":1431,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:43",{"_index":1440,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:46",{"_index":1437,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:49",{"_index":1433,"title":{},"body":{"classes/Role.html":{}}}],["src/subscribers/dto/create",{"_index":620,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["src/subscribers/dto/update",{"_index":1523,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["src/subscribers/schemas/subscriber.schema",{"_index":1137,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts",{"_index":1490,"title":{},"body":{"classes/Subscriber.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:12",{"_index":1498,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:15",{"_index":1499,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:18",{"_index":1492,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:24",{"_index":1501,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:30",{"_index":1494,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:36",{"_index":1491,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:39",{"_index":1500,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:42",{"_index":1497,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:45",{"_index":1493,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:9",{"_index":1496,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/subscribers.controller",{"_index":1537,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["src/subscribers/subscribers.controller.ts",{"_index":1504,"title":{},"body":{"controllers/SubscribersController.html":{},"coverage.html":{}}}],["src/subscribers/subscribers.controller.ts:14",{"_index":1507,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:21",{"_index":1514,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:27",{"_index":1508,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:37",{"_index":1509,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:44",{"_index":1519,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:53",{"_index":1515,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.module",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["src/subscribers/subscribers.module.ts",{"_index":1536,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["src/subscribers/subscribers.service",{"_index":1521,"title":{},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{}}}],["src/subscribers/subscribers.service.ts",{"_index":1538,"title":{},"body":{"injectables/SubscribersService.html":{},"coverage.html":{}}}],["src/subscribers/subscribers.service.ts:108",{"_index":1546,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:15",{"_index":1541,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:21",{"_index":1542,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:44",{"_index":1543,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:71",{"_index":1544,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:78",{"_index":1548,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:92",{"_index":1547,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/users/dto/create",{"_index":528,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/dto/register",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RegisterUserDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":1574,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/schemas/user.schema",{"_index":657,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/users/schemas/user.schema.ts",{"_index":1581,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/users/schemas/user.schema.ts:10",{"_index":1592,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:13",{"_index":1589,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:16",{"_index":1593,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:19",{"_index":1583,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:22",{"_index":1590,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:25",{"_index":1594,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:28",{"_index":1582,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:31",{"_index":1596,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:34",{"_index":1595,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:37",{"_index":1584,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:43",{"_index":1586,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:49",{"_index":1598,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:55",{"_index":1588,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:61",{"_index":1585,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:64",{"_index":1597,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:67",{"_index":1587,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:70",{"_index":1591,"title":{},"body":{"classes/User.html":{}}}],["src/users/types/user.interface",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{}}}],["src/users/types/user.interface.ts",{"_index":833,"title":{},"body":{"interfaces/IUser.html":{},"coverage.html":{}}}],["src/users/users.controller",{"_index":1622,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.controller.ts",{"_index":1601,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:24",{"_index":1604,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:34",{"_index":1605,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:46",{"_index":1606,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:53",{"_index":1610,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:59",{"_index":1607,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["src/users/users.module.ts",{"_index":1621,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":1623,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:122",{"_index":1633,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:135",{"_index":1634,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:142",{"_index":1637,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:146",{"_index":1639,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:159",{"_index":1638,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:17",{"_index":1629,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:179",{"_index":1640,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:183",{"_index":1635,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:25",{"_index":1636,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:30",{"_index":1630,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:68",{"_index":1632,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:91",{"_index":1631,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/validator/validate.user",{"_index":539,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["src/users/validator/validate.user.ts",{"_index":873,"title":{},"body":{"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"coverage.html":{}}}],["src/users/validator/validate.user.ts:10",{"_index":954,"title":{},"body":{"classes/IsNameValidConstraint-2.html":{}}}],["src/users/validator/validate.user.ts:100",{"_index":955,"title":{},"body":{"classes/IsPasswordValidConstraint.html":{}}}],["src/users/validator/validate.user.ts:125",{"_index":962,"title":{},"body":{"classes/IsPhoneValidConstraint.html":{}}}],["src/users/validator/validate.user.ts:135",{"_index":961,"title":{},"body":{"classes/IsPhoneValidConstraint.html":{}}}],["src/users/validator/validate.user.ts:152",{"_index":908,"title":{},"body":{"classes/IsAgeValidConstraint.html":{}}}],["src/users/validator/validate.user.ts:165",{"_index":905,"title":{},"body":{"classes/IsAgeValidConstraint.html":{}}}],["src/users/validator/validate.user.ts:187",{"_index":940,"title":{},"body":{"classes/IsGenderValidConstraint.html":{}}}],["src/users/validator/validate.user.ts:195",{"_index":939,"title":{},"body":{"classes/IsGenderValidConstraint.html":{}}}],["src/users/validator/validate.user.ts:20",{"_index":953,"title":{},"body":{"classes/IsNameValidConstraint-2.html":{}}}],["src/users/validator/validate.user.ts:206",{"_index":885,"title":{},"body":{"classes/IsAddressValidConstraint.html":{}}}],["src/users/validator/validate.user.ts:217",{"_index":874,"title":{},"body":{"classes/IsAddressValidConstraint.html":{}}}],["src/users/validator/validate.user.ts:38",{"_index":936,"title":{},"body":{"classes/IsEmailValidConstraint-1.html":{}}}],["src/users/validator/validate.user.ts:61",{"_index":935,"title":{},"body":{"classes/IsEmailValidConstraint-1.html":{}}}],["src/users/validator/validate.user.ts:83",{"_index":960,"title":{},"body":{"classes/IsPasswordValidConstraint.html":{}}}],["start",{"_index":870,"title":{},"body":{"classes/IsActiveValidConstraint.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{}}}],["startdate",{"_index":523,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/Job.html":{},"injectables/JobsService.html":{}}}],["started",{"_index":1725,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1668,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":587,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/History.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"miscellaneous/variables.html":{}}}],["statuscode",{"_index":1331,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["storage",{"_index":1236,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["strategy",{"_index":1099,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["strict",{"_index":1193,"title":{},"body":{"modules/MailModule.html":{}}}],["string",{"_index":111,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":1164,"title":{},"body":{"controllers/MailController.html":{}}}],["subs",{"_index":1149,"title":{},"body":{"controllers/MailController.html":{}}}],["subs).name",{"_index":1169,"title":{},"body":{"controllers/MailController.html":{}}}],["subs.skills",{"_index":1151,"title":{},"body":{"controllers/MailController.html":{}}}],["subscriber",{"_index":1135,"title":{"classes/Subscriber.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"coverage.html":{}}}],["subscriber's",{"_index":1512,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["subscriber.dto",{"_index":1522,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{}}}],["subscriber.dto.ts",{"_index":621,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["subscriber.dto.ts:14",{"_index":629,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.dto.ts:5",{"_index":625,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.dto.ts:9",{"_index":624,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.name",{"_index":1194,"title":{},"body":{"modules/MailModule.html":{},"modules/SubscribersModule.html":{}}}],["subscriberdocument",{"_index":1136,"title":{},"body":{"controllers/MailController.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["subscribermodel",{"_index":1140,"title":{},"body":{"controllers/MailController.html":{},"injectables/SubscribersService.html":{}}}],["subscribers",{"_index":1147,"title":{},"body":{"controllers/MailController.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["subscriberschema",{"_index":1177,"title":{},"body":{"modules/MailModule.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["subscriberscontroller",{"_index":1503,"title":{"controllers/SubscribersController.html":{}},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"coverage.html":{}}}],["subscribersmodule",{"_index":57,"title":{"modules/SubscribersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SubscribersModule.html":{},"modules.html":{},"overview.html":{}}}],["subscribersservice",{"_index":1520,"title":{"injectables/SubscribersService.html":{}},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"coverage.html":{},"overview.html":{}}}],["subsskills",{"_index":1150,"title":{},"body":{"controllers/MailController.html":{}}}],["successfully",{"_index":1216,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["super",{"_index":1067,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super.canactivate(context",{"_index":1072,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["super_admin",{"_index":1837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["support",{"_index":1809,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1810,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1219,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["sáng",{"_index":1784,"title":{},"body":{"index.html":{}}}],["t",{"_index":450,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["table",{"_index":1690,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1689,"title":{},"body":{"coverage.html":{}}}],["targetdirectory",{"_index":1204,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["targetendpoint",{"_index":1079,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["targetendpoint.startswith(\"/api/v1/auth",{"_index":1086,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["targetmethod",{"_index":1077,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["temp",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["temp.permissions",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{}}}],["temp?.permissions",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["template",{"_index":1167,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["templates",{"_index":1190,"title":{},"body":{"modules/MailModule.html":{}}}],["terminusmodule",{"_index":816,"title":{},"body":{"modules/HealthModule.html":{}}}],["testcron",{"_index":1142,"title":{},"body":{"controllers/MailController.html":{}}}],["th",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["tham",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["theo",{"_index":1773,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":32,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(req.user",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.logout(response",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.processnewtoken(refreshtoken",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(registeruserdto",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(username",{"_index":1114,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.companiesservice.create(createcompanydto",{"_index":360,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.findall(+currentpage",{"_index":364,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.findone(id",{"_index":367,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.remove(id",{"_index":375,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.update(id",{"_index":371,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companymodel",{"_index":426,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.create",{"_index":403,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.find(filter)).length",{"_index":422,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.findbyid(id",{"_index":457,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.softdelete",{"_index":461,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.updateone",{"_index":458,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.configservice.get('init_password",{"_index":718,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.configservice.get('jwt_refresh_token_secret",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('should_init",{"_index":688,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.db.pingcheck('database",{"_index":814,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.filesservice.findall",{"_index":776,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.findone(+id",{"_index":777,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.remove(+id",{"_index":780,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.update(+id",{"_index":779,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.hashpassword(password",{"_index":1653,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.health.check",{"_index":813,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.jobmodel",{"_index":1041,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.create",{"_index":1037,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.find",{"_index":1153,"title":{},"body":{"controllers/MailController.html":{}}}],["this.jobmodel.find(filter)).length",{"_index":1040,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.findbyid(id",{"_index":1042,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.softdelete",{"_index":1045,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.updateone",{"_index":1043,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobsservice.create(createjobdto",{"_index":1012,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.findall(+currentpage",{"_index":1013,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.findone(id",{"_index":1014,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.remove(id",{"_index":1017,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.update(id",{"_index":1015,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jwtservice.sign(payload",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(refreshtoken",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log",{"_index":731,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.mailerservice.sendmail",{"_index":1160,"title":{},"body":{"controllers/MailController.html":{}}}],["this.permissionmodel",{"_index":1318,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.countdocuments",{"_index":693,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.create",{"_index":1313,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.find(filter)).length",{"_index":1317,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.find({}).select('_id",{"_index":699,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.findbyid(id",{"_index":1321,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.findone",{"_index":1308,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.insertmany(init_permissions",{"_index":697,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.softdelete",{"_index":1323,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.updateone",{"_index":1322,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionsservice.create(createpermissiondto",{"_index":1287,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.findall(+currentpage",{"_index":1291,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.findone(id",{"_index":1292,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.remove(id",{"_index":1295,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.update(id",{"_index":1294,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.reflector.get(response_message",{"_index":1345,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":1069,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.reflector.getallandoverride(is_public_permission",{"_index":1075,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.refreshtoken(payload",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.resumemodel",{"_index":1422,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.create",{"_index":1417,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.find(filter)).length",{"_index":1421,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.findbyid(id",{"_index":1423,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.softdelete",{"_index":1429,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.updateone",{"_index":1427,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumesservice.create(createusercvdto",{"_index":1387,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findall(+currentpage",{"_index":1391,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findbyusers(user",{"_index":1390,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findone(id",{"_index":1392,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.remove(id",{"_index":1396,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.update(id",{"_index":1395,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.rolemodel",{"_index":1482,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.countdocuments",{"_index":695,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.rolemodel.create",{"_index":1478,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.find(filter)).length",{"_index":1481,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findbyid(id",{"_index":1486,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findbyid(id)).populate",{"_index":1483,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findone",{"_index":714,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["this.rolemodel.insertmany",{"_index":700,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.rolemodel.softdelete",{"_index":1489,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.updateone",{"_index":1484,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesservice.create(createroledto",{"_index":1456,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findall(+currentpage",{"_index":1457,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findone(id",{"_index":1458,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findone(user.role._id",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.rolesservice.findone(userrole._id",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.rolesservice.findone(userrole._id)).toobject",{"_index":1106,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.rolesservice.remove(id",{"_index":1460,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.update(id",{"_index":1459,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.subscribermodel",{"_index":1557,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.create",{"_index":1553,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.find",{"_index":1148,"title":{},"body":{"controllers/MailController.html":{}}}],["this.subscribermodel.find(filter)).length",{"_index":1556,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.findone",{"_index":1549,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.softdelete",{"_index":1560,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.updateone",{"_index":1558,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribersservice.create(createsubscriberdto",{"_index":1526,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.findall(+currentpage",{"_index":1530,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.findone(id",{"_index":1531,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.getskills(user",{"_index":1529,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.remove(id",{"_index":1533,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.update(updatesubscriberdto",{"_index":1532,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.usermodel",{"_index":1656,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.countdocuments",{"_index":691,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usermodel.create",{"_index":1654,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find(filter)).length",{"_index":1655,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyid(id",{"_index":1662,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone",{"_index":1652,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.insertmany",{"_index":715,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usermodel.softdelete",{"_index":1664,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.updateone",{"_index":1659,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.hashpassword",{"_index":717,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":1612,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall(+currentpage",{"_index":1613,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(id",{"_index":1614,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findonebyusername(username",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.finduserbytoken(refreshtoken",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.isvalidpassword(pass",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.register(user",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.remove(id",{"_index":1617,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(updateuserdto",{"_index":1616,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.updateusertoken",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.updateusertoken(refresh_token",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["thiết",{"_index":1757,"title":{},"body":{"index.html":{}}}],["thiệu",{"_index":1727,"title":{},"body":{"index.html":{}}}],["thoại",{"_index":887,"title":{},"body":{"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{}}}],["throttle",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{}}}],["throttlerguard",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{}}}],["throttlermodule",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forroot",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["throw",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["thích",{"_index":1792,"title":{},"body":{"index.html":{}}}],["thông",{"_index":1776,"title":{},"body":{"index.html":{}}}],["thấy",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["thống",{"_index":709,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["timestamps",{"_index":487,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["tin",{"_index":1116,"title":{},"body":{"injectables/LocalStrategy.html":{},"index.html":{}}}],["tiêu",{"_index":1735,"title":{},"body":{"index.html":{}}}],["token",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["token')@get('/refresh",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{}}}],["total",{"_index":448,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["totalitems",{"_index":421,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["totalpages",{"_index":423,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["tr",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateRoleDto.html":{}}}],["trang",{"_index":435,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["transformer",{"_index":508,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"dependencies.html":{}}}],["transforminterceptor",{"_index":1339,"title":{"injectables/TransformInterceptor.html":{}},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["transforminterceptor(reflector",{"_index":1931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transport",{"_index":1181,"title":{},"body":{"modules/MailModule.html":{}}}],["triển",{"_index":1769,"title":{},"body":{"index.html":{}}}],["trong",{"_index":861,"title":{},"body":{"classes/IsActiveValidConstraint.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"index.html":{}}}],["true",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/JwtAuthGuard.html":{},"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["trung",{"_index":1778,"title":{},"body":{"index.html":{}}}],["truy",{"_index":1088,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["try",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["trying",{"_index":1233,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["trên",{"_index":1550,"title":{},"body":{"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["trình",{"_index":1765,"title":{},"body":{"index.html":{}}}],["trường",{"_index":1746,"title":{},"body":{"index.html":{}}}],["trống",{"_index":517,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{}}}],["trống'})@isarray({message",{"_index":626,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/UpdateResumeDto.html":{}}}],["trống'})@isboolean({message",{"_index":607,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["trống'})@ismongoid({each",{"_index":611,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["trống'})@ismongoid({message",{"_index":644,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["ttl",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["tuổi",{"_index":890,"title":{},"body":{"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{}}}],["ty",{"_index":947,"title":{},"body":{"classes/IsNameValidConstraint.html":{}}}],["type",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1824,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":847,"title":{},"body":{"classes/IsActiveValidConstraint.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{}}}],["types",{"_index":825,"title":{},"body":{"classes/History.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"dependencies.html":{}}}],["types.objectid",{"_index":827,"title":{},"body":{"classes/History.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{}}}],["tài",{"_index":1117,"title":{},"body":{"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{}}}],["tác",{"_index":1759,"title":{},"body":{"index.html":{}}}],["tên",{"_index":945,"title":{},"body":{"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{}}}],["tìm",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["tính",{"_index":896,"title":{},"body":{"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{}}}],["tôi",{"_index":1761,"title":{},"body":{"index.html":{}}}],["tại",{"_index":437,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["tạo",{"_index":1736,"title":{},"body":{"index.html":{}}}],["tảng",{"_index":1739,"title":{},"body":{"index.html":{}}}],["tập",{"_index":1777,"title":{},"body":{"index.html":{}}}],["tối",{"_index":1804,"title":{},"body":{"index.html":{}}}],["tồn",{"_index":1311,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["tổng",{"_index":444,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["u",{"_index":863,"title":{},"body":{"classes/IsActiveValidConstraint.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{}}}],["unauthorizedexception",{"_index":1062,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["unauthorizedexception('thông",{"_index":1115,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["unauthorizedexception('toke",{"_index":1076,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["undefined",{"_index":845,"title":{},"body":{"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"classes/Job.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["undefined})@post('/login')@responsemessage('user",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["unknown",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["unlicensed",{"_index":1820,"title":{},"body":{"properties.html":{}}}],["update",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["update(@body",{"_index":1615,"title":{},"body":{"controllers/UsersController.html":{}}}],["update(@param('id",{"_index":778,"title":{},"body":{"controllers/FilesController.html":{},"controllers/PermissionsController.html":{},"controllers/RolesController.html":{}}}],["update(_id",{"_index":1033,"title":{},"body":{"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{}}}],["update(id",{"_index":345,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/RolesController.html":{}}}],["update(updatesubscriberdto",{"_index":1516,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["update(updateuserdto",{"_index":1608,"title":{},"body":{"controllers/UsersController.html":{}}}],["updatecompanydto",{"_index":346,"title":{"classes/UpdateCompanyDto.html":{}},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["updatedat",{"_index":466,"title":{},"body":{"classes/Company.html":{},"classes/History.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["updatedby",{"_index":459,"title":{"classes/UpdatedBy.html":{}},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/History.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["updatefiledto",{"_index":743,"title":{"classes/UpdateFileDto.html":{}},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["updatejobdto",{"_index":1004,"title":{"classes/UpdateJobDto.html":{}},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["updatepermissiondto",{"_index":1279,"title":{"classes/UpdatePermissionDto.html":{}},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["updateresumedto",{"_index":828,"title":{"classes/UpdateResumeDto.html":{}},"body":{"classes/History.html":{},"controllers/ResumesController.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"coverage.html":{}}}],["updateroledto",{"_index":1451,"title":{"classes/UpdateRoleDto.html":{}},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["updates",{"_index":799,"title":{},"body":{"injectables/FilesService.html":{}}}],["updatestatus",{"_index":1371,"title":{},"body":{"controllers/ResumesController.html":{}}}],["updatestatus(@param('id",{"_index":1393,"title":{},"body":{"controllers/ResumesController.html":{}}}],["updatestatus(id",{"_index":1381,"title":{},"body":{"controllers/ResumesController.html":{}}}],["updatesubscriberdto",{"_index":1517,"title":{"classes/UpdateSubscriberDto.html":{}},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":1573,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["updateuserdto._id",{"_index":1660,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateusertoken",{"_index":1628,"title":{},"body":{"injectables/UsersService.html":{}}}],["upload",{"_index":1868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uploadedfile",{"_index":753,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile",{"_index":739,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile(file",{"_index":745,"title":{},"body":{"controllers/FilesController.html":{}}}],["upsert",{"_index":1559,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["uri",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["url",{"_index":588,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["useclass",{"_index":789,"title":{},"body":{"modules/FilesModule.html":{}}}],["usefactory",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{}}}],["useguards",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(throttlerguard",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors",{"_index":752,"title":{},"body":{"controllers/FilesController.html":{}}}],["useinterceptors(fileinterceptor('fileupload",{"_index":765,"title":{},"body":{"controllers/FilesController.html":{}}}],["user",{"_index":132,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/CreateUserCvDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user')@get('/account",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["user')@post('/logout",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{}}}],["user')@responsemessage('get",{"_index":1378,"title":{},"body":{"controllers/ResumesController.html":{}}}],["user._id",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["user.dto",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":529,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:13",{"_index":1327,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:16",{"_index":1325,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:19",{"_index":1328,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:22",{"_index":1329,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:23",{"_index":530,"title":{},"body":{"classes/Company-2.html":{}}}],["user.dto.ts:25",{"_index":1324,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:26",{"_index":531,"title":{},"body":{"classes/Company-2.html":{}}}],["user.dto.ts:28",{"_index":1326,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:31",{"_index":641,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["user.dto.ts:34",{"_index":639,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:37",{"_index":642,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:40",{"_index":643,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:43",{"_index":637,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:46",{"_index":640,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:49",{"_index":636,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:53",{"_index":645,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:59",{"_index":638,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:9",{"_index":1576,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.email",{"_index":411,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["user.name",{"_index":662,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/UsersModule.html":{}}}],["user.password",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.permissions",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.role",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.toobject",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["user?.permissions",{"_index":1081,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["user@gmail.com",{"_index":728,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["user_role",{"_index":681,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userdocument",{"_index":676,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["userid",{"_index":589,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["usermodal",{"_index":1641,"title":{},"body":{"injectables/UsersService.html":{}}}],["usermodel",{"_index":673,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["username",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{}}}],["username/pass",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["userrole",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["userrole?._id",{"_index":730,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["users",{"_index":1602,"title":{},"body":{"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["userschema",{"_index":656,"title":{},"body":{"modules/DatabasesModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":1600,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":671,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["usersmodule",{"_index":58,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":231,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["uôi",{"_index":929,"title":{},"body":{"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{}}}],["v",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"index.html":{}}}],["validate",{"_index":498,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterUserDto.html":{}}}],["validate(isactivevalidconstraint",{"_index":526,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["validate(isaddressvalidconstraint",{"_index":547,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["validate(isagevalidconstraint",{"_index":545,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["validate(iscompanyidvalidconstraint",{"_index":590,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{}}}],["validate(isemailvalidconstraint",{"_index":541,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["validate(isenddatevalidconstraint",{"_index":524,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["validate(isgendervalidconstraint",{"_index":546,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["validate(isjobidvalidconstraint",{"_index":593,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{}}}],["validate(isnamevalidconstraint",{"_index":510,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["validate(ispasswordvalidconstraint",{"_index":542,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["validate(isphonevalidconstraint",{"_index":544,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["validate(issalaryvalidconstraint",{"_index":518,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["validate(isskillvalidconstraint",{"_index":511,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["validate(isstartdatevalidconstraint",{"_index":522,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["validate(isuseridvalidconstraint",{"_index":597,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["validate(payload",{"_index":1096,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":1111,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(value",{"_index":841,"title":{},"body":{"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{}}}],["validatenested",{"_index":499,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{}}}],["validatenested()@isnotempty()@type(undefined",{"_index":822,"title":{},"body":{"classes/History.html":{}}}],["validateuser",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["validationarguments",{"_index":838,"title":{},"body":{"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{}}}],["validationpipe",{"_index":1937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator",{"_index":500,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"dependencies.html":{}}}],["validatorconstraint",{"_index":843,"title":{},"body":{"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{}}}],["validatorconstraintinterface",{"_index":835,"title":{},"body":{"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{}}}],["validgenders",{"_index":892,"title":{},"body":{"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{}}}],["validgenders.includes(value.tolowercase",{"_index":894,"title":{},"body":{"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{}}}],["value",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{},"injectables/MulterConfigService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["value.endswith('@gmail.com",{"_index":928,"title":{},"body":{"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{}}}],["value.every((item",{"_index":856,"title":{},"body":{"classes/IsActiveValidConstraint.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{}}}],["value.indexof",{"_index":914,"title":{},"body":{"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{}}}],["value.length",{"_index":846,"title":{},"body":{"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsNameValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{}}}],["value.split('@')[0",{"_index":916,"title":{},"body":{"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{}}}],["value.split('@')[1",{"_index":918,"title":{},"body":{"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{}}}],["variable",{"_index":1678,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1833,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1749,"title":{},"body":{"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["versioningtype.uri",{"_index":1949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vietnam",{"_index":722,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["views",{"_index":1934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["viên",{"_index":706,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["viết",{"_index":1799,"title":{},"body":{"index.html":{}}}],["việc",{"_index":1741,"title":{},"body":{"index.html":{}}}],["viện",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["void",{"_index":1205,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["vui",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["vào",{"_index":1779,"title":{},"body":{"index.html":{}}}],["với",{"_index":445,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["vực",{"_index":1767,"title":{},"body":{"index.html":{}}}],["web",{"_index":1732,"title":{},"body":{"index.html":{}}}],["website",{"_index":1770,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":1165,"title":{},"body":{"controllers/MailController.html":{}}}],["whitelist",{"_index":1938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["without",{"_index":1252,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["world",{"_index":113,"title":{},"body":{"injectables/AppService.html":{}}}],["xác",{"_index":1120,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["xóa",{"_index":1488,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["you're",{"_index":1232,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["z0",{"_index":902,"title":{},"body":{"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{}}}],["z]/.test(item",{"_index":850,"title":{},"body":{"classes/IsActiveValidConstraint.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{}}}],["z]/.test(localpart",{"_index":920,"title":{},"body":{"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{}}}],["za",{"_index":849,"title":{},"body":{"classes/IsActiveValidConstraint.html":{},"classes/IsAddressValidConstraint.html":{},"classes/IsAgeValidConstraint.html":{},"classes/IsCompanyIdValidConstraint.html":{},"classes/IsEmailValidConstraint.html":{},"classes/IsEmailValidConstraint-1.html":{},"classes/IsEndDateValidConstraint.html":{},"classes/IsGenderValidConstraint.html":{},"classes/IsJobIdValidConstraint.html":{},"classes/IsNameValidConstraint-1.html":{},"classes/IsNameValidConstraint-2.html":{},"classes/IsPasswordValidConstraint.html":{},"classes/IsPhoneValidConstraint.html":{},"classes/IsQuantityValidConstraint.html":{},"classes/IsSalaryValidConstraint.html":{},"classes/IsSkillValidConstraint.html":{},"classes/IsStartDateValidConstraint.html":{},"classes/IsUserIdValidConstraint.html":{}}}],["zoom",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get()@Render('home.ejs')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Render } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Public } from 'src/decorator/customize';\nimport { AppService } from 'src/app.service';\n\n@Controller()\nexport class AppController {\n  constructor(\n    private readonly appService: AppService,\n    private configService: ConfigService,\n  ) {}\n\n  @Public()\n  @Get()\n  @Render('home.ejs')\n  getHello() {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nAppModule -->\n\nCompaniesModule->AppModule\n\n\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nAppModule -->\n\nDatabasesModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nAppModule -->\n\nPermissionsModule->AppModule\n\n\n\n\n\nResumesModule\n\nResumesModule\n\nAppModule -->\n\nResumesModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CompaniesModule\n                        \n                        \n                            DatabasesModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            JobsModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            PermissionsModule\n                        \n                        \n                            ResumesModule\n                        \n                        \n                            RolesModule\n                        \n                        \n                            SubscribersModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { ThrottlerModule } from '@nestjs/throttler';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { AppController } from 'src/app.controller';\nimport { AppService } from 'src/app.service';\nimport { UsersModule } from 'src/users/users.module';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { CompaniesModule } from 'src/companies/companies.module';\nimport { JobsModule } from 'src/jobs/jobs.module';\nimport { FilesModule } from 'src/files/files.module';\nimport { ResumesModule } from 'src/resumes/resumes.module';\nimport { softDeletePlugin } from 'soft-delete-plugin-mongoose';\nimport { PermissionsModule } from 'src/permissions/permissions.module';\nimport { RolesModule } from 'src/roles/roles.module';\nimport { DatabasesModule } from 'src/databases/databases.module';\nimport { SubscribersModule } from 'src/subscribers/subscribers.module';\nimport { MailModule } from 'src/mail/mail.module';\nimport { HealthModule } from 'src/health/health.module';\n\n@Module({\n  imports: [\n    ScheduleModule.forRoot(),\n    ThrottlerModule.forRoot([{\n      ttl: 60000,\n      limit: 10,\n    }]),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        uri: configService.get('MONGO_URL'),\n        connectionFactory: (connection) => {\n          connection.plugin(softDeletePlugin);\n          return connection;\n        },\n      }),\n      inject: [ConfigService],\n    }),\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }),\n    UsersModule,\n    AuthModule,\n    CompaniesModule,\n    JobsModule,\n    FilesModule,\n    ResumesModule,\n    PermissionsModule,\n    RolesModule,\n    DatabasesModule,\n    SubscribersModule,\n    MailModule,\n    HealthModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello() {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                handleGetAccount\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                handleLogin\n                            \n                            \n                                    \n                                    \n                                handleLogout\n                            \n                            \n                                    \n                                    \n                                    \n                                handleRefreshToken\n                            \n                            \n                                    \n                                    \n                                    \n                                handleRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        handleGetAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleGetAccount(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Information User')@Get('/account')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        handleLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleLogin(req, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@UseGuards(LocalAuthGuard)@UseGuards(ThrottlerGuard)@Throttle({default: undefined})@Post('/login')@ResponseMessage('User Login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        handleLogout\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleLogout(response: Response, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Logout User')@Post('/logout')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        handleRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleRefreshToken(request: Request, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@ResponseMessage('Get User By Refresh Token')@Get('/refresh')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        handleRegister\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleRegister(registerUserDto: RegisterUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('/register')@ResponseMessage('Register User')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerUserDto\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  UseGuards,\n  Req,\n  Body,\n  Res,\n  Get,\n} from '@nestjs/common';\nimport { ThrottlerGuard, Throttle } from '@nestjs/throttler';\nimport { AuthService } from 'src/auth/auth.service';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { LocalAuthGuard } from 'src/auth/local-auth.guard';\nimport { RegisterUserDto } from 'src/users/dto/register-user.dto';\nimport { IUser } from 'src/users/types/user.interface';\nimport { RolesService } from 'src/roles/roles.service';\nimport { Response, Request } from 'express';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(\n    private authService: AuthService,\n    private rolesService: RolesService,\n  ) {}\n\n  //login\n  @Public()\n  @UseGuards(LocalAuthGuard)\n  @UseGuards(ThrottlerGuard)\n  @Throttle({ default: { limit: 5, ttl: 60000 } })\n  @Post('/login')\n  @ResponseMessage('User Login')\n  handleLogin(@Req() req, @Res({ passthrough: true }) response: Response) {\n    return this.authService.login(req.user, response);\n  }\n\n  //register\n  @Public()\n  @Post('/register')\n  @ResponseMessage('Register User')\n  handleRegister(@Body() registerUserDto: RegisterUserDto) {\n    return this.authService.register(registerUserDto);\n  }\n\n  @ResponseMessage('Information User')\n  @Get('/account')\n  async handleGetAccount(@User() user: IUser) {\n    const temp = (await this.rolesService.findOne(user.role._id)) as any;\n    user.permissions = temp.permissions;\n    return { user };\n  }\n\n  @Public()\n  @ResponseMessage('Get User By Refresh Token')\n  @Get('/refresh')\n  handleRefreshToken(\n    @Req() request: Request,\n    @Res({ passthrough: true }) response: Response,\n  ) {\n    const refreshToken = request.cookies['refresh_token'];\n    return this.authService.processNewToken(refreshToken, response);\n  }\n\n  @ResponseMessage('Logout User')\n  @Post('/logout')\n  handleLogout(\n    @Res({ passthrough: true }) response: Response,\n    @User() user: IUser,\n  ) {\n    return this.authService.logout(response, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nRolesModule\n\nRolesModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nRolesModule->AuthModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RolesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { AuthService } from 'src/auth/auth.service';\nimport { UsersModule } from 'src/users/users.module';\nimport { LocalStrategy } from 'src/auth/passport/local.strategy';\nimport { JwtStrategy } from 'src/auth/passport/jwt.strategy';\nimport { AuthController } from 'src/auth/auth.controller';\nimport { RolesModule } from 'src/roles/roles.module';\nimport ms from 'ms';\n\n@Module({\n  imports: [\n    UsersModule,\n    RolesModule,\n    PassportModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        secret: configService.get('JWT_ACCESS_TOKEN_SECRET'),\n        signOptions: {\n          expiresIn: ms(configService.get('JWT_ACCESS_EXPIRE'))/1000,\n        },\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                processNewToken\n                            \n                            \n                                refreshToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService, configService: ConfigService, rolesService: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rolesService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(user: IUser, response: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(user: RegisterUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(username: string, pass: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pass\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processNewToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:92\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { JwtService } from '@nestjs/jwt';\nimport { ConfigService } from '@nestjs/config';\nimport { BadRequestException, Injectable } from '@nestjs/common';\nimport { UsersService } from 'src/users/users.service';\nimport { IUser } from 'src/users/types/user.interface';\nimport { RegisterUserDto } from 'src/users/dto/register-user.dto';\nimport { RolesService } from 'src/roles/roles.service';\nimport { Response } from 'express';\nimport ms from 'ms';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UsersService,\n    private jwtService: JwtService,\n    private configService: ConfigService,\n    private rolesService: RolesService,\n  ) {}\n\n  //username/pass là 2 tham số thư viện passport trả về\n  async validateUser(username: string, pass: string): Promise {\n    const user = await this.usersService.findOneByUsername(username);\n    if (user) {\n      const isValid = this.usersService.isValidPassword(pass, user.password);\n      if (isValid === true) {\n        const userRole = user.role as unknown as { _id: string; name: string };\n        const temp = await this.rolesService.findOne(userRole._id);\n        return {\n          ...user.toObject(),\n          permissions: temp?.permissions ?? [],\n        };\n      }\n    }\n    return null;\n  }\n\n  async login(user: IUser, response: Response) {\n    const { _id, name, email, phone, age, gender, address, role, permissions } =\n      user;\n    const payload = {\n      _id,\n      name,\n      email,\n      phone,\n      age,\n      gender,\n      address,\n      role,\n    };\n\n    const refresh_token = this.refreshToken(payload);\n\n    //Update User Token\n    await this.usersService.updateUserToken(refresh_token, _id);\n\n    //Set Cookie\n    response.cookie('refresh_token', refresh_token, {\n      httpOnly: true,\n      maxAge: ms(this.configService.get('JWT_REFRESH_EXPIRE')),\n    });\n\n    return {\n      access_token: this.jwtService.sign(payload),\n      user: {\n        _id,\n        name,\n        email,\n        phone,\n        age,\n        gender,\n        address,\n        role,\n        permissions,\n      },\n    };\n  }\n\n  async register(user: RegisterUserDto) {\n    let newUser = await this.usersService.register(user);\n    return {\n      _id: newUser?._id,\n      createdAt: newUser?.createdAt,\n    };\n  }\n\n  logout = async (response: Response, user: IUser) => {\n    await this.usersService.updateUserToken('', user._id);\n    response.clearCookie('refresh_token');\n    return 'ok';\n  };\n\n  refreshToken = (payload: any) => {\n    return this.jwtService.sign(payload, {\n      secret: this.configService.get('JWT_REFRESH_TOKEN_SECRET'),\n      expiresIn:\n        ms(this.configService.get('JWT_REFRESH_EXPIRE')) / 1000,\n    });\n  };\n\n  processNewToken = async (refreshToken: string, response: Response) => {\n    try {\n      this.jwtService.verify(refreshToken, {\n        secret: this.configService.get('JWT_REFRESH_TOKEN_SECRET'),\n      });\n      let user = await this.usersService.findUserByToken(refreshToken);\n\n      if (user) {\n        const { _id, name, email, phone, age, gender, address, role } = user;\n        const payload = {\n          _id,\n          name,\n          email,\n          phone,\n          age,\n          gender,\n          address,\n          role,\n        };\n\n        const refresh_token = this.refreshToken(payload);\n\n        //Update User Token\n        await this.usersService.updateUserToken(refresh_token, _id.toString());\n\n        const userRole = user.role as unknown as { _id: string; name: string };\n        const temp = await this.rolesService.findOne(userRole._id);\n\n        //Set Cookie\n        response.clearCookie('refresh_token');\n        response.cookie('refresh_token', refresh_token, {\n          httpOnly: true,\n          maxAge: ms(this.configService.get('JWT_REFRESH_EXPIRE')),\n        });\n\n        return {\n          access_token: this.jwtService.sign(payload),\n          user: {\n            _id,\n            name,\n            email,\n            phone,\n            age,\n            gender,\n            address,\n            role,\n            permissions: temp?.permissions ?? [],\n          },\n        };\n      } else {\n        throw new BadRequestException('Không tìm thấy User');\n      }\n    } catch (err) {\n      throw new BadRequestException(\n        'Phiên đăng nhập đã hết hạn. Vui lòng đăng nhập lại!',\n      );\n    }\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CompaniesController.html":{"url":"controllers/CompaniesController.html","title":"controller - CompaniesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CompaniesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/companies.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                companies\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCompanyDto: CreateCompanyDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCompanyDto\n                                            \n                                                            CreateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, reqString: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get()@ResponseMessage('Fetch List Company with Paginate')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                reqString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get(':id')@ResponseMessage('Fetch Company By Id')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete Company')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update Company')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCompanyDto\n                                            \n                                                            UpdateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { CompaniesService } from 'src/companies/companies.service';\nimport { CreateCompanyDto } from 'src/companies/dto/create-company.dto';\nimport { UpdateCompanyDto } from 'src/companies/dto/update-company.dto';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/types/user.interface';\n\n@Controller('companies')\nexport class CompaniesController {\n  constructor(private readonly companiesService: CompaniesService) {}\n\n  @Post()\n  create(@Body() createCompanyDto: CreateCompanyDto, @User() user: IUser) {\n    return this.companiesService.create(createCompanyDto, user);\n  }\n\n  @Public()\n  @Get()\n  @ResponseMessage('Fetch List Company with Paginate')\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') limit: string,\n    @Query() reqString: string,\n  ) {\n    return this.companiesService.findAll(+currentPage, +limit, reqString);\n  }\n\n  @Public()\n  @Get(':id')\n  @ResponseMessage('Fetch Company By Id')\n  findOne(@Param('id') id: string) {\n    return this.companiesService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update Company')\n  update(\n    @Param('id') id: string,\n    @Body() updateCompanyDto: UpdateCompanyDto,\n    @User() user: IUser,\n  ) {\n    return this.companiesService.update(id, updateCompanyDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Delete Company')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.companiesService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompaniesModule.html":{"url":"modules/CompaniesModule.html","title":"module - CompaniesModule","body":"\n                   \n\n\n\n\n    Modules\n    CompaniesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CompaniesModule\n\n\n\ncluster_CompaniesModule_providers\n\n\n\ncluster_CompaniesModule_exports\n\n\n\n\nCompaniesService \n\nCompaniesService \n\n\n\nCompaniesModule\n\nCompaniesModule\n\nCompaniesService  -->\n\nCompaniesModule->CompaniesService \n\n\n\n\n\nCompaniesService\n\nCompaniesService\n\nCompaniesModule -->\n\nCompaniesService->CompaniesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/companies/companies.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CompaniesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CompaniesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CompaniesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { CompaniesService } from 'src/companies/companies.service';\nimport { CompaniesController } from 'src/companies/companies.controller';\nimport { Company, CompanySchema } from 'src/companies/schemas/company.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Company.name, schema: CompanySchema }]),\n  ],\n  controllers: [CompaniesController],\n  providers: [CompaniesService],\n  exports: [CompaniesService],\n})\nexport class CompaniesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompaniesService.html":{"url":"injectables/CompaniesService.html","title":"injectable - CompaniesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CompaniesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/companies.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(companyModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/companies/companies.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        companyModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCompanyDto: CreateCompanyDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCompanyDto\n                                            \n                                                            CreateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, reqString: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                reqString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCompanyDto\n                                            \n                                                            UpdateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectModel } from '@nestjs/mongoose';\nimport { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateCompanyDto } from 'src/companies/dto/create-company.dto';\nimport { UpdateCompanyDto } from 'src/companies/dto/update-company.dto';\nimport { Company, CompanyDocument } from 'src/companies/schemas/company.schema';\nimport { IUser } from 'src/users/types/user.interface';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\n\n@Injectable()\nexport class CompaniesService {\n  constructor(\n    @InjectModel(Company.name)\n    private companyModel: SoftDeleteModel,\n  ) {}\n\n  async create(createCompanyDto: CreateCompanyDto, user: IUser) {\n    return await this.companyModel.create({\n      name: createCompanyDto.name,\n      address: createCompanyDto.address,\n      description: createCompanyDto.description,\n      logo: createCompanyDto.logo,\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n  }\n\n  async findAll(currentPage: number, limit: number, reqString: string) {\n    const { filter, sort, population } = aqp(reqString);\n    delete filter.current;\n    delete filter.pageSize;\n\n    let offset = (+currentPage - 1) * +limit;\n    let defaultLimit = +limit ? +limit : 10;\n\n    const totalItems = (await this.companyModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n    const result = await this.companyModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .exec();\n    return {\n      meta: {\n        current: currentPage, //trang hiện tại\n        pageSize: limit, //số lượng bản ghi đã lấy\n        pages: totalPages, //tổng số trang với điều kiện query\n        total: totalItems, // tổng số phần tử (số bản ghi)\n      },\n      result, //kết quả query\n    };\n  }\n\n   findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException(`Not Found Company with id=${id}`)\n    }\n    return this.companyModel.findById(id);\n  }\n\n  update(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser) {\n    return this.companyModel.updateOne(\n      { _id: id },\n      {\n        ...updateCompanyDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n  }\n\n  async remove(id: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      return 'Not Found Company';\n    }\n    await this.companyModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return this.companyModel.softDelete({\n      _id: id,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company.html":{"url":"classes/Company.html","title":"class - Company","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/schemas/company.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type CompanyDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Company {\n  @Prop({ type: String, required: true })\n  name: string;\n\n  @Prop({ type: String, required: true })\n  address: string;\n\n  @Prop({ type: String, required: true })\n  description: string;\n\n  @Prop({ type: String, required: true })\n  logo: string;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Date })\n  createdAt: Date;\n\n  @Prop({ type: Date })\n  updatedAt: Date;\n\n  @Prop({ type: Date })\n  deletedAt: Date;\n\n  @Prop({ type: Boolean })\n  isDeleted: boolean;\n}\n\nexport const CompanySchema = SchemaFactory.createForClass(Company);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company-1.html":{"url":"classes/Company-1.html","title":"class - Company-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/create-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  Validate,\n  ValidateNested,\n} from 'class-validator';\nimport {\n  IsActiveValidConstraint,\n  IsEndDateValidConstraint,\n  IsNameValidConstraint,\n  IsSalaryValidConstraint,\n  IsSkillValidConstraint,\n  IsStartDateValidConstraint,\n} from 'src/jobs/validator/validate.job';\nimport { Type } from 'class-transformer';\n\nclass Company {\n  @IsNotEmpty()\n  _id: string;\n\n  @IsNotEmpty()\n  name: string;\n\n  @IsNotEmpty()\n  logo: string;\n}\n\nexport class CreateJobDto {\n  @Validate(IsNameValidConstraint)\n  name: string;\n\n  @Validate(IsSkillValidConstraint)\n  skills: string[];\n\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n\n  @IsNotEmpty({ message: 'Location không được để trống', })\n  location: string;\n\n  @Validate(IsSalaryValidConstraint)\n  salary: number;\n\n  @Validate(IsSalaryValidConstraint)\n  quantity: number;\n\n  @IsNotEmpty({ message: 'Level không được để trống' })\n  level: string;\n\n  @IsNotEmpty({ message: 'Description không được để trống' })\n  description: string;\n\n  @Validate(IsStartDateValidConstraint)\n  startDate: Date;\n\n  @Validate(IsEndDateValidConstraint)\n  endDate: Date;\n\n  @Validate(IsActiveValidConstraint)\n  isActive: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company-2.html":{"url":"classes/Company-2.html","title":"class - Company-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsMongoId,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  Validate,\n  ValidateNested,\n} from 'class-validator';\nimport {\n  IsAddressValidConstraint,\n  IsAgeValidConstraint,\n  IsEmailValidConstraint,\n  IsGenderValidConstraint,\n  IsNameValidConstraint,\n  IsPasswordValidConstraint,\n  IsPhoneValidConstraint,\n} from 'src/users/validator/validate.user';\nimport { Type } from 'class-transformer';\nimport mongoose from 'mongoose';\n\nclass Company {\n  @IsNotEmpty()\n  _id: string;\n\n  @IsNotEmpty()\n  name: string;\n}\n\nexport class CreateUserDto {\n  @Validate(IsNameValidConstraint)\n  name: string;\n\n  @Validate(IsEmailValidConstraint)\n  email: string;\n\n  @Validate(IsPasswordValidConstraint)\n  password: string;\n\n  @Validate(IsPhoneValidConstraint)\n  phone: number;\n\n  @Validate(IsAgeValidConstraint)\n  age: number;\n\n  @Validate(IsGenderValidConstraint)\n  gender: string;\n\n  @Validate(IsAddressValidConstraint)\n  address: string;\n\n  @IsNotEmpty({ message: 'Role không được để trống', })\n  @IsMongoId({ message: 'Role có định dạng là mongo id', })\n  role: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCompanyDto.html":{"url":"classes/CreateCompanyDto.html","title":"class - CreateCompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/dto/create-company.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Address không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Description không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Logo không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Validate(IsNameValidConstraint)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, Validate } from 'class-validator';\nimport { IsNameValidConstraint } from 'src/companies/validator/validate.company';\n\nexport class CreateCompanyDto {\n  @Validate(IsNameValidConstraint)\n  name: string;\n\n  @IsNotEmpty({ message: 'Address không được để trống' })\n  address: string;\n\n  @IsNotEmpty({ message: 'Description không được để trống' })\n  description: string;\n\n  @IsNotEmpty({ message: 'Logo không được để trống', })\n  logo: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateFileDto.html":{"url":"classes/CreateFileDto.html","title":"class - CreateFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/dto/create-file.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateFileDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateJobDto.html":{"url":"classes/CreateJobDto.html","title":"class - CreateJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/create-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                endDate\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                level\n                            \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                salary\n                            \n                            \n                                    \n                                skills\n                            \n                            \n                                    \n                                startDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Company\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyObject()@IsObject()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Description không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Validate(IsEndDateValidConstraint)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Validate(IsActiveValidConstraint)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Level không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Location không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Validate(IsNameValidConstraint)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Validate(IsSalaryValidConstraint)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Validate(IsSalaryValidConstraint)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Validate(IsSkillValidConstraint)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Validate(IsStartDateValidConstraint)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:58\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  Validate,\n  ValidateNested,\n} from 'class-validator';\nimport {\n  IsActiveValidConstraint,\n  IsEndDateValidConstraint,\n  IsNameValidConstraint,\n  IsSalaryValidConstraint,\n  IsSkillValidConstraint,\n  IsStartDateValidConstraint,\n} from 'src/jobs/validator/validate.job';\nimport { Type } from 'class-transformer';\n\nclass Company {\n  @IsNotEmpty()\n  _id: string;\n\n  @IsNotEmpty()\n  name: string;\n\n  @IsNotEmpty()\n  logo: string;\n}\n\nexport class CreateJobDto {\n  @Validate(IsNameValidConstraint)\n  name: string;\n\n  @Validate(IsSkillValidConstraint)\n  skills: string[];\n\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n\n  @IsNotEmpty({ message: 'Location không được để trống', })\n  location: string;\n\n  @Validate(IsSalaryValidConstraint)\n  salary: number;\n\n  @Validate(IsSalaryValidConstraint)\n  quantity: number;\n\n  @IsNotEmpty({ message: 'Level không được để trống' })\n  level: string;\n\n  @IsNotEmpty({ message: 'Description không được để trống' })\n  description: string;\n\n  @Validate(IsStartDateValidConstraint)\n  startDate: Date;\n\n  @Validate(IsEndDateValidConstraint)\n  endDate: Date;\n\n  @Validate(IsActiveValidConstraint)\n  isActive: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePermissionDto.html":{"url":"classes/CreatePermissionDto.html","title":"class - CreatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/dto/create-permission.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                apiPath\n                            \n                            \n                                    \n                                method\n                            \n                            \n                                    \n                                module\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'apiPath không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'method không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'module không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'name không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nexport class CreatePermissionDto {\n  @IsNotEmpty({ message: 'name không được để trống', })\n  name: string;\n\n  @IsNotEmpty({ message: 'apiPath không được để trống', })\n  apiPath: string;\n\n  @IsNotEmpty({ message: 'method không được để trống', })\n  method: string;\n\n  @IsNotEmpty({ message: 'module không được để trống', })\n  module: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateResumeDto.html":{"url":"classes/CreateResumeDto.html","title":"class - CreateResumeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateResumeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/create-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                companyId\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                jobId\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                url\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Validate(IsCompanyIdValidConstraint)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Validate(IsEmailValidConstraint)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Validate(IsJobIdValidConstraint)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'status không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'url không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Validate(IsUserIdValidConstraint)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, Validate } from 'class-validator';\nimport mongoose from 'mongoose';\nimport {\n  IsCompanyIdValidConstraint,\n  IsEmailValidConstraint, IsJobIdValidConstraint,\n  IsUserIdValidConstraint,\n} from 'src/resumes/validator/validate.resume';\n\nexport class CreateResumeDto {\n  @Validate(IsEmailValidConstraint)\n  email: string;\n\n  @Validate(IsUserIdValidConstraint)\n  userId: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({ message: 'url không được để trống' })\n  url: string;\n\n  @IsNotEmpty({ message: 'status không được để trống' })\n  status: string;\n\n  @Validate(IsCompanyIdValidConstraint)\n  companyId: mongoose.Schema.Types.ObjectId;\n\n  @Validate(IsJobIdValidConstraint)\n  jobId: mongoose.Schema.Types.ObjectId;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleDto.html":{"url":"classes/CreateRoleDto.html","title":"class - CreateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/create-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                isActive\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                permissions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'description không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'isActive không được để trống'})@IsBoolean({message: 'isActive có giá trị boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'name không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'permissions không được để trống'})@IsMongoId({each: true, message: 'each permission là mongo object id'})@IsArray({message: 'permissions có định dạng là array'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsBoolean, IsMongoId, IsNotEmpty } from 'class-validator';\nimport mongoose from 'mongoose';\n\nexport class CreateRoleDto {\n  @IsNotEmpty({ message: 'name không được để trống', })\n  name: string;\n\n  @IsNotEmpty({ message: 'description không được để trống', })\n  description: string;\n\n  @IsNotEmpty({ message: 'isActive không được để trống', })\n  @IsBoolean({ message: 'isActive có giá trị boolean' })\n  isActive: boolean;\n\n  @IsNotEmpty({ message: 'permissions không được để trống', })\n  @IsMongoId({ each: true, message: \"each permission là mongo object id\" })\n  @IsArray({ message: 'permissions có định dạng là array', })\n  permissions: mongoose.Schema.Types.ObjectId[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSubscriberDto.html":{"url":"classes/CreateSubscriberDto.html","title":"class - CreateSubscriberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSubscriberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/dto/create-subscriber.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                skills\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail({}, {message: 'Email không đúng định dạng'})@IsNotEmpty({message: 'Email không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'skills không được để trống'})@IsArray({message: 'skills có định dạng là array'})@IsString({each: true, message: 'skill định dạng là string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsEmail, IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateSubscriberDto {\n  @IsNotEmpty({ message: 'Name không được để trống' })\n  name: string;\n\n  @IsEmail({}, { message: 'Email không đúng định dạng' })\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'skills không được để trống' })\n  @IsArray({ message: 'skills có định dạng là array' })\n  @IsString({ each: true, message: 'skill định dạng là string' })\n  skills: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserCvDto.html":{"url":"classes/CreateUserCvDto.html","title":"class - CreateUserCvDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserCvDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/create-user-cv.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                companyId\n                            \n                            \n                                    \n                                jobId\n                            \n                            \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Validate(IsCompanyIdValidConstraint)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-user-cv.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Validate(IsJobIdValidConstraint)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-user-cv.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'url không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-user-cv.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsMongoId, IsNotEmpty, Validate } from 'class-validator';\nimport mongoose from 'mongoose';\nimport {\n  IsCompanyIdValidConstraint,\n  IsJobIdValidConstraint,\n} from 'src/resumes/validator/validate.resume';\n\nexport class CreateUserCvDto {\n  @IsNotEmpty({ message: 'url không được để trống' })\n  url: string;\n\n  @Validate(IsCompanyIdValidConstraint)\n  companyId: mongoose.Schema.Types.ObjectId;\n\n  @Validate(IsJobIdValidConstraint)\n  jobId: mongoose.Schema.Types.ObjectId;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Validate(IsAddressValidConstraint)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Validate(IsAgeValidConstraint)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Company\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyObject()@IsObject()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Validate(IsEmailValidConstraint)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Validate(IsGenderValidConstraint)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Validate(IsNameValidConstraint)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Validate(IsPasswordValidConstraint)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Validate(IsPhoneValidConstraint)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Role không được để trống'})@IsMongoId({message: 'Role có định dạng là mongo id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:53\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsMongoId,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  Validate,\n  ValidateNested,\n} from 'class-validator';\nimport {\n  IsAddressValidConstraint,\n  IsAgeValidConstraint,\n  IsEmailValidConstraint,\n  IsGenderValidConstraint,\n  IsNameValidConstraint,\n  IsPasswordValidConstraint,\n  IsPhoneValidConstraint,\n} from 'src/users/validator/validate.user';\nimport { Type } from 'class-transformer';\nimport mongoose from 'mongoose';\n\nclass Company {\n  @IsNotEmpty()\n  _id: string;\n\n  @IsNotEmpty()\n  name: string;\n}\n\nexport class CreateUserDto {\n  @Validate(IsNameValidConstraint)\n  name: string;\n\n  @Validate(IsEmailValidConstraint)\n  email: string;\n\n  @Validate(IsPasswordValidConstraint)\n  password: string;\n\n  @Validate(IsPhoneValidConstraint)\n  phone: number;\n\n  @Validate(IsAgeValidConstraint)\n  age: number;\n\n  @Validate(IsGenderValidConstraint)\n  gender: string;\n\n  @Validate(IsAddressValidConstraint)\n  address: string;\n\n  @IsNotEmpty({ message: 'Role không được để trống', })\n  @IsMongoId({ message: 'Role có định dạng là mongo id', })\n  role: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DatabasesController.html":{"url":"controllers/DatabasesController.html","title":"controller - DatabasesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DatabasesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/databases/databases.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                databases\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { DatabasesService } from 'src/databases/databases.service';\n\n@Controller('databases')\nexport class DatabasesController {\n  constructor(private readonly databasesService: DatabasesService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabasesModule.html":{"url":"modules/DatabasesModule.html","title":"module - DatabasesModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabasesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DatabasesModule\n\n\n\ncluster_DatabasesModule_providers\n\n\n\n\nDatabasesService\n\nDatabasesService\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nDatabasesModule -->\n\nDatabasesService->DatabasesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nDatabasesModule -->\n\nUsersService->DatabasesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/databases/databases.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DatabasesService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DatabasesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { DatabasesService } from 'src/databases/databases.service';\nimport { DatabasesController } from 'src/databases/databases.controller';\nimport { User, UserSchema } from 'src/users/schemas/user.schema';\nimport {\n  Permission,\n  PermissionSchema,\n} from 'src/permissions/schemas/permission.schema';\nimport { Role, RoleSchema } from 'src/roles/schemas/role.schema';\nimport { UsersService } from 'src/users/users.service';\n\n@Module({\n  controllers: [DatabasesController],\n  providers: [DatabasesService, UsersService],\n  imports: [\n    MongooseModule.forFeature([\n      { name: User.name, schema: UserSchema },\n      { name: Permission.name, schema: PermissionSchema },\n      { name: Role.name, schema: RoleSchema },\n    ]),\n  ],\n})\nexport class DatabasesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabasesService.html":{"url":"injectables/DatabasesService.html","title":"injectable - DatabasesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabasesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/databases/databases.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: SoftDeleteModel, permissionModel: SoftDeleteModel, roleModel: SoftDeleteModel, configService: ConfigService, userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/databases/databases.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        permissionModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/databases/databases.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(DatabasesService.name)\n                    \n                \n                    \n                        \n                                Defined in src/databases/databases.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, OnModuleInit } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { ConfigService } from '@nestjs/config';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { User, UserDocument } from 'src/users/schemas/user.schema';\nimport {\n  Permission,\n  PermissionDocument,\n} from 'src/permissions/schemas/permission.schema';\nimport { Role, RoleDocument } from 'src/roles/schemas/role.schema';\nimport { UsersService } from 'src/users/users.service';\nimport { ADMIN_ROLE, INIT_PERMISSIONS, USER_ROLE } from './sample';\n\n@Injectable()\nexport class DatabasesService implements OnModuleInit {\n  private readonly logger = new Logger(DatabasesService.name);\n\n  constructor(\n    @InjectModel(User.name)\n    private userModel: SoftDeleteModel,\n    @InjectModel(Permission.name)\n    private permissionModel: SoftDeleteModel,\n    @InjectModel(Role.name)\n    private roleModel: SoftDeleteModel,\n    private configService: ConfigService,\n    private userService: UsersService,\n  ) {}\n\n  async onModuleInit() {\n    const isInit = this.configService.get('SHOULD_INIT');\n    if (Boolean(isInit)) {\n      const countUser = await this.userModel.countDocuments({});\n      const countPermission = await this.permissionModel.countDocuments({});\n      const countRole = await this.roleModel.countDocuments({});\n\n      //create permissions\n      if (countPermission === 0) {\n        await this.permissionModel.insertMany(INIT_PERMISSIONS);\n        //bulk create\n      }\n\n      // create role\n      if (countRole === 0) {\n        const permissions = await this.permissionModel.find({}).select('_id');\n        await this.roleModel.insertMany([\n          {\n            name: ADMIN_ROLE,\n            description: 'Admin thì full quyền :v',\n            isActive: true,\n            permissions: permissions,\n          },\n          {\n            name: USER_ROLE,\n            description: 'Người dùng/Ứng viên sử dụng hệ thống',\n            isActive: true,\n            permissions: [], //không set quyền, chỉ cần add ROLE\n          },\n        ]);\n      }\n\n      if (countUser === 0) {\n        const adminRole = await this.roleModel.findOne({ name: ADMIN_ROLE });\n        const userRole = await this.roleModel.findOne({ name: USER_ROLE });\n        await this.userModel.insertMany([\n          {\n            name: \"Admin\",\n            email: 'admin@gmail.com',\n            password: this.userService.hashPassword(\n              this.configService.get('INIT_PASSWORD'),\n            ),\n            age: 32,\n            phone: '0365741416',\n            gender: 'MALE',\n            address: 'VietNam',\n            role: adminRole?._id,\n          },\n          {\n            name: \"Edan Nguyễn\",\n            email: 'edanprince@gmail.com',\n            password: this.userService.hashPassword(\n              this.configService.get('INIT_PASSWORD'),\n            ),\n            age: 26,\n            phone: '0365741416',\n            gender: 'MALE',\n            address: 'VietNam',\n            role: adminRole?._id,\n          },\n          {\n            name: \"User\",\n            email: 'user@gmail.com',\n            password: this.userService.hashPassword(\n              this.configService.get('INIT_PASSWORD'),\n            ),\n            age: 69,\n            phone: '0365741416',\n            gender: 'MALE',\n            address: 'VietNam',\n            role: userRole?._id,\n          },\n        ]);\n      }\n      if (countUser > 0 && countRole > 0 && countPermission > 0) {\n        this.logger.log('>>> ALREADY INIT SAMPLE DATA...');\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/File.html":{"url":"classes/File.html","title":"class - File","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/schemas/file.schema.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class File {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FilesController.html":{"url":"controllers/FilesController.html","title":"controller - FilesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FilesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                files\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateFileDto: UpdateFileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateFileDto\n                                            \n                                                            UpdateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFile(file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('upload')@ResponseMessage('Upload Single File')@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { fileName: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseInterceptors,\n  UploadedFile,\n  ParseFilePipeBuilder,\n  HttpStatus,\n} from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { FilesService } from 'src/files/files.service';\nimport { UpdateFileDto } from 'src/files/dto/update-file.dto';\nimport { Public, ResponseMessage } from 'src/decorator/customize';\n\n@Controller('files')\nexport class FilesController {\n  constructor(private readonly filesService: FilesService) {}\n\n  @Public()\n  @Post('upload')\n  @ResponseMessage(\"Upload Single File\")\n  @UseInterceptors(FileInterceptor('fileUpload'))\n  uploadFile(\n    @UploadedFile(\n      new ParseFilePipeBuilder()\n        .addFileTypeValidator({\n          fileType: /^(jpg|jpeg|image\\/jpeg|png|image\\/png|gif|txt|pdf|application\\/pdf|doc|docx|text\\/plain)$/i,\n        })\n        .addMaxSizeValidator({\n          maxSize: 5 * 1024 * 1024,\n        })\n        .build({\n          errorHttpStatusCode: HttpStatus.UNPROCESSABLE_ENTITY,\n        }),\n    )\n    file: Express.Multer.File,\n  ) {\n    return {\n      fileName: file.filename\n    }\n  }\n\n  @Get()\n  findAll() {\n    return this.filesService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.filesService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateFileDto: UpdateFileDto) {\n    return this.filesService.update(+id, updateFileDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.filesService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n    Modules\n    FilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\n\nFilesService\n\nFilesService\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/files/files.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FilesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FilesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FilesService } from 'src/files/files.service';\nimport { FilesController } from 'src/files/files.controller';\nimport { MulterModule } from '@nestjs/platform-express';\nimport { MulterConfigService } from 'src/files/config/multer.config';\n\n@Module({\n  imports: [\n    MulterModule.registerAsync({\n      useClass: MulterConfigService,\n    }),\n  ],\n  controllers: [FilesController],\n  providers: [FilesService],\n})\nexport class FilesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesService.html":{"url":"injectables/FilesService.html","title":"injectable - FilesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createFileDto: CreateFileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createFileDto\n                                            \n                                                            CreateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateFileDto: UpdateFileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateFileDto\n                                            \n                                                            UpdateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateFileDto } from 'src/files/dto/create-file.dto';\nimport { UpdateFileDto } from 'src/files/dto/update-file.dto';\n\n@Injectable()\nexport class FilesService {\n  create(createFileDto: CreateFileDto) {\n    return 'This action adds a new file';\n  }\n\n  findAll() {\n    return `This action returns all files`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} file`;\n  }\n\n  update(id: number, updateFileDto: UpdateFileDto) {\n    return `This action updates a #${id} file`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} file`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        check\n                        \n                    \n                \n            \n            \n                \n                        \n                    check()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@HealthCheck()\n                \n            \n\n                    \n                        \n                            Defined in src/health/health.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport {\n  HealthCheck,\n  HealthCheckService,\n  MongooseHealthIndicator,\n} from '@nestjs/terminus';\nimport { Public } from 'src/decorator/customize';\n\n@Controller('health')\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private db: MongooseHealthIndicator,\n  ) {}\n\n  @Get()\n  @Public()\n  @HealthCheck()\n  check() {\n    return this.health.check([() => this.db.pingCheck('database')]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { HealthController } from 'src/health/health.controller';\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController]\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/History.html":{"url":"classes/History.html","title":"class - History","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  History\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/update-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UpdatedBy\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@IsNotEmpty()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsEmail, IsNotEmpty, ValidateNested } from 'class-validator';\nimport { PartialType } from '@nestjs/mapped-types';\nimport { CreateResumeDto } from 'src/resumes/dto/create-resume.dto';\nimport { Type } from 'class-transformer';\nimport { Types } from 'mongoose';\n\nclass UpdatedBy {\n  @IsNotEmpty()\n  _id: Types.ObjectId;\n\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n}\n\nclass History {\n  @IsNotEmpty()\n  status: string;\n\n  @IsNotEmpty()\n  updatedAt: Date;\n\n  @ValidateNested()\n  @IsNotEmpty()\n  @Type(() => UpdatedBy)\n  updatedBy: UpdatedBy;\n}\n\nexport class UpdateResumeDto extends PartialType(CreateResumeDto) {\n  @IsNotEmpty({ message: 'History không được để trống' })\n  @IsArray({ message: 'History có định dạng là array' })\n  @ValidateNested()\n  @Type(() => History)\n  history: History[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/types/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            age\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            gender\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            phone\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        age:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gender:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IUser {\n  _id: string;\n  name: string;\n  email: string;\n  phone: number;\n  age: number;\n  gender: string;\n  address: string;\n  role: {\n    _id: string;\n    name: string;\n  };\n  permissions?: {\n    _id: string;\n    name: string;\n    apiPath: string;\n    module: string;\n  }[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsActiveValidConstraint.html":{"url":"classes/IsActiveValidConstraint.html","title":"class - IsActiveValidConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsActiveValidConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/validator/validate.job.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage(args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/validator/validate.job.ts:168\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(value: any, args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/validator/validate.job.ts:161\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ValidationArguments,\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n} from 'class-validator';\n\n//Validate name\n@ValidatorConstraint({ async: false })\nexport class IsNameValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments) {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    if (value.length  typeof item === 'string' && /^[a-zA-Z]/.test(item),\n    );\n  }\n\n  defaultMessage(args: ValidationArguments): string {\n    const value = args.value;\n    if (!Array.isArray(value)) {\n      return 'Skill phải là một mảng.';\n    }\n    if (value.length === 0) {\n      return 'Skill không được để trống.';\n    }\n    if (!value.every((item) => typeof item === 'string')) {\n      return 'Skill chỉ được chứa các chuỗi string.';\n    }\n    if (!value.every((item) => /^[a-zA-Z]/.test(item))) {\n      return 'Mỗi skill trong mảng phải bắt đầu bằng chữ cái.';\n    }\n    return 'Skill không hợp lệ.';\n  }\n}\n\n//Validate Salary\n@ValidatorConstraint({ async: false })\nexport class IsSalaryValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments): boolean {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    return /^[0-9]+$/.test(value.toString());\n  }\n\n  defaultMessage(args: ValidationArguments): string {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Salary không được để trống.';\n    }\n    if (!/^[0-9]+$/.test(value.toString())) {\n      return 'Salary chỉ được chứa các chữ số.';\n    }\n    return 'Salary không hợp lệ.';\n  }\n}\n\n//Validate Quantity\n@ValidatorConstraint({ async: false })\nexport class IsQuantityValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments): boolean {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    return /^[0-9]+$/.test(value.toString());\n  }\n\n  defaultMessage(args: ValidationArguments): string {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Số lượng không được để trống.';\n    }\n    if (!/^[0-9]+$/.test(value.toString())) {\n      return 'Số lượng chỉ được chứa các chữ số.';\n    }\n    return 'Số lượng không hợp lệ.';\n  }\n}\n\n//Validate StartDate\n@ValidatorConstraint({ async: false })\nexport class IsStartDateValidConstraint\n  implements ValidatorConstraintInterface\n{\n  validate(value: any, args: ValidationArguments): boolean {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    return !isNaN(Date.parse(value));\n  }\n\n  defaultMessage(args: ValidationArguments): string {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Start date không được để trống.';\n    }\n    if (isNaN(Date.parse(value))) {\n      return 'Start date phải có dạng ngày hợp lệ.';\n    }\n    return 'Start date không hợp lệ.';\n  }\n}\n\n//Validate StartDate\n@ValidatorConstraint({ async: false })\nexport class IsEndDateValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments): boolean {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    return !isNaN(Date.parse(value));\n  }\n\n  defaultMessage(args: ValidationArguments): string {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'End date không được để trống.';\n    }\n    if (isNaN(Date.parse(value))) {\n      return 'End date phải có dạng ngày hợp lệ.';\n    }\n    return 'End date không hợp lệ.';\n  }\n}\n\n//Validate IsActive\n@ValidatorConstraint({ async: false })\nexport class IsActiveValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments): boolean {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    return typeof value === 'boolean';\n  }\n\n  defaultMessage(args: ValidationArguments): string {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'isActive không được để trống.';\n    }\n    if (typeof value !== 'boolean') {\n      return 'isActive phải có định dạng boolean.';\n    }\n    return 'isActive không hợp lệ.';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsAddressValidConstraint.html":{"url":"classes/IsAddressValidConstraint.html","title":"class - IsAddressValidConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsAddressValidConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/validator/validate.user.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage(args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/validator/validate.user.ts:217\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     \"Địa chỉ không được để trống.\" | \"Địa chỉ phải có ít nhất 10 ký tự.\" | \"Địa chỉ không được dài quá 255 ký tự.\" | \"Địa chỉ chỉ có thể chứa chữ cái, số và các ký tự đặc biệt như dấu phẩy, gạch nối, dấu chấm.\"\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(value: any, args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/validator/validate.user.ts:206\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n  ValidationArguments,\n} from 'class-validator';\n\n//Validate name\n@ValidatorConstraint({ async: false })\nexport class IsNameValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments) {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    if (value.length = 10;\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Số điện thoại không được để trống.';\n    }\n    if (!/^\\d+$/.test(value)) {\n      return 'Số điện thoại chỉ được chứa các ký tự số.';\n    } else if (value.length  200) {\n        return 'Tuổi phải nhỏ hơn 200.';\n      }\n    }\n    return '';\n  }\n}\n\n//Validate Gender\n@ValidatorConstraint({ async: false })\nexport class IsGenderValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments) {\n    const validGenders = ['male', 'female', 'other'];\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    return validGenders.includes(value.toLowerCase());\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Giới tính không được để trống.';\n    }\n    return 'Giới tính không hợp lệ. Hãy chọn giữa \"male\", \"female\" hoặc \"other\".';\n  }\n}\n\n@ValidatorConstraint({ async: false })\nexport class IsAddressValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments) {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    if (value.length  255) {\n      return false;\n    }\n    const addressRegex = /^[a-zA-Z0-9\\s,.-]+$/;\n    return addressRegex.test(value);\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Địa chỉ không được để trống.';\n    }\n    if (value.length  255) {\n      return 'Địa chỉ không được dài quá 255 ký tự.';\n    }\n    return 'Địa chỉ chỉ có thể chứa chữ cái, số và các ký tự đặc biệt như dấu phẩy, gạch nối, dấu chấm.';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsAgeValidConstraint.html":{"url":"classes/IsAgeValidConstraint.html","title":"class - IsAgeValidConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsAgeValidConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/validator/validate.user.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage(args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/validator/validate.user.ts:165\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     \"\" | \"Tuổi không được để trống.\" | \"Tuổi phải là một số nguyên.\" | \"Tuổi phải lớn hơn 0.\" | \"Tuổi phải nhỏ hơn 200.\"\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(value: any, args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/validator/validate.user.ts:152\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n  ValidationArguments,\n} from 'class-validator';\n\n//Validate name\n@ValidatorConstraint({ async: false })\nexport class IsNameValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments) {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    if (value.length = 10;\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Số điện thoại không được để trống.';\n    }\n    if (!/^\\d+$/.test(value)) {\n      return 'Số điện thoại chỉ được chứa các ký tự số.';\n    } else if (value.length  200) {\n        return 'Tuổi phải nhỏ hơn 200.';\n      }\n    }\n    return '';\n  }\n}\n\n//Validate Gender\n@ValidatorConstraint({ async: false })\nexport class IsGenderValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments) {\n    const validGenders = ['male', 'female', 'other'];\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    return validGenders.includes(value.toLowerCase());\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Giới tính không được để trống.';\n    }\n    return 'Giới tính không hợp lệ. Hãy chọn giữa \"male\", \"female\" hoặc \"other\".';\n  }\n}\n\n@ValidatorConstraint({ async: false })\nexport class IsAddressValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments) {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    if (value.length  255) {\n      return false;\n    }\n    const addressRegex = /^[a-zA-Z0-9\\s,.-]+$/;\n    return addressRegex.test(value);\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Địa chỉ không được để trống.';\n    }\n    if (value.length  255) {\n      return 'Địa chỉ không được dài quá 255 ký tự.';\n    }\n    return 'Địa chỉ chỉ có thể chứa chữ cái, số và các ký tự đặc biệt như dấu phẩy, gạch nối, dấu chấm.';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsCompanyIdValidConstraint.html":{"url":"classes/IsCompanyIdValidConstraint.html","title":"class - IsCompanyIdValidConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsCompanyIdValidConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/validator/validate.resume.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage(args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/validator/validate.resume.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     \"companyId không được để trống.\" | \"companyId phải là một ObjectId hợp lệ.\"\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(value: any, args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/validator/validate.resume.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ValidationArguments,\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n} from 'class-validator';\nimport mongoose from 'mongoose';\n\n//Validate Email\n@ValidatorConstraint({ async: false })\nexport class IsEmailValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments) {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    const atIndex = value.indexOf('@');\n    if (atIndex === -1) {\n      return false;\n    }\n    const localPart = value.split('@')[0];\n    const domainPart = value.split('@')[1];\n    if (/[^a-zA-Z0-9]/.test(localPart)) {\n      return false;\n    }\n    if (!/[a-zA-Z]/.test(localPart)) {\n      return false;\n    }\n    if (domainPart !== 'gmail.com') {\n      return false;\n    }\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@gmail\\.com$/;\n    return emailRegex.test(value);\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Email không được để trống.';\n    }\n    const localPart = value.split('@')[0];\n    if (/[^a-zA-Z0-9]/.test(localPart)) {\n      return 'Email chỉ được chứa bao gồm chữ cái và số!';\n    }\n    if (!/[a-zA-Z]/.test(localPart)) {\n      return 'Email phải chứa ít nhất một chữ cái';\n    }\n    if (!value.endsWith('@gmail.com')) {\n      return 'Email phải có đuôi @gmail.com';\n    }\n    return 'Email không hợp lệ';\n  }\n}\n\n//Validate UserId\n@ValidatorConstraint({ async: false })\nexport class IsUserIdValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments): boolean {\n    if (!value) {\n      return false;\n    }\n    if (value instanceof mongoose.Types.ObjectId) {\n      return mongoose.Types.ObjectId.isValid(value);\n    }\n    return false;\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    if (!args.value) {\n      return 'userId không được để trống.';\n    }\n    return 'userId phải là một ObjectId hợp lệ.';\n  }\n}\n\n//Validate CompanyId\n@ValidatorConstraint({ async: false })\nexport class IsCompanyIdValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments): boolean {\n    if (!value) {\n      return false;\n    }\n    return mongoose.Types.ObjectId.isValid(value);\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    if (!args.value) {\n      return 'companyId không được để trống.';\n    }\n    return 'companyId phải là một ObjectId hợp lệ.';\n  }\n}\n\n//Validate JobId\n@ValidatorConstraint({ async: false })\nexport class IsJobIdValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments): boolean {\n    if (!value) {\n      return false;\n    }\n    return mongoose.Types.ObjectId.isValid(value);\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    if (!args.value) {\n      return 'jobId không được để trống.';\n    }\n    return 'jobId phải là một ObjectId hợp lệ.';\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsEmailValidConstraint.html":{"url":"classes/IsEmailValidConstraint.html","title":"class - IsEmailValidConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsEmailValidConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/validator/validate.resume.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage(args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/validator/validate.resume.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     \"Email không được để trống.\" | \"Email chỉ được chứa bao gồm chữ cái và số!\" | \"Email phải chứa ít nhất một chữ cái\" | \"Email phải có đuôi @gmail.com\" | \"Email không hợp lệ\"\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(value: any, args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/validator/validate.resume.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ValidationArguments,\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n} from 'class-validator';\nimport mongoose from 'mongoose';\n\n//Validate Email\n@ValidatorConstraint({ async: false })\nexport class IsEmailValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments) {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    const atIndex = value.indexOf('@');\n    if (atIndex === -1) {\n      return false;\n    }\n    const localPart = value.split('@')[0];\n    const domainPart = value.split('@')[1];\n    if (/[^a-zA-Z0-9]/.test(localPart)) {\n      return false;\n    }\n    if (!/[a-zA-Z]/.test(localPart)) {\n      return false;\n    }\n    if (domainPart !== 'gmail.com') {\n      return false;\n    }\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@gmail\\.com$/;\n    return emailRegex.test(value);\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Email không được để trống.';\n    }\n    const localPart = value.split('@')[0];\n    if (/[^a-zA-Z0-9]/.test(localPart)) {\n      return 'Email chỉ được chứa bao gồm chữ cái và số!';\n    }\n    if (!/[a-zA-Z]/.test(localPart)) {\n      return 'Email phải chứa ít nhất một chữ cái';\n    }\n    if (!value.endsWith('@gmail.com')) {\n      return 'Email phải có đuôi @gmail.com';\n    }\n    return 'Email không hợp lệ';\n  }\n}\n\n//Validate UserId\n@ValidatorConstraint({ async: false })\nexport class IsUserIdValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments): boolean {\n    if (!value) {\n      return false;\n    }\n    if (value instanceof mongoose.Types.ObjectId) {\n      return mongoose.Types.ObjectId.isValid(value);\n    }\n    return false;\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    if (!args.value) {\n      return 'userId không được để trống.';\n    }\n    return 'userId phải là một ObjectId hợp lệ.';\n  }\n}\n\n//Validate CompanyId\n@ValidatorConstraint({ async: false })\nexport class IsCompanyIdValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments): boolean {\n    if (!value) {\n      return false;\n    }\n    return mongoose.Types.ObjectId.isValid(value);\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    if (!args.value) {\n      return 'companyId không được để trống.';\n    }\n    return 'companyId phải là một ObjectId hợp lệ.';\n  }\n}\n\n//Validate JobId\n@ValidatorConstraint({ async: false })\nexport class IsJobIdValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments): boolean {\n    if (!value) {\n      return false;\n    }\n    return mongoose.Types.ObjectId.isValid(value);\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    if (!args.value) {\n      return 'jobId không được để trống.';\n    }\n    return 'jobId phải là một ObjectId hợp lệ.';\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsEmailValidConstraint-1.html":{"url":"classes/IsEmailValidConstraint-1.html","title":"class - IsEmailValidConstraint-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsEmailValidConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/validator/validate.user.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage(args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/validator/validate.user.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     \"Email không được để trống.\" | \"Email chỉ được chứa bao gồm chữ cái và số!\" | \"Email phải chứa ít nhất một chữ cái\" | \"Email phải có đuôi @gmail.com\" | \"Email không hợp lệ\"\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(value: any, args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/validator/validate.user.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n  ValidationArguments,\n} from 'class-validator';\n\n//Validate name\n@ValidatorConstraint({ async: false })\nexport class IsNameValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments) {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    if (value.length = 10;\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Số điện thoại không được để trống.';\n    }\n    if (!/^\\d+$/.test(value)) {\n      return 'Số điện thoại chỉ được chứa các ký tự số.';\n    } else if (value.length  200) {\n        return 'Tuổi phải nhỏ hơn 200.';\n      }\n    }\n    return '';\n  }\n}\n\n//Validate Gender\n@ValidatorConstraint({ async: false })\nexport class IsGenderValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments) {\n    const validGenders = ['male', 'female', 'other'];\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    return validGenders.includes(value.toLowerCase());\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Giới tính không được để trống.';\n    }\n    return 'Giới tính không hợp lệ. Hãy chọn giữa \"male\", \"female\" hoặc \"other\".';\n  }\n}\n\n@ValidatorConstraint({ async: false })\nexport class IsAddressValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments) {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    if (value.length  255) {\n      return false;\n    }\n    const addressRegex = /^[a-zA-Z0-9\\s,.-]+$/;\n    return addressRegex.test(value);\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Địa chỉ không được để trống.';\n    }\n    if (value.length  255) {\n      return 'Địa chỉ không được dài quá 255 ký tự.';\n    }\n    return 'Địa chỉ chỉ có thể chứa chữ cái, số và các ký tự đặc biệt như dấu phẩy, gạch nối, dấu chấm.';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsEndDateValidConstraint.html":{"url":"classes/IsEndDateValidConstraint.html","title":"class - IsEndDateValidConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsEndDateValidConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/validator/validate.job.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage(args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/validator/validate.job.ts:146\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(value: any, args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/validator/validate.job.ts:139\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ValidationArguments,\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n} from 'class-validator';\n\n//Validate name\n@ValidatorConstraint({ async: false })\nexport class IsNameValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments) {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    if (value.length  typeof item === 'string' && /^[a-zA-Z]/.test(item),\n    );\n  }\n\n  defaultMessage(args: ValidationArguments): string {\n    const value = args.value;\n    if (!Array.isArray(value)) {\n      return 'Skill phải là một mảng.';\n    }\n    if (value.length === 0) {\n      return 'Skill không được để trống.';\n    }\n    if (!value.every((item) => typeof item === 'string')) {\n      return 'Skill chỉ được chứa các chuỗi string.';\n    }\n    if (!value.every((item) => /^[a-zA-Z]/.test(item))) {\n      return 'Mỗi skill trong mảng phải bắt đầu bằng chữ cái.';\n    }\n    return 'Skill không hợp lệ.';\n  }\n}\n\n//Validate Salary\n@ValidatorConstraint({ async: false })\nexport class IsSalaryValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments): boolean {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    return /^[0-9]+$/.test(value.toString());\n  }\n\n  defaultMessage(args: ValidationArguments): string {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Salary không được để trống.';\n    }\n    if (!/^[0-9]+$/.test(value.toString())) {\n      return 'Salary chỉ được chứa các chữ số.';\n    }\n    return 'Salary không hợp lệ.';\n  }\n}\n\n//Validate Quantity\n@ValidatorConstraint({ async: false })\nexport class IsQuantityValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments): boolean {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    return /^[0-9]+$/.test(value.toString());\n  }\n\n  defaultMessage(args: ValidationArguments): string {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Số lượng không được để trống.';\n    }\n    if (!/^[0-9]+$/.test(value.toString())) {\n      return 'Số lượng chỉ được chứa các chữ số.';\n    }\n    return 'Số lượng không hợp lệ.';\n  }\n}\n\n//Validate StartDate\n@ValidatorConstraint({ async: false })\nexport class IsStartDateValidConstraint\n  implements ValidatorConstraintInterface\n{\n  validate(value: any, args: ValidationArguments): boolean {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    return !isNaN(Date.parse(value));\n  }\n\n  defaultMessage(args: ValidationArguments): string {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Start date không được để trống.';\n    }\n    if (isNaN(Date.parse(value))) {\n      return 'Start date phải có dạng ngày hợp lệ.';\n    }\n    return 'Start date không hợp lệ.';\n  }\n}\n\n//Validate StartDate\n@ValidatorConstraint({ async: false })\nexport class IsEndDateValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments): boolean {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    return !isNaN(Date.parse(value));\n  }\n\n  defaultMessage(args: ValidationArguments): string {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'End date không được để trống.';\n    }\n    if (isNaN(Date.parse(value))) {\n      return 'End date phải có dạng ngày hợp lệ.';\n    }\n    return 'End date không hợp lệ.';\n  }\n}\n\n//Validate IsActive\n@ValidatorConstraint({ async: false })\nexport class IsActiveValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments): boolean {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    return typeof value === 'boolean';\n  }\n\n  defaultMessage(args: ValidationArguments): string {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'isActive không được để trống.';\n    }\n    if (typeof value !== 'boolean') {\n      return 'isActive phải có định dạng boolean.';\n    }\n    return 'isActive không hợp lệ.';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsGenderValidConstraint.html":{"url":"classes/IsGenderValidConstraint.html","title":"class - IsGenderValidConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsGenderValidConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/validator/validate.user.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage(args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/validator/validate.user.ts:195\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     \"Giới tính không được để trống.\" | \"Giới tính không hợp lệ. Hãy chọn giữa \\\"male\\\", \\\"female\\\" hoặc \\\"other\\\".\"\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(value: any, args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/validator/validate.user.ts:187\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n  ValidationArguments,\n} from 'class-validator';\n\n//Validate name\n@ValidatorConstraint({ async: false })\nexport class IsNameValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments) {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    if (value.length = 10;\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Số điện thoại không được để trống.';\n    }\n    if (!/^\\d+$/.test(value)) {\n      return 'Số điện thoại chỉ được chứa các ký tự số.';\n    } else if (value.length  200) {\n        return 'Tuổi phải nhỏ hơn 200.';\n      }\n    }\n    return '';\n  }\n}\n\n//Validate Gender\n@ValidatorConstraint({ async: false })\nexport class IsGenderValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments) {\n    const validGenders = ['male', 'female', 'other'];\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    return validGenders.includes(value.toLowerCase());\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Giới tính không được để trống.';\n    }\n    return 'Giới tính không hợp lệ. Hãy chọn giữa \"male\", \"female\" hoặc \"other\".';\n  }\n}\n\n@ValidatorConstraint({ async: false })\nexport class IsAddressValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments) {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    if (value.length  255) {\n      return false;\n    }\n    const addressRegex = /^[a-zA-Z0-9\\s,.-]+$/;\n    return addressRegex.test(value);\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Địa chỉ không được để trống.';\n    }\n    if (value.length  255) {\n      return 'Địa chỉ không được dài quá 255 ký tự.';\n    }\n    return 'Địa chỉ chỉ có thể chứa chữ cái, số và các ký tự đặc biệt như dấu phẩy, gạch nối, dấu chấm.';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsJobIdValidConstraint.html":{"url":"classes/IsJobIdValidConstraint.html","title":"class - IsJobIdValidConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsJobIdValidConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/validator/validate.resume.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage(args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/validator/validate.resume.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     \"jobId không được để trống.\" | \"jobId phải là một ObjectId hợp lệ.\"\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(value: any, args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/validator/validate.resume.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ValidationArguments,\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n} from 'class-validator';\nimport mongoose from 'mongoose';\n\n//Validate Email\n@ValidatorConstraint({ async: false })\nexport class IsEmailValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments) {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    const atIndex = value.indexOf('@');\n    if (atIndex === -1) {\n      return false;\n    }\n    const localPart = value.split('@')[0];\n    const domainPart = value.split('@')[1];\n    if (/[^a-zA-Z0-9]/.test(localPart)) {\n      return false;\n    }\n    if (!/[a-zA-Z]/.test(localPart)) {\n      return false;\n    }\n    if (domainPart !== 'gmail.com') {\n      return false;\n    }\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@gmail\\.com$/;\n    return emailRegex.test(value);\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Email không được để trống.';\n    }\n    const localPart = value.split('@')[0];\n    if (/[^a-zA-Z0-9]/.test(localPart)) {\n      return 'Email chỉ được chứa bao gồm chữ cái và số!';\n    }\n    if (!/[a-zA-Z]/.test(localPart)) {\n      return 'Email phải chứa ít nhất một chữ cái';\n    }\n    if (!value.endsWith('@gmail.com')) {\n      return 'Email phải có đuôi @gmail.com';\n    }\n    return 'Email không hợp lệ';\n  }\n}\n\n//Validate UserId\n@ValidatorConstraint({ async: false })\nexport class IsUserIdValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments): boolean {\n    if (!value) {\n      return false;\n    }\n    if (value instanceof mongoose.Types.ObjectId) {\n      return mongoose.Types.ObjectId.isValid(value);\n    }\n    return false;\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    if (!args.value) {\n      return 'userId không được để trống.';\n    }\n    return 'userId phải là một ObjectId hợp lệ.';\n  }\n}\n\n//Validate CompanyId\n@ValidatorConstraint({ async: false })\nexport class IsCompanyIdValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments): boolean {\n    if (!value) {\n      return false;\n    }\n    return mongoose.Types.ObjectId.isValid(value);\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    if (!args.value) {\n      return 'companyId không được để trống.';\n    }\n    return 'companyId phải là một ObjectId hợp lệ.';\n  }\n}\n\n//Validate JobId\n@ValidatorConstraint({ async: false })\nexport class IsJobIdValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments): boolean {\n    if (!value) {\n      return false;\n    }\n    return mongoose.Types.ObjectId.isValid(value);\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    if (!args.value) {\n      return 'jobId không được để trống.';\n    }\n    return 'jobId phải là một ObjectId hợp lệ.';\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsNameValidConstraint.html":{"url":"classes/IsNameValidConstraint.html","title":"class - IsNameValidConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsNameValidConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/validator/validate.company.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage(args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/validator/validate.company.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     \"Tên công ty không được để trống.\" | \"Tên công ty phải có ít nhất 6 ký tự.\" | \"Tên phải bắt đầu bằng chữ cái.\" | \"Tên không hợp lệ\"\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(value: any, args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/validator/validate.company.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n  ValidationArguments,\n} from 'class-validator';\n\n//Validate name company\n@ValidatorConstraint({ async: false })\nexport class IsNameValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments) {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    if (value.length \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsNameValidConstraint-1.html":{"url":"classes/IsNameValidConstraint-1.html","title":"class - IsNameValidConstraint-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsNameValidConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/validator/validate.job.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage(args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/validator/validate.job.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     \"Tên job không được để trống.\" | \"Tên job phải có ít nhất 6 ký tự.\" | \"Tên job phải bắt đầu bằng chữ cái.\" | \"Tên job không hợp lệ\"\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(value: any, args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/validator/validate.job.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ValidationArguments,\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n} from 'class-validator';\n\n//Validate name\n@ValidatorConstraint({ async: false })\nexport class IsNameValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments) {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    if (value.length  typeof item === 'string' && /^[a-zA-Z]/.test(item),\n    );\n  }\n\n  defaultMessage(args: ValidationArguments): string {\n    const value = args.value;\n    if (!Array.isArray(value)) {\n      return 'Skill phải là một mảng.';\n    }\n    if (value.length === 0) {\n      return 'Skill không được để trống.';\n    }\n    if (!value.every((item) => typeof item === 'string')) {\n      return 'Skill chỉ được chứa các chuỗi string.';\n    }\n    if (!value.every((item) => /^[a-zA-Z]/.test(item))) {\n      return 'Mỗi skill trong mảng phải bắt đầu bằng chữ cái.';\n    }\n    return 'Skill không hợp lệ.';\n  }\n}\n\n//Validate Salary\n@ValidatorConstraint({ async: false })\nexport class IsSalaryValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments): boolean {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    return /^[0-9]+$/.test(value.toString());\n  }\n\n  defaultMessage(args: ValidationArguments): string {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Salary không được để trống.';\n    }\n    if (!/^[0-9]+$/.test(value.toString())) {\n      return 'Salary chỉ được chứa các chữ số.';\n    }\n    return 'Salary không hợp lệ.';\n  }\n}\n\n//Validate Quantity\n@ValidatorConstraint({ async: false })\nexport class IsQuantityValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments): boolean {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    return /^[0-9]+$/.test(value.toString());\n  }\n\n  defaultMessage(args: ValidationArguments): string {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Số lượng không được để trống.';\n    }\n    if (!/^[0-9]+$/.test(value.toString())) {\n      return 'Số lượng chỉ được chứa các chữ số.';\n    }\n    return 'Số lượng không hợp lệ.';\n  }\n}\n\n//Validate StartDate\n@ValidatorConstraint({ async: false })\nexport class IsStartDateValidConstraint\n  implements ValidatorConstraintInterface\n{\n  validate(value: any, args: ValidationArguments): boolean {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    return !isNaN(Date.parse(value));\n  }\n\n  defaultMessage(args: ValidationArguments): string {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Start date không được để trống.';\n    }\n    if (isNaN(Date.parse(value))) {\n      return 'Start date phải có dạng ngày hợp lệ.';\n    }\n    return 'Start date không hợp lệ.';\n  }\n}\n\n//Validate StartDate\n@ValidatorConstraint({ async: false })\nexport class IsEndDateValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments): boolean {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    return !isNaN(Date.parse(value));\n  }\n\n  defaultMessage(args: ValidationArguments): string {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'End date không được để trống.';\n    }\n    if (isNaN(Date.parse(value))) {\n      return 'End date phải có dạng ngày hợp lệ.';\n    }\n    return 'End date không hợp lệ.';\n  }\n}\n\n//Validate IsActive\n@ValidatorConstraint({ async: false })\nexport class IsActiveValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments): boolean {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    return typeof value === 'boolean';\n  }\n\n  defaultMessage(args: ValidationArguments): string {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'isActive không được để trống.';\n    }\n    if (typeof value !== 'boolean') {\n      return 'isActive phải có định dạng boolean.';\n    }\n    return 'isActive không hợp lệ.';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsNameValidConstraint-2.html":{"url":"classes/IsNameValidConstraint-2.html","title":"class - IsNameValidConstraint-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsNameValidConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/validator/validate.user.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage(args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/validator/validate.user.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     \"Tên phải bắt đầu bằng chữ cái.\" | \"Tên không hợp lệ\" | \"Tên không được để trống.\" | \"Tên phải có ít nhất 6 ký tự.\"\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(value: any, args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/validator/validate.user.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n  ValidationArguments,\n} from 'class-validator';\n\n//Validate name\n@ValidatorConstraint({ async: false })\nexport class IsNameValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments) {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    if (value.length = 10;\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Số điện thoại không được để trống.';\n    }\n    if (!/^\\d+$/.test(value)) {\n      return 'Số điện thoại chỉ được chứa các ký tự số.';\n    } else if (value.length  200) {\n        return 'Tuổi phải nhỏ hơn 200.';\n      }\n    }\n    return '';\n  }\n}\n\n//Validate Gender\n@ValidatorConstraint({ async: false })\nexport class IsGenderValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments) {\n    const validGenders = ['male', 'female', 'other'];\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    return validGenders.includes(value.toLowerCase());\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Giới tính không được để trống.';\n    }\n    return 'Giới tính không hợp lệ. Hãy chọn giữa \"male\", \"female\" hoặc \"other\".';\n  }\n}\n\n@ValidatorConstraint({ async: false })\nexport class IsAddressValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments) {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    if (value.length  255) {\n      return false;\n    }\n    const addressRegex = /^[a-zA-Z0-9\\s,.-]+$/;\n    return addressRegex.test(value);\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Địa chỉ không được để trống.';\n    }\n    if (value.length  255) {\n      return 'Địa chỉ không được dài quá 255 ký tự.';\n    }\n    return 'Địa chỉ chỉ có thể chứa chữ cái, số và các ký tự đặc biệt như dấu phẩy, gạch nối, dấu chấm.';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsPasswordValidConstraint.html":{"url":"classes/IsPasswordValidConstraint.html","title":"class - IsPasswordValidConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsPasswordValidConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/validator/validate.user.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage(args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/validator/validate.user.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     \"Mật khẩu không được để trống.\" | \"Mật khẩu phải có ít nhất 6 ký tự.\" | \"Mật khẩu không được chứa chữ cái có dấu.\" | \"Mật khẩu không được chứa ký tự khoảng cách.\" | \"Mật khẩu không hợp lệ\"\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(value: any, args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/validator/validate.user.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n  ValidationArguments,\n} from 'class-validator';\n\n//Validate name\n@ValidatorConstraint({ async: false })\nexport class IsNameValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments) {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    if (value.length = 10;\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Số điện thoại không được để trống.';\n    }\n    if (!/^\\d+$/.test(value)) {\n      return 'Số điện thoại chỉ được chứa các ký tự số.';\n    } else if (value.length  200) {\n        return 'Tuổi phải nhỏ hơn 200.';\n      }\n    }\n    return '';\n  }\n}\n\n//Validate Gender\n@ValidatorConstraint({ async: false })\nexport class IsGenderValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments) {\n    const validGenders = ['male', 'female', 'other'];\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    return validGenders.includes(value.toLowerCase());\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Giới tính không được để trống.';\n    }\n    return 'Giới tính không hợp lệ. Hãy chọn giữa \"male\", \"female\" hoặc \"other\".';\n  }\n}\n\n@ValidatorConstraint({ async: false })\nexport class IsAddressValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments) {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    if (value.length  255) {\n      return false;\n    }\n    const addressRegex = /^[a-zA-Z0-9\\s,.-]+$/;\n    return addressRegex.test(value);\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Địa chỉ không được để trống.';\n    }\n    if (value.length  255) {\n      return 'Địa chỉ không được dài quá 255 ký tự.';\n    }\n    return 'Địa chỉ chỉ có thể chứa chữ cái, số và các ký tự đặc biệt như dấu phẩy, gạch nối, dấu chấm.';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsPhoneValidConstraint.html":{"url":"classes/IsPhoneValidConstraint.html","title":"class - IsPhoneValidConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsPhoneValidConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/validator/validate.user.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage(args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/validator/validate.user.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     \"Số điện thoại không được để trống.\" | \"Số điện thoại chỉ được chứa các ký tự số.\" | \"Số điện thoại phải có ít nhất 10 ký tự.\" | \"\"\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(value: any, args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/validator/validate.user.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n  ValidationArguments,\n} from 'class-validator';\n\n//Validate name\n@ValidatorConstraint({ async: false })\nexport class IsNameValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments) {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    if (value.length = 10;\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Số điện thoại không được để trống.';\n    }\n    if (!/^\\d+$/.test(value)) {\n      return 'Số điện thoại chỉ được chứa các ký tự số.';\n    } else if (value.length  200) {\n        return 'Tuổi phải nhỏ hơn 200.';\n      }\n    }\n    return '';\n  }\n}\n\n//Validate Gender\n@ValidatorConstraint({ async: false })\nexport class IsGenderValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments) {\n    const validGenders = ['male', 'female', 'other'];\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    return validGenders.includes(value.toLowerCase());\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Giới tính không được để trống.';\n    }\n    return 'Giới tính không hợp lệ. Hãy chọn giữa \"male\", \"female\" hoặc \"other\".';\n  }\n}\n\n@ValidatorConstraint({ async: false })\nexport class IsAddressValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments) {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    if (value.length  255) {\n      return false;\n    }\n    const addressRegex = /^[a-zA-Z0-9\\s,.-]+$/;\n    return addressRegex.test(value);\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Địa chỉ không được để trống.';\n    }\n    if (value.length  255) {\n      return 'Địa chỉ không được dài quá 255 ký tự.';\n    }\n    return 'Địa chỉ chỉ có thể chứa chữ cái, số và các ký tự đặc biệt như dấu phẩy, gạch nối, dấu chấm.';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsQuantityValidConstraint.html":{"url":"classes/IsQuantityValidConstraint.html","title":"class - IsQuantityValidConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsQuantityValidConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/validator/validate.job.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage(args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/validator/validate.job.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(value: any, args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/validator/validate.job.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ValidationArguments,\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n} from 'class-validator';\n\n//Validate name\n@ValidatorConstraint({ async: false })\nexport class IsNameValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments) {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    if (value.length  typeof item === 'string' && /^[a-zA-Z]/.test(item),\n    );\n  }\n\n  defaultMessage(args: ValidationArguments): string {\n    const value = args.value;\n    if (!Array.isArray(value)) {\n      return 'Skill phải là một mảng.';\n    }\n    if (value.length === 0) {\n      return 'Skill không được để trống.';\n    }\n    if (!value.every((item) => typeof item === 'string')) {\n      return 'Skill chỉ được chứa các chuỗi string.';\n    }\n    if (!value.every((item) => /^[a-zA-Z]/.test(item))) {\n      return 'Mỗi skill trong mảng phải bắt đầu bằng chữ cái.';\n    }\n    return 'Skill không hợp lệ.';\n  }\n}\n\n//Validate Salary\n@ValidatorConstraint({ async: false })\nexport class IsSalaryValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments): boolean {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    return /^[0-9]+$/.test(value.toString());\n  }\n\n  defaultMessage(args: ValidationArguments): string {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Salary không được để trống.';\n    }\n    if (!/^[0-9]+$/.test(value.toString())) {\n      return 'Salary chỉ được chứa các chữ số.';\n    }\n    return 'Salary không hợp lệ.';\n  }\n}\n\n//Validate Quantity\n@ValidatorConstraint({ async: false })\nexport class IsQuantityValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments): boolean {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    return /^[0-9]+$/.test(value.toString());\n  }\n\n  defaultMessage(args: ValidationArguments): string {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Số lượng không được để trống.';\n    }\n    if (!/^[0-9]+$/.test(value.toString())) {\n      return 'Số lượng chỉ được chứa các chữ số.';\n    }\n    return 'Số lượng không hợp lệ.';\n  }\n}\n\n//Validate StartDate\n@ValidatorConstraint({ async: false })\nexport class IsStartDateValidConstraint\n  implements ValidatorConstraintInterface\n{\n  validate(value: any, args: ValidationArguments): boolean {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    return !isNaN(Date.parse(value));\n  }\n\n  defaultMessage(args: ValidationArguments): string {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Start date không được để trống.';\n    }\n    if (isNaN(Date.parse(value))) {\n      return 'Start date phải có dạng ngày hợp lệ.';\n    }\n    return 'Start date không hợp lệ.';\n  }\n}\n\n//Validate StartDate\n@ValidatorConstraint({ async: false })\nexport class IsEndDateValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments): boolean {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    return !isNaN(Date.parse(value));\n  }\n\n  defaultMessage(args: ValidationArguments): string {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'End date không được để trống.';\n    }\n    if (isNaN(Date.parse(value))) {\n      return 'End date phải có dạng ngày hợp lệ.';\n    }\n    return 'End date không hợp lệ.';\n  }\n}\n\n//Validate IsActive\n@ValidatorConstraint({ async: false })\nexport class IsActiveValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments): boolean {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    return typeof value === 'boolean';\n  }\n\n  defaultMessage(args: ValidationArguments): string {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'isActive không được để trống.';\n    }\n    if (typeof value !== 'boolean') {\n      return 'isActive phải có định dạng boolean.';\n    }\n    return 'isActive không hợp lệ.';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsSalaryValidConstraint.html":{"url":"classes/IsSalaryValidConstraint.html","title":"class - IsSalaryValidConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsSalaryValidConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/validator/validate.job.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage(args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/validator/validate.job.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(value: any, args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/validator/validate.job.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ValidationArguments,\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n} from 'class-validator';\n\n//Validate name\n@ValidatorConstraint({ async: false })\nexport class IsNameValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments) {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    if (value.length  typeof item === 'string' && /^[a-zA-Z]/.test(item),\n    );\n  }\n\n  defaultMessage(args: ValidationArguments): string {\n    const value = args.value;\n    if (!Array.isArray(value)) {\n      return 'Skill phải là một mảng.';\n    }\n    if (value.length === 0) {\n      return 'Skill không được để trống.';\n    }\n    if (!value.every((item) => typeof item === 'string')) {\n      return 'Skill chỉ được chứa các chuỗi string.';\n    }\n    if (!value.every((item) => /^[a-zA-Z]/.test(item))) {\n      return 'Mỗi skill trong mảng phải bắt đầu bằng chữ cái.';\n    }\n    return 'Skill không hợp lệ.';\n  }\n}\n\n//Validate Salary\n@ValidatorConstraint({ async: false })\nexport class IsSalaryValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments): boolean {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    return /^[0-9]+$/.test(value.toString());\n  }\n\n  defaultMessage(args: ValidationArguments): string {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Salary không được để trống.';\n    }\n    if (!/^[0-9]+$/.test(value.toString())) {\n      return 'Salary chỉ được chứa các chữ số.';\n    }\n    return 'Salary không hợp lệ.';\n  }\n}\n\n//Validate Quantity\n@ValidatorConstraint({ async: false })\nexport class IsQuantityValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments): boolean {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    return /^[0-9]+$/.test(value.toString());\n  }\n\n  defaultMessage(args: ValidationArguments): string {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Số lượng không được để trống.';\n    }\n    if (!/^[0-9]+$/.test(value.toString())) {\n      return 'Số lượng chỉ được chứa các chữ số.';\n    }\n    return 'Số lượng không hợp lệ.';\n  }\n}\n\n//Validate StartDate\n@ValidatorConstraint({ async: false })\nexport class IsStartDateValidConstraint\n  implements ValidatorConstraintInterface\n{\n  validate(value: any, args: ValidationArguments): boolean {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    return !isNaN(Date.parse(value));\n  }\n\n  defaultMessage(args: ValidationArguments): string {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Start date không được để trống.';\n    }\n    if (isNaN(Date.parse(value))) {\n      return 'Start date phải có dạng ngày hợp lệ.';\n    }\n    return 'Start date không hợp lệ.';\n  }\n}\n\n//Validate StartDate\n@ValidatorConstraint({ async: false })\nexport class IsEndDateValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments): boolean {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    return !isNaN(Date.parse(value));\n  }\n\n  defaultMessage(args: ValidationArguments): string {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'End date không được để trống.';\n    }\n    if (isNaN(Date.parse(value))) {\n      return 'End date phải có dạng ngày hợp lệ.';\n    }\n    return 'End date không hợp lệ.';\n  }\n}\n\n//Validate IsActive\n@ValidatorConstraint({ async: false })\nexport class IsActiveValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments): boolean {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    return typeof value === 'boolean';\n  }\n\n  defaultMessage(args: ValidationArguments): string {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'isActive không được để trống.';\n    }\n    if (typeof value !== 'boolean') {\n      return 'isActive phải có định dạng boolean.';\n    }\n    return 'isActive không hợp lệ.';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsSkillValidConstraint.html":{"url":"classes/IsSkillValidConstraint.html","title":"class - IsSkillValidConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsSkillValidConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/validator/validate.job.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage(args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/validator/validate.job.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(value: any, args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/validator/validate.job.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ValidationArguments,\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n} from 'class-validator';\n\n//Validate name\n@ValidatorConstraint({ async: false })\nexport class IsNameValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments) {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    if (value.length  typeof item === 'string' && /^[a-zA-Z]/.test(item),\n    );\n  }\n\n  defaultMessage(args: ValidationArguments): string {\n    const value = args.value;\n    if (!Array.isArray(value)) {\n      return 'Skill phải là một mảng.';\n    }\n    if (value.length === 0) {\n      return 'Skill không được để trống.';\n    }\n    if (!value.every((item) => typeof item === 'string')) {\n      return 'Skill chỉ được chứa các chuỗi string.';\n    }\n    if (!value.every((item) => /^[a-zA-Z]/.test(item))) {\n      return 'Mỗi skill trong mảng phải bắt đầu bằng chữ cái.';\n    }\n    return 'Skill không hợp lệ.';\n  }\n}\n\n//Validate Salary\n@ValidatorConstraint({ async: false })\nexport class IsSalaryValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments): boolean {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    return /^[0-9]+$/.test(value.toString());\n  }\n\n  defaultMessage(args: ValidationArguments): string {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Salary không được để trống.';\n    }\n    if (!/^[0-9]+$/.test(value.toString())) {\n      return 'Salary chỉ được chứa các chữ số.';\n    }\n    return 'Salary không hợp lệ.';\n  }\n}\n\n//Validate Quantity\n@ValidatorConstraint({ async: false })\nexport class IsQuantityValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments): boolean {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    return /^[0-9]+$/.test(value.toString());\n  }\n\n  defaultMessage(args: ValidationArguments): string {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Số lượng không được để trống.';\n    }\n    if (!/^[0-9]+$/.test(value.toString())) {\n      return 'Số lượng chỉ được chứa các chữ số.';\n    }\n    return 'Số lượng không hợp lệ.';\n  }\n}\n\n//Validate StartDate\n@ValidatorConstraint({ async: false })\nexport class IsStartDateValidConstraint\n  implements ValidatorConstraintInterface\n{\n  validate(value: any, args: ValidationArguments): boolean {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    return !isNaN(Date.parse(value));\n  }\n\n  defaultMessage(args: ValidationArguments): string {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Start date không được để trống.';\n    }\n    if (isNaN(Date.parse(value))) {\n      return 'Start date phải có dạng ngày hợp lệ.';\n    }\n    return 'Start date không hợp lệ.';\n  }\n}\n\n//Validate StartDate\n@ValidatorConstraint({ async: false })\nexport class IsEndDateValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments): boolean {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    return !isNaN(Date.parse(value));\n  }\n\n  defaultMessage(args: ValidationArguments): string {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'End date không được để trống.';\n    }\n    if (isNaN(Date.parse(value))) {\n      return 'End date phải có dạng ngày hợp lệ.';\n    }\n    return 'End date không hợp lệ.';\n  }\n}\n\n//Validate IsActive\n@ValidatorConstraint({ async: false })\nexport class IsActiveValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments): boolean {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    return typeof value === 'boolean';\n  }\n\n  defaultMessage(args: ValidationArguments): string {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'isActive không được để trống.';\n    }\n    if (typeof value !== 'boolean') {\n      return 'isActive phải có định dạng boolean.';\n    }\n    return 'isActive không hợp lệ.';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsStartDateValidConstraint.html":{"url":"classes/IsStartDateValidConstraint.html","title":"class - IsStartDateValidConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsStartDateValidConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/validator/validate.job.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage(args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/validator/validate.job.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(value: any, args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/validator/validate.job.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ValidationArguments,\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n} from 'class-validator';\n\n//Validate name\n@ValidatorConstraint({ async: false })\nexport class IsNameValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments) {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    if (value.length  typeof item === 'string' && /^[a-zA-Z]/.test(item),\n    );\n  }\n\n  defaultMessage(args: ValidationArguments): string {\n    const value = args.value;\n    if (!Array.isArray(value)) {\n      return 'Skill phải là một mảng.';\n    }\n    if (value.length === 0) {\n      return 'Skill không được để trống.';\n    }\n    if (!value.every((item) => typeof item === 'string')) {\n      return 'Skill chỉ được chứa các chuỗi string.';\n    }\n    if (!value.every((item) => /^[a-zA-Z]/.test(item))) {\n      return 'Mỗi skill trong mảng phải bắt đầu bằng chữ cái.';\n    }\n    return 'Skill không hợp lệ.';\n  }\n}\n\n//Validate Salary\n@ValidatorConstraint({ async: false })\nexport class IsSalaryValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments): boolean {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    return /^[0-9]+$/.test(value.toString());\n  }\n\n  defaultMessage(args: ValidationArguments): string {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Salary không được để trống.';\n    }\n    if (!/^[0-9]+$/.test(value.toString())) {\n      return 'Salary chỉ được chứa các chữ số.';\n    }\n    return 'Salary không hợp lệ.';\n  }\n}\n\n//Validate Quantity\n@ValidatorConstraint({ async: false })\nexport class IsQuantityValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments): boolean {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    return /^[0-9]+$/.test(value.toString());\n  }\n\n  defaultMessage(args: ValidationArguments): string {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Số lượng không được để trống.';\n    }\n    if (!/^[0-9]+$/.test(value.toString())) {\n      return 'Số lượng chỉ được chứa các chữ số.';\n    }\n    return 'Số lượng không hợp lệ.';\n  }\n}\n\n//Validate StartDate\n@ValidatorConstraint({ async: false })\nexport class IsStartDateValidConstraint\n  implements ValidatorConstraintInterface\n{\n  validate(value: any, args: ValidationArguments): boolean {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    return !isNaN(Date.parse(value));\n  }\n\n  defaultMessage(args: ValidationArguments): string {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Start date không được để trống.';\n    }\n    if (isNaN(Date.parse(value))) {\n      return 'Start date phải có dạng ngày hợp lệ.';\n    }\n    return 'Start date không hợp lệ.';\n  }\n}\n\n//Validate StartDate\n@ValidatorConstraint({ async: false })\nexport class IsEndDateValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments): boolean {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    return !isNaN(Date.parse(value));\n  }\n\n  defaultMessage(args: ValidationArguments): string {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'End date không được để trống.';\n    }\n    if (isNaN(Date.parse(value))) {\n      return 'End date phải có dạng ngày hợp lệ.';\n    }\n    return 'End date không hợp lệ.';\n  }\n}\n\n//Validate IsActive\n@ValidatorConstraint({ async: false })\nexport class IsActiveValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments): boolean {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    return typeof value === 'boolean';\n  }\n\n  defaultMessage(args: ValidationArguments): string {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'isActive không được để trống.';\n    }\n    if (typeof value !== 'boolean') {\n      return 'isActive phải có định dạng boolean.';\n    }\n    return 'isActive không hợp lệ.';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsUserIdValidConstraint.html":{"url":"classes/IsUserIdValidConstraint.html","title":"class - IsUserIdValidConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsUserIdValidConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/validator/validate.resume.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage(args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/validator/validate.resume.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     \"userId không được để trống.\" | \"userId phải là một ObjectId hợp lệ.\"\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(value: any, args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/validator/validate.resume.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ValidationArguments,\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n} from 'class-validator';\nimport mongoose from 'mongoose';\n\n//Validate Email\n@ValidatorConstraint({ async: false })\nexport class IsEmailValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments) {\n    if (value === null || value === undefined || value === '') {\n      return false;\n    }\n    const atIndex = value.indexOf('@');\n    if (atIndex === -1) {\n      return false;\n    }\n    const localPart = value.split('@')[0];\n    const domainPart = value.split('@')[1];\n    if (/[^a-zA-Z0-9]/.test(localPart)) {\n      return false;\n    }\n    if (!/[a-zA-Z]/.test(localPart)) {\n      return false;\n    }\n    if (domainPart !== 'gmail.com') {\n      return false;\n    }\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@gmail\\.com$/;\n    return emailRegex.test(value);\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    const value = args.value;\n    if (value === null || value === undefined || value === '') {\n      return 'Email không được để trống.';\n    }\n    const localPart = value.split('@')[0];\n    if (/[^a-zA-Z0-9]/.test(localPart)) {\n      return 'Email chỉ được chứa bao gồm chữ cái và số!';\n    }\n    if (!/[a-zA-Z]/.test(localPart)) {\n      return 'Email phải chứa ít nhất một chữ cái';\n    }\n    if (!value.endsWith('@gmail.com')) {\n      return 'Email phải có đuôi @gmail.com';\n    }\n    return 'Email không hợp lệ';\n  }\n}\n\n//Validate UserId\n@ValidatorConstraint({ async: false })\nexport class IsUserIdValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments): boolean {\n    if (!value) {\n      return false;\n    }\n    if (value instanceof mongoose.Types.ObjectId) {\n      return mongoose.Types.ObjectId.isValid(value);\n    }\n    return false;\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    if (!args.value) {\n      return 'userId không được để trống.';\n    }\n    return 'userId phải là một ObjectId hợp lệ.';\n  }\n}\n\n//Validate CompanyId\n@ValidatorConstraint({ async: false })\nexport class IsCompanyIdValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments): boolean {\n    if (!value) {\n      return false;\n    }\n    return mongoose.Types.ObjectId.isValid(value);\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    if (!args.value) {\n      return 'companyId không được để trống.';\n    }\n    return 'companyId phải là một ObjectId hợp lệ.';\n  }\n}\n\n//Validate JobId\n@ValidatorConstraint({ async: false })\nexport class IsJobIdValidConstraint implements ValidatorConstraintInterface {\n  validate(value: any, args: ValidationArguments): boolean {\n    if (!value) {\n      return false;\n    }\n    return mongoose.Types.ObjectId.isValid(value);\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    if (!args.value) {\n      return 'jobId không được để trống.';\n    }\n    return 'jobId phải là một ObjectId hợp lệ.';\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Job.html":{"url":"classes/Job.html","title":"class - Job","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Job\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/schemas/job.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                company\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                endDate\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                level\n                            \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                salary\n                            \n                            \n                                    \n                                skills\n                            \n                            \n                                    \n                                startDate\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Boolean, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:52\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type JobDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Job {\n  @Prop({ type: String, required: true })\n  name: string;\n\n  @Prop({ type: [String], required: true })\n  skills: string[];\n\n  @Prop({ type: Object })\n  company: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    logo: string;\n  };\n\n  @Prop({ type: String, required: true })\n  location: string;\n\n  @Prop({ type: Number, required: true })\n  salary: number;\n\n  @Prop({ type: Number, required: true })\n  quantity: number;\n\n  @Prop({ type: String, required: true })\n  level: string;\n\n  @Prop({ type: String, required: true })\n  description: string;\n\n  @Prop({ type: Date, required: true })\n  startDate: Date;\n\n  @Prop({ type: Date, required: true })\n  endDate: Date;\n\n  @Prop({ type: Boolean, required: true })\n  isActive: boolean;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Date })\n  createdAt: Date;\n\n  @Prop({ type: Date })\n  updatedAt: Date;\n\n  @Prop({ type: Date })\n  deletedAt: Date;\n\n  @Prop({ type: Boolean })\n  isDeleted: boolean;\n}\n\nexport const JobSchema = SchemaFactory.createForClass(Job);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/JobsController.html":{"url":"controllers/JobsController.html","title":"controller - JobsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  JobsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                jobs\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createJobDto: CreateJobDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create Job')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createJobDto\n                                            \n                                                            CreateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, reqString: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get()@ResponseMessage('Fetch All Job')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                reqString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get(':id')@ResponseMessage('Fetch Job By Id')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete Job')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateJobDto: UpdateJobDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update Job')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateJobDto\n                                            \n                                                            UpdateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { JobsService } from 'src/jobs/jobs.service';\nimport { CreateJobDto } from 'src/jobs/dto/create-job.dto';\nimport { UpdateJobDto } from 'src/jobs/dto/update-job.dto';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/types/user.interface';\n\n@Controller('jobs')\nexport class JobsController {\n  constructor(private readonly jobsService: JobsService) {}\n\n  @Post()\n  @ResponseMessage('Create Job')\n  create(@Body() createJobDto: CreateJobDto, @User() user: IUser) {\n    return this.jobsService.create(createJobDto, user);\n  }\n\n  @Public()\n  @Get()\n  @ResponseMessage('Fetch All Job')\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') limit: string,\n    @Query() reqString: string,\n  ) {\n    return this.jobsService.findAll(+currentPage, +limit, reqString);\n  }\n\n  @Public()\n  @Get(':id')\n  @ResponseMessage('Fetch Job By Id')\n  findOne(@Param('id') id: string) {\n    return this.jobsService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update Job')\n  update(\n    @Param('id') id: string,\n    @Body() updateJobDto: UpdateJobDto,\n    @User() user: IUser,\n  ) {\n    return this.jobsService.update(id, updateJobDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage(\"Delete Job\")\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.jobsService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JobsModule.html":{"url":"modules/JobsModule.html","title":"module - JobsModule","body":"\n                   \n\n\n\n\n    Modules\n    JobsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_providers\n\n\n\n\nJobsService\n\nJobsService\n\n\n\nJobsModule\n\nJobsModule\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/jobs/jobs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JobsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            JobsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { JobsService } from 'src/jobs/jobs.service';\nimport { JobsController } from 'src/jobs/jobs.controller';\nimport { Job, JobSchema } from 'src/jobs/schemas/job.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Job.name, schema: JobSchema }])],\n  controllers: [JobsController],\n  providers: [JobsService],\n})\nexport class JobsModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JobsService.html":{"url":"injectables/JobsService.html","title":"injectable - JobsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JobsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jobModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/jobs/jobs.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jobModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createJobDto: CreateJobDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createJobDto\n                                            \n                                                            CreateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, reqString: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                reqString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(_id: string, updateJobDto: UpdateJobDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateJobDto\n                                            \n                                                            UpdateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { CreateJobDto } from 'src/jobs/dto/create-job.dto';\nimport { UpdateJobDto } from 'src/jobs/dto/update-job.dto';\nimport { Job, JobDocument } from 'src/jobs/schemas/job.schema';\nimport { IUser } from 'src/users/types/user.interface';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport mongoose from 'mongoose';\nimport aqp from 'api-query-params';\n\n@Injectable()\nexport class JobsService {\n  constructor(\n    @InjectModel(Job.name)\n    private jobModel: SoftDeleteModel,\n  ) {}\n\n  async create(createJobDto: CreateJobDto, user: IUser) {\n    const {\n      name,\n      skills,\n      company,\n      salary,\n      quantity,\n      level,\n      description,\n      startDate,\n      endDate,\n      isActive,\n      location,\n    } = createJobDto;\n    let newJob = await this.jobModel.create({\n      name,\n      skills,\n      company,\n      salary,\n      quantity,\n      level,\n      description,\n      startDate,\n      endDate,\n      isActive,\n      location,\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n    return {\n      _id: newJob?._id,\n      createdAt: newJob?.createdAt,\n    };\n  }\n\n  async findAll(currentPage: number, limit: number, reqString: string) {\n    const { filter, sort, population } = aqp(reqString);\n    delete filter.current;\n    delete filter.pageSize;\n\n    let offset = (+currentPage - 1) * +limit;\n    let defaultLimit = +limit ? +limit : 10;\n\n    const totalItems = (await this.jobModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n    const result = await this.jobModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .exec();\n\n    return {\n      meta: {\n        current: currentPage, //trang hiện tại\n        pageSize: limit, //số lượng bản ghi đã lấy\n        pages: totalPages, //tổng số trang với điều kiện query\n        total: totalItems, // tổng số phần tử (số bản ghi)\n      },\n      result, //kết quả query\n    };\n  }\n\n  findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      return `Not Found Job`;\n    }\n    return this.jobModel.findById(id);\n  }\n\n  update(_id: string, updateJobDto: UpdateJobDto, user: IUser) {\n    return this.jobModel.updateOne(\n      { _id },\n      {\n        ...updateJobDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n  }\n\n  async remove(_id: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(_id)) return `Not Found Job`;\n    await this.jobModel.updateOne(\n      { _id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return this.jobModel.softDelete({\n      _id,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt-auth.guard.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-auth.guard.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info, context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-auth.guard.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                info\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ExecutionContext,\n  ForbiddenException,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Reflector } from '@nestjs/core';\nimport { IS_PUBLIC_KEY, IS_PUBLIC_PERMISSION } from 'src/decorator/customize';\nimport { Request } from 'express';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  constructor(private reflector: Reflector) {\n    super();\n  }\n\n  canActivate(context: ExecutionContext) {\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (isPublic) {\n      return true;\n    }\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, user, info, context: ExecutionContext) {\n    const request: Request = context.switchToHttp().getRequest();\n    const isSkipPermission = this.reflector.getAllAndOverride(IS_PUBLIC_PERMISSION, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (err || !user) {\n      throw err || new UnauthorizedException('Toke không hợp lệ hoặc hết hạn');\n    }\n    //check permissions\n    const targetMethod = request.method;\n    const targetEndpoint = request.route?.path as string;\n\n    const permissions = user?.permissions ?? [];\n    let isExist = permissions.find(\n      (permission) =>\n        targetMethod === permission.method &&\n        targetEndpoint === permission.apiPath,\n    );\n    if (targetEndpoint.startsWith(\"/api/v1/auth\")) isExist = true;\n    if (!isExist && !isSkipPermission) {\n      throw new ForbiddenException(\n        'Bạn không có quyền để truy cập endpoint này!',\n      );\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, rolesService: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/jwt.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rolesService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/passport/jwt.strategy.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { IUser } from 'src/users/types/user.interface';\nimport { RolesService } from 'src/roles/roles.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private configService: ConfigService,\n    private rolesService: RolesService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('JWT_ACCESS_TOKEN_SECRET'),\n    });\n  }\n\n  async validate(payload: IUser) {\n    const { _id, name, email, phone, age, gender, address, role } = payload;\n    const userRole = role as unknown as { _id: string; name: string };\n    const temp = (await this.rolesService.findOne(userRole._id)).toObject();\n    return {\n      _id,\n      name,\n      email,\n      phone,\n      age,\n      gender,\n      address,\n      role,\n      permissions: temp?.permissions ?? [],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('local')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/local.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/passport/local.strategy.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from 'src/auth/auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super();\n  }\n\n  async validate(username: string, password: string): Promise {\n    const user = await this.authService.validateUser(username, password);\n    if (!user) {\n      throw new UnauthorizedException('Thông tin tài khoản không chính xác!');\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MailController.html":{"url":"controllers/MailController.html","title":"controller - MailController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MailController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                mail\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                handleTestEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        handleTestEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleTestEmail()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@Cron('0 0 0 * * 0')@ResponseMessage('Send Email')\n                \n            \n\n                    \n                        \n                            Defined in src/mail/mail.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { MailerService } from '@nestjs-modules/mailer';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Cron, CronExpression } from '@nestjs/schedule';\nimport { MailService } from 'src/mail/mail.service';\nimport { Public, ResponseMessage } from 'src/decorator/customize';\nimport { Subscriber, SubscriberDocument } from 'src/subscribers/schemas/subscriber.schema';\nimport { Job, JobDocument } from 'src/jobs/schemas/job.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\n\n@Controller('mail')\nexport class MailController {\n  constructor(\n    private readonly mailService: MailService,\n    private mailerService: MailerService,\n\n    @InjectModel(Subscriber.name)\n    private subscriberModel: SoftDeleteModel,\n\n    @InjectModel(Job.name)\n    private jobModel: SoftDeleteModel,\n  ) {}\n\n  // @Cron(CronExpression.EVERY_30_SECONDS)\n  // testCron() {\n  //   console.log(\">>> call me\")\n  // }\n\n  @Get()\n  @Public()\n  @Cron('0 0 0 * * 0')\n  @ResponseMessage('Send Email')\n  async handleTestEmail() {\n    const subscribers = await this.subscriberModel.find({});\n    for (const subs of subscribers) {\n      const subsSkills = subs.skills;\n      const jobWithMatchingSkills = await this.jobModel.find({\n        skills: { $in: subsSkills },\n      });\n      if(jobWithMatchingSkills?.length){\n        const jobs = jobWithMatchingSkills.map(item => {\n          return {\n            name: item.name,\n            company: item.company.name,\n            salary: `${item.salary}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') + \" đ\",\n            skills: item.skills\n          }\n        })\n        await this.mailerService.sendMail({\n          to: 'nekkochan2k@gmail.com',\n          from: '\"JobHunter\" ', // override default from\n          subject: 'Welcome to JobHunter! Confirm your Email',\n          template: 'job',\n          context: {\n            receiver: (await subs).name,\n            jobs: jobs,\n          },\n        });\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_providers\n\n\n\n\nMailService\n\nMailService\n\n\n\nMailModule\n\nMailModule\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MailController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter';\nimport { ConfigService } from '@nestjs/config';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { MailService } from 'src/mail/mail.service';\nimport { MailController } from 'src/mail/mail.controller';\nimport { Job, JobSchema } from 'src/jobs/schemas/job.schema';\nimport { Subscriber, SubscriberSchema } from 'src/subscribers/schemas/subscriber.schema';\nimport { join } from 'path';\n\n@Module({\n  imports: [\n    MailerModule.forRootAsync({\n      useFactory: async (configService: ConfigService) => ({\n        transport: {\n          host: configService.get('EMAIL_HOST'),\n          secure: false,\n          auth: {\n            user: configService.get('EMAIL_AUTH_USER'),\n            pass: configService.get('EMAIL_AUTH_PASS'),\n          },\n        },\n        preview: true,\n        template: {\n          dir: join(__dirname, 'templates'),\n          adapter: new HandlebarsAdapter(),\n          options: {\n            strict: true,\n          },\n        },\n      }),\n      inject: [ConfigService],\n    }),\n    MongooseModule.forFeature([\n      { name: Subscriber.name, schema: SubscriberSchema },\n      { name: Job.name, schema: JobSchema }\n    ])\n  ],\n  controllers: [MailController],\n  providers: [MailService],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class MailService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MulterConfigService.html":{"url":"injectables/MulterConfigService.html","title":"injectable - MulterConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MulterConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/config/multer.config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getRootPath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMulterOptions\n                            \n                            \n                                ensureExists\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createMulterOptions\n                        \n                    \n                \n            \n            \n                \ncreateMulterOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/config/multer.config.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     MulterModuleOptions\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ensureExists\n                        \n                    \n                \n            \n            \n                \nensureExists(targetDirectory: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/config/multer.config.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                targetDirectory\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getRootPath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/files/config/multer.config.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport {\n  MulterModuleOptions,\n  MulterOptionsFactory,\n} from '@nestjs/platform-express';\nimport { diskStorage } from 'multer';\nimport path, { join } from 'path';\nimport fs from 'fs';\n\n@Injectable()\nexport class MulterConfigService implements MulterOptionsFactory {\n  getRootPath = () => {\n    return process.cwd();\n  };\n\n  ensureExists(targetDirectory: string) {\n    fs.mkdir(targetDirectory, { recursive: true }, (error) => {\n      if (!error) {\n        console.log('Directory successfully created, or it already exists.');\n        return;\n      }\n      switch (error.code) {\n        case 'EEXIST':\n          // Error:\n          // Requested location already exists, but it's not a directory.\n          break;\n        case 'ENOTDIR':\n          // Error:\n          // The parent hierarchy contains a file with the same name as the dir\n          // you're trying to create.\n          break;\n        default:\n          // Some other error like permission denied.\n          console.error(error);\n          break;\n      }\n    });\n  }\n\n  createMulterOptions(): MulterModuleOptions {\n    return {\n      storage: diskStorage({\n        destination: (req, file, cb) => {\n          const folder = req?.headers?.folder_type ?? 'default';\n          const fullPath = join(this.getRootPath(), `public/images/${folder}`);\n          if (!fs.existsSync(fullPath)) {\n            fs.mkdirSync(fullPath, { recursive: true });\n          }\n          cb(null, fullPath);\n        },\n        filename: (req, file, cb) => {\n          //get image extension\n          let extName = path.extname(file.originalname);\n          //get image's name (without extension)\n          let baseName = path.basename(file.originalname, extName);\n          let finalName = `${baseName}-${Date.now()}${extName}`;\n          cb(null, finalName);\n        },\n      }),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Permission.html":{"url":"classes/Permission.html","title":"class - Permission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Permission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/schemas/permission.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                apiPath\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                method\n                            \n                            \n                                    \n                                module\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import mongoose, { HydratedDocument } from 'mongoose';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\n\nexport type PermissionDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Permission {\n  @Prop({type: String, required: true})\n  name: string;\n\n  @Prop({type: String, required: true})\n  apiPath: string;\n\n  @Prop({type: String, required: true})\n  method: string;\n\n  @Prop({type: String, required: true})\n  module: string;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({type: Date})\n  createdAt: Date;\n\n  @Prop({type: Date})\n  updatedAt: Date;\n\n  @Prop({type: Boolean})\n  isDeleted: boolean;\n\n  @Prop({type: Date})\n  deletedAt: Date;\n}\n\nexport const PermissionSchema = SchemaFactory.createForClass(Permission);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PermissionsController.html":{"url":"controllers/PermissionsController.html","title":"controller - PermissionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PermissionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/permissions.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                permissions\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPermissionDto: CreatePermissionDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create Permission')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPermissionDto\n                                            \n                                                            CreatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, reqString: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch All Permissions')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                reqString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Fetch Permission By Id')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete Permission')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatePermissionDto: UpdatePermissionDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update Permission')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePermissionDto\n                                            \n                                                            UpdatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { PermissionsService } from 'src/permissions/permissions.service';\nimport { CreatePermissionDto } from 'src/permissions/dto/create-permission.dto';\nimport { UpdatePermissionDto } from 'src/permissions/dto/update-permission.dto';\nimport { ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/types/user.interface';\n\n@Controller('permissions')\nexport class PermissionsController {\n  constructor(private readonly permissionsService: PermissionsService) {}\n\n  @Post()\n  @ResponseMessage(\"Create Permission\")\n  create(@Body() createPermissionDto: CreatePermissionDto, @User() user: IUser) {\n    return this.permissionsService.create(createPermissionDto, user);\n  }\n\n  @Get()\n  @ResponseMessage(\"Fetch All Permissions\")\n  findAll(\n    @Query(\"current\") currentPage: string,\n    @Query(\"pageSize\") limit: string,\n    @Query() reqString: string,\n  ) {\n    return this.permissionsService.findAll(+currentPage, +limit, reqString);\n  }\n\n  @Get(':id')\n  @ResponseMessage(\"Fetch Permission By Id\")\n  findOne(@Param('id') id: string) {\n    return this.permissionsService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage(\"Update Permission\")\n  update(@Param('id') id: string, @Body() updatePermissionDto: UpdatePermissionDto, @User() user: IUser) {\n    return this.permissionsService.update(id, updatePermissionDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage(\"Delete Permission\")\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.permissionsService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PermissionsModule.html":{"url":"modules/PermissionsModule.html","title":"module - PermissionsModule","body":"\n                   \n\n\n\n\n    Modules\n    PermissionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PermissionsModule\n\n\n\ncluster_PermissionsModule_providers\n\n\n\n\nPermissionsService\n\nPermissionsService\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nPermissionsModule -->\n\nPermissionsService->PermissionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/permissions/permissions.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PermissionsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PermissionsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { PermissionsService } from 'src/permissions/permissions.service';\nimport { PermissionsController } from 'src/permissions/permissions.controller';\nimport { Permission, PermissionSchema } from 'src/permissions/schemas/permission.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Permission.name, schema: PermissionSchema }])],\n  controllers: [PermissionsController],\n  providers: [PermissionsService],\n})\nexport class PermissionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PermissionsService.html":{"url":"injectables/PermissionsService.html","title":"injectable - PermissionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PermissionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/permissions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(permissionModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/permissions/permissions.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        permissionModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPermissionDto: CreatePermissionDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPermissionDto\n                                            \n                                                            CreatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, reqString: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                reqString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: string, updatePermissionDto: UpdatePermissionDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePermissionDto\n                                            \n                                                            UpdatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { CreatePermissionDto } from 'src/permissions/dto/create-permission.dto';\nimport { UpdatePermissionDto } from 'src/permissions/dto/update-permission.dto';\nimport {\n  Permission,\n  PermissionDocument,\n} from 'src/permissions/schemas/permission.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { IUser } from 'src/users/types/user.interface';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\n\n@Injectable()\nexport class PermissionsService {\n  constructor(\n    @InjectModel(Permission.name)\n    private permissionModel: SoftDeleteModel,\n  ) {}\n\n  async create(createPermissionDto: CreatePermissionDto, user: IUser) {\n    const { name, apiPath, method, module } = createPermissionDto;\n    const isExist = await this.permissionModel.findOne({ apiPath, method });\n    if (isExist) {\n      throw new BadRequestException(\n        `Permission với apiPath=${apiPath} , method=${method} đã tồn tại!`,\n      );\n    }\n    const newPermission = await this.permissionModel.create({\n      name,\n      apiPath,\n      method,\n      module,\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n    return {\n      _id: newPermission?._id,\n      createdAt: newPermission?.createdAt,\n    };\n  }\n\n  async findAll(currentPage: number, limit: number, reqString: string) {\n    const { filter, sort, population, projection } = aqp(reqString);\n    delete filter.current;\n    delete filter.pageSize;\n    let offset = (+currentPage - 1) * +limit;\n    let defaultLimit = +limit ? +limit : 10;\n    const totalItems = (await this.permissionModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n    const result = await this.permissionModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .select(projection as any)\n      .exec();\n    return {\n      meta: {\n        current: currentPage, //trang hiện tại\n        pageSize: limit, //số lượng bản ghi đã lấy\n        pages: totalPages, //tổng số trang với điều kiện query\n        total: totalItems, // tổng số phần tử (số bản ghi)\n      },\n      result, //kết quả query\n    };\n  }\n\n  findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException('not found permission');\n    }\n    return this.permissionModel.findById(id);\n  }\n\n  async update(\n    _id: string,\n    updatePermissionDto: UpdatePermissionDto,\n    user: IUser,\n  ) {\n    if (!mongoose.Types.ObjectId.isValid(_id)) {\n      throw new BadRequestException('not found permission');\n    }\n    const { module, method, apiPath, name } = updatePermissionDto;\n\n    return this.permissionModel.updateOne(\n      { _id },\n      {\n        module,\n        method,\n        apiPath,\n        name,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n  }\n\n  async remove(id: string, user: IUser) {\n    await this.permissionModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return this.permissionModel.softDelete({\n      _id: id,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserDto.html":{"url":"classes/RegisterUserDto.html","title":"class - RegisterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/register-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                phone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Validate(IsAddressValidConstraint)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/register-user.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Validate(IsAgeValidConstraint)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/register-user.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Validate(IsEmailValidConstraint)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/register-user.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Validate(IsGenderValidConstraint)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/register-user.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Validate(IsNameValidConstraint)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/register-user.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Validate(IsPasswordValidConstraint)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/register-user.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Validate(IsPhoneValidConstraint)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/register-user.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Validate } from 'class-validator';\nimport {\n  IsAddressValidConstraint,\n  IsAgeValidConstraint,\n  IsEmailValidConstraint, IsGenderValidConstraint,\n  IsNameValidConstraint,\n  IsPasswordValidConstraint,\n  IsPhoneValidConstraint,\n} from 'src/users/validator/validate.user';\n\nexport class RegisterUserDto {\n  @Validate(IsNameValidConstraint)\n  name: string;\n\n  @Validate(IsEmailValidConstraint)\n  email: string;\n\n  @Validate(IsPasswordValidConstraint)\n  password: string;\n\n  @Validate(IsPhoneValidConstraint)\n  phone: number;\n\n  @Validate(IsAgeValidConstraint)\n  age: number;\n\n  @Validate(IsGenderValidConstraint)\n  gender: string;\n\n  @Validate(IsAddressValidConstraint)\n  address: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/transform.interceptor.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            statusCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { RESPONSE_MESSAGE } from 'src/decorator/customize';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\nexport interface Response {\n  statusCode: number;\n  message?: string;\n  data: object;\n}\n\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor>\n{\n  constructor(private reflector: Reflector) {}\n\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> {\n    return next.handle().pipe(\n      map((data) => ({\n        statusCode: context.switchToHttp().getResponse().statusCode,\n        message:\n          this.reflector.get(RESPONSE_MESSAGE, context.getHandler()) ||\n          '',\n        data: data,\n      })),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Resume.html":{"url":"classes/Resume.html","title":"class - Resume","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Resume\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/schemas/resume.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                companyId\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                history\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                jobId\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                            \n                                    \n                                url\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import mongoose, { HydratedDocument } from 'mongoose';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Company } from 'src/companies/schemas/company.schema';\nimport { Job } from 'src/jobs/schemas/job.schema';\n\nexport type ResumeDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Resume {\n  @Prop({ type: String })\n  email: string;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId })\n  userId: mongoose.Schema.Types.ObjectId;\n\n  @Prop({ type: String })\n  url: string;\n\n  @Prop({ type: String })\n  status: string;\n\n  @Prop({\n    type: mongoose.Schema.Types.ObjectId,\n    ref: Company.name,\n  })\n  companyId: mongoose.Schema.Types.ObjectId;\n\n  @Prop({\n    type: mongoose.Schema.Types.ObjectId,\n    ref: Job.name\n  })\n  jobId: mongoose.Schema.Types.ObjectId;\n\n  @Prop({ type: mongoose.Schema.Types.Array })\n  history: {\n    status: string;\n    updatedAt: Date;\n    updatedBy: {\n      _id: mongoose.Schema.Types.ObjectId;\n      email: string;\n    };\n  }[];\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Date })\n  createdAt: Date;\n\n  @Prop({ type: Date })\n  updatedAt: Date;\n\n  @Prop({ type: Boolean })\n  isDeleted: boolean;\n\n  @Prop({ type: Date })\n  deletedAt: Date;\n}\n\nexport const ResumeSchema = SchemaFactory.createForClass(Resume);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ResumesController.html":{"url":"controllers/ResumesController.html","title":"controller - ResumesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ResumesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/resumes.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                resumes\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                getResumesByUser\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                updateStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserCvDto: CreateUserCvDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create Resume')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserCvDto\n                                            \n                                                            CreateUserCvDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, reqString: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch All Resumes')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                reqString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Fetch Resume By Id')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getResumesByUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getResumesByUser(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('by-user')@ResponseMessage('Get Resumes By User')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete Resume By Id')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updateStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateStatus(id: string, status: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update Status Resume')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { ResumesService } from 'src/resumes/resumes.service';\nimport { CreateResumeDto } from 'src/resumes/dto/create-resume.dto';\nimport { UpdateResumeDto } from 'src/resumes/dto/update-resume.dto';\nimport { ResponseMessage, User } from 'src/decorator/customize';\nimport { CreateUserCvDto } from 'src/resumes/dto/create-user-cv.dto';\nimport { IUser } from 'src/users/types/user.interface';\n\n@Controller('resumes')\nexport class ResumesController {\n  constructor(private readonly resumesService: ResumesService) {}\n\n  @Post()\n  @ResponseMessage(\"Create Resume\")\n  create(@Body() createUserCvDto: CreateUserCvDto, @User() user: IUser) {\n    return this.resumesService.create(createUserCvDto, user);\n  }\n\n  @Post('by-user')\n  @ResponseMessage(\"Get Resumes By User\")\n  getResumesByUser(@User() user: IUser) {\n    return this.resumesService.findByUsers(user);\n  }\n\n  @Get()\n  @ResponseMessage(\"Fetch All Resumes\")\n  findAll(\n    @Query(\"current\") currentPage: string,\n    @Query(\"pageSize\") limit: string,\n    @Query() reqString: string,\n  ) {\n    return this.resumesService.findAll(+currentPage, +limit, reqString);\n  }\n\n  @Get(':id')\n  @ResponseMessage(\"Fetch Resume By Id\")\n  findOne(@Param('id') id: string) {\n    return this.resumesService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage(\"Update Status Resume\")\n  updateStatus(@Param('id') id: string, @Body(\"status\") status: string, @User() user: IUser) {\n    return this.resumesService.update(id, status, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage(\"Delete Resume By Id\")\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.resumesService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResumesModule.html":{"url":"modules/ResumesModule.html","title":"module - ResumesModule","body":"\n                   \n\n\n\n\n    Modules\n    ResumesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResumesModule\n\n\n\ncluster_ResumesModule_providers\n\n\n\n\nResumesService\n\nResumesService\n\n\n\nResumesModule\n\nResumesModule\n\nResumesModule -->\n\nResumesService->ResumesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/resumes/resumes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ResumesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ResumesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ResumesService } from 'src/resumes/resumes.service';\nimport { ResumesController } from 'src/resumes/resumes.controller';\nimport { Resume, ResumeSchema } from 'src/resumes/schemas/resume.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Resume.name, schema: ResumeSchema }])],\n  controllers: [ResumesController],\n  providers: [ResumesService],\n})\nexport class ResumesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResumesService.html":{"url":"injectables/ResumesService.html","title":"injectable - ResumesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResumesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/resumes.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findByUsers\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resumeModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/resumes/resumes.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resumeModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserCvDto: CreateUserCvDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserCvDto\n                                            \n                                                            CreateUserCvDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, reqString: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                reqString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByUsers\n                        \n                    \n                \n            \n            \n                \nfindByUsers(user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(_id: string, status: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Resume, ResumeDocument } from 'src/resumes/schemas/resume.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { CreateUserCvDto } from 'src/resumes/dto/create-user-cv.dto';\nimport { IUser } from 'src/users/types/user.interface';\nimport mongoose from 'mongoose';\nimport aqp from 'api-query-params';\n\n@Injectable()\nexport class ResumesService {\n  constructor(\n    @InjectModel(Resume.name)\n    private resumeModel: SoftDeleteModel,\n  ) {}\n\n  async create(createUserCvDto: CreateUserCvDto, user: IUser) {\n    const { url, companyId, jobId } = createUserCvDto;\n    const { email, _id } = user;\n    const newCV = await this.resumeModel.create({\n      url,\n      companyId,\n      email,\n      jobId,\n      userId: _id,\n      status: 'PENDING',\n      createdBy: { _id, email },\n      history: [\n        {\n          status: 'PENDING',\n          updatedAt: new Date(),\n          updatedBy: {\n            _id: user._id,\n            email: user.email,\n          },\n        },\n      ],\n    });\n    return {\n      _id: newCV?._id,\n      createdAt: newCV?.createdAt,\n    };\n  }\n\n  async findAll(currentPage: number, limit: number, reqString: string) {\n    const { filter, sort, population, projection } = aqp(reqString);\n    delete filter.current;\n    delete filter.pageSize;\n    let offset = (+currentPage - 1) * +limit;\n    let defaultLimit = +limit ? +limit : 10;\n    const totalItems = (await this.resumeModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n    const result = await this.resumeModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .select(projection as any)\n      .exec();\n    return {\n      meta: {\n        current: currentPage, //trang hiện tại\n        pageSize: limit, //số lượng bản ghi đã lấy\n        pages: totalPages, //tổng số trang với điều kiện query\n        total: totalItems, // tổng số phần tử (số bản ghi)\n      },\n      result, //kết quả query\n    };\n  }\n\n  findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException('Not Found Resume');\n    }\n    return this.resumeModel.findById(id);\n  }\n\n  findByUsers(user: IUser) {\n    return this.resumeModel\n      .find({\n        userId: user._id,\n      })\n      .sort('-createdAt')\n      .populate([\n        {\n          path: 'companyId',\n          select: { name: 1 },\n        },\n        {\n          path: 'jobId',\n          select: { name: 1 },\n        },\n      ]);\n  }\n\n  update(_id: string, status: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(_id)) {\n      throw new BadRequestException('not found resume');\n    }\n    return this.resumeModel.updateOne(\n      { _id },\n      {\n        status,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n        $push: {\n          history: {\n            status: status,\n            updatedAt: new Date(),\n            updatedBy: {\n              _id: user._id,\n              email: user.email,\n            },\n          },\n        },\n      },\n    );\n  }\n\n  async remove(id: string, user: IUser) {\n    await this.resumeModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return this.resumeModel.softDelete({\n      _id: id,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/schemas/role.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                permissions\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Permission[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Permission } from 'src/permissions/schemas/permission.schema';\n\nexport type RoleDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Role {\n  @Prop()\n  name: string;\n\n  @Prop()\n  description: string;\n\n  @Prop()\n  isActive: boolean;\n\n  @Prop({ type: [mongoose.Schema.Types.ObjectId], ref: Permission.name })\n  permissions: Permission[];\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updatedAt: Date;\n\n  @Prop()\n  isDeleted: boolean;\n\n  @Prop()\n  deletedAt: Date;\n}\n\nexport const RoleSchema = SchemaFactory.createForClass(Role);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RolesController.html":{"url":"controllers/RolesController.html","title":"controller - RolesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RolesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                roles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRoleDto: CreateRoleDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create Role')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, reqString: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch All Roles')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                reqString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Fetch A Role By Id')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a role')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateRoleDto: UpdateRoleDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update A Role')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateRoleDto\n                                            \n                                                            UpdateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { RolesService } from 'src/roles/roles.service';\nimport { CreateRoleDto } from 'src/roles/dto/create-role.dto';\nimport { UpdateRoleDto } from 'src/roles/dto/update-role.dto';\nimport { ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/types/user.interface';\n\n@Controller('roles')\nexport class RolesController {\n  constructor(private readonly rolesService: RolesService) {}\n\n  @Post()\n  @ResponseMessage(\"Create Role\")\n  create(@Body() createRoleDto: CreateRoleDto, @User() user: IUser) {\n    return this.rolesService.create(createRoleDto, user);\n  }\n\n  @Get()\n  @ResponseMessage(\"Fetch All Roles\")\n  findAll(\n    @Query(\"current\") currentPage: string,\n    @Query(\"pageSize\") limit: string,\n    @Query() reqString: string,\n  ) {\n    return this.rolesService.findAll(+currentPage, +limit, reqString);\n  }\n\n  @Get(':id')\n  @ResponseMessage(\"Fetch A Role By Id\")\n  findOne(@Param('id') id: string) {\n    return this.rolesService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage(\"Update A Role\")\n  update(@Param('id') id: string, @Body() updateRoleDto: UpdateRoleDto, @User() user: IUser) {\n    return this.rolesService.update(id, updateRoleDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage(\"Delete a role\")\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.rolesService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RolesModule.html":{"url":"modules/RolesModule.html","title":"module - RolesModule","body":"\n                   \n\n\n\n\n    Modules\n    RolesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_exports\n\n\n\ncluster_RolesModule_providers\n\n\n\n\nRolesService \n\nRolesService \n\n\n\nRolesModule\n\nRolesModule\n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/roles/roles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RolesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RolesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RolesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { RolesService } from 'src/roles/roles.service';\nimport { RolesController } from 'src/roles/roles.controller';\nimport { Role, RoleSchema } from 'src/roles/schemas/role.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Role.name, schema: RoleSchema }])],\n  controllers: [RolesController],\n  providers: [RolesService],\n  exports: [RolesService],\n})\nexport class RolesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RolesService.html":{"url":"injectables/RolesService.html","title":"injectable - RolesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RolesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/roles/roles.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRoleDto: CreateRoleDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, reqString: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                reqString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: string, updateRoleDto: UpdateRoleDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateRoleDto\n                                            \n                                                            UpdateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { CreateRoleDto } from 'src/roles/dto/create-role.dto';\nimport { UpdateRoleDto } from 'src/roles/dto/update-role.dto';\nimport { Role, RoleDocument } from 'src/roles/schemas/role.schema';\nimport { IUser } from 'src/users/types/user.interface';\nimport { ADMIN_ROLE } from 'src/databases/sample';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\n\n@Injectable()\nexport class RolesService {\n  constructor(\n    @InjectModel(Role.name)\n    private roleModel: SoftDeleteModel,\n  ) {}\n\n  async create(createRoleDto: CreateRoleDto, user: IUser) {\n    const { name, description, isActive, permissions } = createRoleDto;\n\n    const isExist = await this.roleModel.findOne({ name });\n    if (isExist) {\n      throw new BadRequestException(`Role với name=\"${name}\" đã tồn tại!`);\n    }\n\n    const newRole = await this.roleModel.create({\n      name,\n      description,\n      isActive,\n      permissions,\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n\n    return {\n      _id: newRole?._id,\n      createdAt: newRole?.createdAt,\n    };\n  }\n\n  async findAll(currentPage: number, limit: number, reqString: string) {\n    const { filter, sort, population, projection } = aqp(reqString);\n    delete filter.current;\n    delete filter.pageSize;\n    let offset = (+currentPage - 1) * +limit;\n    let defaultLimit = +limit ? +limit : 10;\n    const totalItems = (await this.roleModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n    const result = await this.roleModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .select(projection as any)\n      .exec();\n    return {\n      meta: {\n        current: currentPage, //trang hiện tại\n        pageSize: limit, //số lượng bản ghi đã lấy\n        pages: totalPages, //tổng số trang với điều kiện query\n        total: totalItems, // tổng số phần tử (số bản ghi)\n      },\n      result, //kết quả query\n    };\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException('not found role');\n    }\n    return (await this.roleModel.findById(id)).populate({\n      path: 'permissions',\n      select: { _id: 1, apiPath: 1, name: 1, method: 1, module: 1 },\n    });\n  }\n\n  async update(_id: string, updateRoleDto: UpdateRoleDto, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(_id)) {\n      throw new BadRequestException('not found role');\n    }\n    const { name, description, isActive, permissions } = updateRoleDto;\n    return this.roleModel.updateOne(\n      { _id },\n      {\n        name,\n        description,\n        isActive,\n        permissions,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n  }\n\n  async remove(id: string, user: IUser) {\n    const foundRole = await this.roleModel.findById(id);\n    if (foundRole.name === ADMIN_ROLE) {\n      throw new BadRequestException('Không thể xóa role ADMIN');\n    }\n    await this.roleModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return this.roleModel.softDelete({\n      _id: id,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Subscriber.html":{"url":"classes/Subscriber.html","title":"class - Subscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Subscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/schemas/subscriber.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                skills\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type SubscriberDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Subscriber {\n  @Prop({ required: true })\n  email: string;\n\n  @Prop()\n  name: string;\n\n  @Prop()\n  skills: string[];\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  }\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  }\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  }\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updatedAt: Date;\n\n  @Prop()\n  isDeleted: boolean;\n\n  @Prop()\n  deletedAt: Date;\n}\nexport const SubscriberSchema = SchemaFactory.createForClass(Subscriber);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SubscribersController.html":{"url":"controllers/SubscribersController.html","title":"controller - SubscribersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SubscribersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/subscribers.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                subscribers\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                getUserSkills\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSubscriberDto: CreateSubscriberDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a subscriber')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubscriberDto\n                                            \n                                                            CreateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, reqString: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch subscribers with paginate')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                reqString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Fetch subscriber by id')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getUserSkills\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserSkills(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('skills')@ResponseMessage('Get subscriber's skills')@SkipCheckPermission()\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a subscriber')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateSubscriberDto: UpdateSubscriberDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()@SkipCheckPermission()@ResponseMessage('Update a subscriber')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateSubscriberDto\n                                            \n                                                            UpdateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { SubscribersService } from 'src/subscribers/subscribers.service';\nimport { CreateSubscriberDto } from 'src/subscribers/dto/create-subscriber.dto';\nimport { UpdateSubscriberDto } from 'src/subscribers/dto/update-subscriber.dto';\nimport { ResponseMessage, SkipCheckPermission, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/types/user.interface';\n\n@Controller('subscribers')\nexport class SubscribersController {\n  constructor(private readonly subscribersService: SubscribersService) {}\n\n  @Post()\n  @ResponseMessage(\"Create a subscriber\")\n  create(@Body() createSubscriberDto: CreateSubscriberDto, @User() user: IUser) {\n    return this.subscribersService.create(createSubscriberDto, user);\n  }\n\n  @Post(\"skills\")\n  @ResponseMessage(\"Get subscriber's skills\")\n  @SkipCheckPermission()\n  getUserSkills(@User() user: IUser) {\n    return this.subscribersService.getSkills(user);\n  }\n\n  @Get()\n  @ResponseMessage(\"Fetch subscribers with paginate\")\n  findAll(\n    @Query(\"current\") currentPage: string,\n    @Query(\"pageSize\") limit: string,\n    @Query() reqString: string,\n  ) {\n    return this.subscribersService.findAll(+currentPage, +limit, reqString);\n  }\n\n  @Get(':id')\n  @ResponseMessage(\"Fetch subscriber by id\")\n  findOne(@Param('id') id: string) {\n    return this.subscribersService.findOne(id);\n  }\n\n  @Patch()\n  @SkipCheckPermission()\n  @ResponseMessage(\"Update a subscriber\")\n  update(\n    @Body() updateSubscriberDto: UpdateSubscriberDto,\n    @User() user: IUser\n  ) {\n    return this.subscribersService.update(updateSubscriberDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage(\"Delete a subscriber\")\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.subscribersService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SubscribersModule.html":{"url":"modules/SubscribersModule.html","title":"module - SubscribersModule","body":"\n                   \n\n\n\n\n    Modules\n    SubscribersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SubscribersModule\n\n\n\ncluster_SubscribersModule_providers\n\n\n\n\nSubscribersService\n\nSubscribersService\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nSubscribersModule -->\n\nSubscribersService->SubscribersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/subscribers/subscribers.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SubscribersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SubscribersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { SubscribersService } from 'src/subscribers/subscribers.service';\nimport { SubscribersController } from 'src/subscribers/subscribers.controller';\nimport { Subscriber, SubscriberSchema } from 'src/subscribers/schemas/subscriber.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([\n    { name: Subscriber.name, schema: SubscriberSchema },\n  ])],\n  controllers: [SubscribersController],\n  providers: [SubscribersService],\n})\nexport class SubscribersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubscribersService.html":{"url":"injectables/SubscribersService.html","title":"injectable - SubscribersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SubscribersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/subscribers.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                getSkills\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(subscriberModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/subscribers/subscribers.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        subscriberModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSubscriberDto: CreateSubscriberDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubscriberDto\n                                            \n                                                            CreateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, reqString: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                reqString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSkills\n                        \n                    \n                \n            \n            \n                \ngetSkills(user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(updateSubscriberDto: UpdateSubscriberDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateSubscriberDto\n                                            \n                                                            UpdateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { CreateSubscriberDto } from 'src/subscribers/dto/create-subscriber.dto';\nimport { UpdateSubscriberDto } from 'src/subscribers/dto/update-subscriber.dto';\nimport {\n  Subscriber,\n  SubscriberDocument,\n} from 'src/subscribers/schemas/subscriber.schema';\nimport { IUser } from 'src/users/types/user.interface';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\n\n@Injectable()\nexport class SubscribersService {\n  constructor(\n    @InjectModel(Subscriber.name)\n    private subscriberModel: SoftDeleteModel,\n  ) {}\n\n  async create(createSubscriberDto: CreateSubscriberDto, user: IUser) {\n    const { name, email, skills } = createSubscriberDto;\n    const isExist = await this.subscriberModel.findOne({ email });\n    if (isExist) {\n      throw new BadRequestException(\n        `Email: ${email} đã tồn tại trên hệ thống. Vui lòng sử dụng email khác.`,\n      );\n    }\n    let newSubs = await this.subscriberModel.create({\n      name,\n      email,\n      skills,\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n    return {\n      _id: newSubs?._id,\n      createdBy: newSubs?.createdAt,\n    };\n  }\n\n  async findAll(currentPage: number, limit: number, reqString: string) {\n    const { filter, sort, population, projection } = aqp(reqString);\n    delete filter.current;\n    delete filter.pageSize;\n    let offset = (+currentPage - 1) * +limit;\n    let defaultLimit = +limit ? +limit : 10;\n    const totalItems = (await this.subscriberModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n    const result = await this.subscriberModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .select(projection as any)\n      .populate(population)\n      .exec();\n    return {\n      meta: {\n        current: currentPage, //trang hiện tại\n        pageSize: limit, //số lượng bản ghi đã lấy\n        pages: totalPages, //tổng số trang với điều kiện query\n        total: totalItems, // tổng số phần tử (số bản ghi)\n      },\n      result, //kết quả query\n    };\n  }\n\n  findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) return `not found subscribers`;\n    return this.subscriberModel.findOne({\n      _id: id,\n    });\n  }\n\n  update(updateSubscriberDto: UpdateSubscriberDto, user: IUser) {\n    return this.subscriberModel.updateOne(\n      { email: user.email },\n      {\n        ...updateSubscriberDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n      { upsert: true },\n    );\n  }\n\n  async remove(id: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) return `Not Found Subscribers`;\n    await this.subscriberModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return this.subscriberModel.softDelete({\n      _id: id,\n    });\n  }\n\n  getSkills(user: IUser) {\n    const { email } = user;\n    return this.subscriberModel.findOne({ email }, { skills: 1 });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformInterceptor.html":{"url":"injectables/TransformInterceptor.html","title":"injectable - TransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/transform.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/core/transform.interceptor.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/transform.interceptor.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { RESPONSE_MESSAGE } from 'src/decorator/customize';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\nexport interface Response {\n  statusCode: number;\n  message?: string;\n  data: object;\n}\n\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor>\n{\n  constructor(private reflector: Reflector) {}\n\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> {\n    return next.handle().pipe(\n      map((data) => ({\n        statusCode: context.switchToHttp().getResponse().statusCode,\n        message:\n          this.reflector.get(RESPONSE_MESSAGE, context.getHandler()) ||\n          '',\n        data: data,\n      })),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCompanyDto.html":{"url":"classes/UpdateCompanyDto.html","title":"class - UpdateCompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/dto/update-company.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateCompanyDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/update-company.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateCompanyDto } from 'src/companies/dto/create-company.dto';\n\nexport class UpdateCompanyDto extends PartialType(CreateCompanyDto) {\n  _id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateFileDto.html":{"url":"classes/UpdateFileDto.html","title":"class - UpdateFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/dto/update-file.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateFileDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateFileDto } from 'src/files/dto/create-file.dto';\n\nexport class UpdateFileDto extends PartialType(CreateFileDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateJobDto.html":{"url":"classes/UpdateJobDto.html","title":"class - UpdateJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/update-job.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateJobDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateJobDto } from 'src/jobs/dto/create-job.dto';\n\nexport class UpdateJobDto extends PartialType(CreateJobDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePermissionDto.html":{"url":"classes/UpdatePermissionDto.html","title":"class - UpdatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/dto/update-permission.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreatePermissionDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreatePermissionDto } from 'src/permissions/dto/create-permission.dto';\n\nexport class UpdatePermissionDto extends PartialType(CreatePermissionDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateResumeDto.html":{"url":"classes/UpdateResumeDto.html","title":"class - UpdateResumeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateResumeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/update-resume.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateResumeDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                history\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :         History[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'History không được để trống'})@IsArray({message: 'History có định dạng là array'})@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsEmail, IsNotEmpty, ValidateNested } from 'class-validator';\nimport { PartialType } from '@nestjs/mapped-types';\nimport { CreateResumeDto } from 'src/resumes/dto/create-resume.dto';\nimport { Type } from 'class-transformer';\nimport { Types } from 'mongoose';\n\nclass UpdatedBy {\n  @IsNotEmpty()\n  _id: Types.ObjectId;\n\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n}\n\nclass History {\n  @IsNotEmpty()\n  status: string;\n\n  @IsNotEmpty()\n  updatedAt: Date;\n\n  @ValidateNested()\n  @IsNotEmpty()\n  @Type(() => UpdatedBy)\n  updatedBy: UpdatedBy;\n}\n\nexport class UpdateResumeDto extends PartialType(CreateResumeDto) {\n  @IsNotEmpty({ message: 'History không được để trống' })\n  @IsArray({ message: 'History có định dạng là array' })\n  @ValidateNested()\n  @Type(() => History)\n  history: History[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRoleDto.html":{"url":"classes/UpdateRoleDto.html","title":"class - UpdateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/update-role.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateRoleDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateRoleDto } from 'src/roles/dto/create-role.dto';\n\nexport class UpdateRoleDto extends PartialType(CreateRoleDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSubscriberDto.html":{"url":"classes/UpdateSubscriberDto.html","title":"class - UpdateSubscriberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSubscriberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/dto/update-subscriber.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateSubscriberDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateSubscriberDto } from 'src/subscribers/dto/create-subscriber.dto';\n\nexport class UpdateSubscriberDto extends PartialType(CreateSubscriberDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            OmitType(CreateUserDto, [\n  'password',\n] as const)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Id không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from 'src/users/dto/create-user.dto';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class UpdateUserDto extends OmitType(CreateUserDto, [\n  'password',\n] as const) {\n  @IsNotEmpty({ message: 'Id không được để trống', })\n  _id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatedBy.html":{"url":"classes/UpdatedBy.html","title":"class - UpdatedBy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatedBy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/update-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsEmail, IsNotEmpty, ValidateNested } from 'class-validator';\nimport { PartialType } from '@nestjs/mapped-types';\nimport { CreateResumeDto } from 'src/resumes/dto/create-resume.dto';\nimport { Type } from 'class-transformer';\nimport { Types } from 'mongoose';\n\nclass UpdatedBy {\n  @IsNotEmpty()\n  _id: Types.ObjectId;\n\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n}\n\nclass History {\n  @IsNotEmpty()\n  status: string;\n\n  @IsNotEmpty()\n  updatedAt: Date;\n\n  @ValidateNested()\n  @IsNotEmpty()\n  @Type(() => UpdatedBy)\n  updatedBy: UpdatedBy;\n}\n\nexport class UpdateResumeDto extends PartialType(CreateResumeDto) {\n  @IsNotEmpty({ message: 'History không được để trống' })\n  @IsArray({ message: 'History có định dạng là array' })\n  @ValidateNested()\n  @Type(() => History)\n  history: History[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/schemas/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                company\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                phone\n                            \n                            \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:49\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Role } from 'src/roles/schemas/role.schema';\n\nexport type UserDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class User {\n  @Prop({ type: String })\n  name: string;\n\n  @Prop({ type: String })\n  email: string;\n\n  @Prop({ type: String })\n  password: string;\n\n  @Prop({ type: Number })\n  age: number;\n\n  @Prop({ type: String })\n  gender: string;\n\n  @Prop({ type: Number })\n  phone: number;\n\n  @Prop({ type: String })\n  address: string;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Role.name })\n  role: mongoose.Schema.Types.ObjectId;\n\n  @Prop({ type: String })\n  refreshToken: string;\n\n  @Prop({ type: Object })\n  company: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n  };\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop({ type: Date })\n  createdAt: Date;\n\n  @Prop({ type: Date })\n  updatedAt: Date;\n\n  @Prop({ type: Date })\n  deletedAt: Date;\n\n  @Prop({ type: Boolean })\n  isDeleted: boolean;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create User')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, reqString: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch All User')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                reqString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get(':id')@ResponseMessage('Fetch User By Id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete User')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateUserDto: UpdateUserDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()@ResponseMessage('Update User')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  Query,\n} from '@nestjs/common';\nimport { UsersService } from 'src/users/users.service';\nimport { CreateUserDto } from 'src/users/dto/create-user.dto';\nimport { UpdateUserDto } from 'src/users/dto/update-user.dto';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/types/user.interface';\n\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  //create user\n  @Post()\n  @ResponseMessage('Create User')\n  async create(@Body() createUserDto: CreateUserDto, @User() user: IUser) {\n    let newUser = await this.usersService.create(createUserDto, user);\n    return {\n      _id: newUser?._id,\n      createdAt: newUser?.createdAt,\n    };\n  }\n\n  @Get()\n  @ResponseMessage('Fetch All User')\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') limit: string,\n    @Query() reqString: string,\n  ) {\n    return this.usersService.findAll(+currentPage, +limit, reqString);\n  }\n\n  //get user by id\n  @Public()\n  @Get(':id')\n  @ResponseMessage('Fetch User By Id')\n  async findOne(@Param('id') id: string) {\n    return await this.usersService.findOne(id);\n  }\n\n  //update user\n  @Patch()\n  @ResponseMessage('Update User')\n  async update(@Body() updateUserDto: UpdateUserDto, @User() user: IUser) {\n    return await this.usersService.update(updateUserDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Delete User')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.usersService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UsersService } from 'src/users/users.service';\nimport { UsersController } from 'src/users/users.controller';\nimport { User, UserSchema } from 'src/users/schemas/user.schema';\nimport { Role, RoleSchema } from 'src/roles/schemas/role.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: User.name, schema: UserSchema },\n      { name: Role.name, schema: RoleSchema },\n    ]),\n  ],\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                findOne\n                            \n                            \n                                findOneByUsername\n                            \n                            \n                                findUserByToken\n                            \n                            \n                                hashPassword\n                            \n                            \n                                isValidPassword\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                            \n                                updateUserToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: SoftDeleteModel, roleModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, reqString: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                reqString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(user: RegisterUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:122\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneByUsername\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:135\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findUserByToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:183\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hashPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isValidPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:142\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:159\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:146\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:179\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { User as userModal, UserDocument } from 'src/users/schemas/user.schema';\nimport { User } from 'src/decorator/customize';\nimport { IUser } from 'src//users/types/user.interface';\nimport { RegisterUserDto } from 'src/users/dto/register-user.dto';\nimport { CreateUserDto } from 'src/users/dto/create-user.dto';\nimport { UpdateUserDto } from 'src/users/dto/update-user.dto';\nimport { USER_ROLE } from 'src/databases/sample';\nimport { Role, RoleDocument } from 'src/roles/schemas/role.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { compareSync, genSaltSync, hashSync } from 'bcryptjs';\nimport mongoose from 'mongoose';\nimport aqp from 'api-query-params';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectModel(userModal.name)\n    private userModel: SoftDeleteModel,\n    @InjectModel(Role.name)\n    private roleModel: SoftDeleteModel,\n  ) {}\n\n  hashPassword = (password: string) => {\n    const salt = genSaltSync(10);\n    return hashSync(password, salt);\n  };\n\n  async create(createUserDto: CreateUserDto, @User() user: IUser) {\n    const {\n      name,\n      email,\n      password,\n      phone,\n      age,\n      gender,\n      address,\n      role,\n      company,\n    } = createUserDto;\n\n    //add logic check email\n    const isExist = await this.userModel.findOne({ email });\n    if (isExist) {\n      throw new BadRequestException(\n        `Email: ${email} đã tồn tại trên hệ thống. Vui lòng sử dụng email khác.`,\n      );\n    }\n    const hashPassword = this.hashPassword(password);\n    return await this.userModel.create({\n      name,\n      email,\n      password: hashPassword,\n      phone,\n      age,\n      gender,\n      address,\n      role,\n      company,\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n  }\n\n  async register(user: RegisterUserDto) {\n    const { name, email, password, phone, age, gender, address } = user;\n    //add logic check email\n    const isExist = await this.userModel.findOne({ email });\n    if (isExist) {\n      throw new BadRequestException(\n        `Email: ${email} đã tồn tại trên hệ thống. Vui lòng sử dụng email khác.`,\n      );\n    }\n    const userRole = await this.roleModel.findOne({ name: USER_ROLE });\n    const hashPassword = this.hashPassword(password);\n    return await this.userModel.create({\n      name,\n      email,\n      password: hashPassword,\n      phone,\n      age,\n      gender,\n      address,\n      role: userRole?._id,\n    });\n  }\n\n  async findAll(currentPage: number, limit: number, reqString: string) {\n    const { filter, sort, population } = aqp(reqString);\n    delete filter.current;\n    delete filter.pageSize;\n\n    let offset = (+currentPage - 1) * +limit;\n    let defaultLimit = +limit ? +limit : 10;\n\n    const totalItems = (await this.userModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n    const result = await this.userModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .select('-password')\n      .populate(population)\n      .exec();\n\n    return {\n      meta: {\n        current: currentPage, //trang hiện tại\n        pageSize: limit, //số lượng bản ghi đã lấy\n        pages: totalPages, //tổng số trang với điều kiện query\n        total: totalItems, // tổng số phần tử (số bản ghi)\n      },\n      result, //kết quả query\n    };\n  }\n\n  findOne = (id: string) => {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      return 'Not Found User';\n    }\n    return this.userModel\n      .findOne({ _id: id })\n      .select('-password')\n      .populate({\n        path: 'role',\n        select: { name: 1, _id: 1 },\n      });\n  };\n\n  findOneByUsername = (username: string) => {\n    return this.userModel.findOne({ email: username }).populate({\n      path: 'role',\n      select: { name: 1 },\n    });\n  };\n\n  isValidPassword = (password: string, hash: string) => {\n    return compareSync(password, hash);\n  };\n\n  update = (updateUserDto: UpdateUserDto, user: IUser) => {\n    return this.userModel.updateOne(\n      { _id: updateUserDto._id },\n      {\n        ...updateUserDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n  };\n\n  remove = async (id: string, user: IUser) => {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      return 'Not Found User';\n    }\n    const foundUser = await this.userModel.findById(id);\n    if (foundUser && foundUser.email === 'admin@gmail.com') {\n      throw new BadRequestException('Không thể xóa tài khoản admin@gmail.com');\n    }\n    await this.userModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return this.userModel.softDelete({ _id: id });\n  };\n\n  updateUserToken = (refreshToken: string, _id: string) => {\n    return this.userModel.updateOne({ _id }, { refreshToken });\n  };\n\n  findUserByToken = (refreshToken: string) => {\n    return this.userModel.findOne({ refreshToken }).populate({\n      path: 'role',\n      select: { name: 1 },\n    });\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/passport/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/passport/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/companies/companies.controller.ts\n            \n            controller\n            CompaniesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/companies/companies.service.ts\n            \n            injectable\n            CompaniesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/companies/dto/create-company.dto.ts\n            \n            class\n            CreateCompanyDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/companies/dto/update-company.dto.ts\n            \n            class\n            UpdateCompanyDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/companies/schemas/company.schema.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                        src/companies/schemas/company.schema.ts\n            \n            variable\n            CompanySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/companies/schemas/company.schema.ts\n            \n            type alias\n            CompanyDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/companies/validator/validate.company.ts\n            \n            class\n            IsNameValidConstraint\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/transform.interceptor.ts\n            \n            injectable\n            TransformInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/transform.interceptor.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/databases/databases.controller.ts\n            \n            controller\n            DatabasesController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/databases/databases.service.ts\n            \n            injectable\n            DatabasesService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/databases/sample.ts\n            \n            variable\n            ADMIN_ROLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/databases/sample.ts\n            \n            variable\n            INIT_PERMISSIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/databases/sample.ts\n            \n            variable\n            USER_ROLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            IS_PUBLIC_PERMISSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            RESPONSE_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            ResponseMessage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            SkipCheckPermission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/config/multer.config.ts\n            \n            injectable\n            MulterConfigService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/files/dto/create-file.dto.ts\n            \n            class\n            CreateFileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/dto/update-file.dto.ts\n            \n            class\n            UpdateFileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/files.controller.ts\n            \n            controller\n            FilesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/files/files.service.ts\n            \n            injectable\n            FilesService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/files/schemas/file.schema.ts\n            \n            class\n            File\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/jobs/dto/create-job.dto.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/jobs/dto/create-job.dto.ts\n            \n            class\n            CreateJobDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/jobs/dto/update-job.dto.ts\n            \n            class\n            UpdateJobDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/jobs/jobs.controller.ts\n            \n            controller\n            JobsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/jobs/jobs.service.ts\n            \n            injectable\n            JobsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/jobs/schemas/job.schema.ts\n            \n            class\n            Job\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                        src/jobs/schemas/job.schema.ts\n            \n            variable\n            JobSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/jobs/schemas/job.schema.ts\n            \n            type alias\n            JobDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/jobs/validator/validate.job.ts\n            \n            class\n            IsActiveValidConstraint\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/jobs/validator/validate.job.ts\n            \n            class\n            IsEndDateValidConstraint\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/jobs/validator/validate.job.ts\n            \n            class\n            IsNameValidConstraint\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/jobs/validator/validate.job.ts\n            \n            class\n            IsQuantityValidConstraint\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/jobs/validator/validate.job.ts\n            \n            class\n            IsSalaryValidConstraint\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/jobs/validator/validate.job.ts\n            \n            class\n            IsSkillValidConstraint\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/jobs/validator/validate.job.ts\n            \n            class\n            IsStartDateValidConstraint\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/mail/mail.controller.ts\n            \n            controller\n            MailController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/permissions/dto/create-permission.dto.ts\n            \n            class\n            CreatePermissionDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/permissions/dto/update-permission.dto.ts\n            \n            class\n            UpdatePermissionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/permissions/permissions.controller.ts\n            \n            controller\n            PermissionsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/permissions/permissions.service.ts\n            \n            injectable\n            PermissionsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/permissions/schemas/permission.schema.ts\n            \n            class\n            Permission\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                        src/permissions/schemas/permission.schema.ts\n            \n            variable\n            PermissionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/permissions/schemas/permission.schema.ts\n            \n            type alias\n            PermissionDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/resumes/dto/create-resume.dto.ts\n            \n            class\n            CreateResumeDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/resumes/dto/create-user-cv.dto.ts\n            \n            class\n            CreateUserCvDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/resumes/dto/update-resume.dto.ts\n            \n            class\n            History\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/resumes/dto/update-resume.dto.ts\n            \n            class\n            UpdatedBy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/resumes/dto/update-resume.dto.ts\n            \n            class\n            UpdateResumeDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/resumes/resumes.controller.ts\n            \n            controller\n            ResumesController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/resumes/resumes.service.ts\n            \n            injectable\n            ResumesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/resumes/schemas/resume.schema.ts\n            \n            class\n            Resume\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                        src/resumes/schemas/resume.schema.ts\n            \n            variable\n            ResumeSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/resumes/schemas/resume.schema.ts\n            \n            type alias\n            ResumeDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/resumes/validator/validate.resume.ts\n            \n            class\n            IsCompanyIdValidConstraint\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/resumes/validator/validate.resume.ts\n            \n            class\n            IsEmailValidConstraint\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/resumes/validator/validate.resume.ts\n            \n            class\n            IsJobIdValidConstraint\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/resumes/validator/validate.resume.ts\n            \n            class\n            IsUserIdValidConstraint\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/roles/dto/create-role.dto.ts\n            \n            class\n            CreateRoleDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/roles/dto/update-role.dto.ts\n            \n            class\n            UpdateRoleDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/roles.controller.ts\n            \n            controller\n            RolesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/roles/roles.service.ts\n            \n            injectable\n            RolesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/roles/schemas/role.schema.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                        src/roles/schemas/role.schema.ts\n            \n            variable\n            RoleSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/roles/schemas/role.schema.ts\n            \n            type alias\n            RoleDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/dto/create-subscriber.dto.ts\n            \n            class\n            CreateSubscriberDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/subscribers/dto/update-subscriber.dto.ts\n            \n            class\n            UpdateSubscriberDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/schemas/subscriber.schema.ts\n            \n            class\n            Subscriber\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                        src/subscribers/schemas/subscriber.schema.ts\n            \n            variable\n            SubscriberSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/subscribers/schemas/subscriber.schema.ts\n            \n            type alias\n            SubscriberDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/subscribers.controller.ts\n            \n            controller\n            SubscribersController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/subscribers/subscribers.service.ts\n            \n            injectable\n            SubscribersService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/users/dto/register-user.dto.ts\n            \n            class\n            RegisterUserDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                        src/users/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/users/schemas/user.schema.ts\n            \n            type alias\n            UserDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/types/user.interface.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/users/validator/validate.user.ts\n            \n            class\n            IsAddressValidConstraint\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/validator/validate.user.ts\n            \n            class\n            IsAgeValidConstraint\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/validator/validate.user.ts\n            \n            class\n            IsEmailValidConstraint\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/validator/validate.user.ts\n            \n            class\n            IsGenderValidConstraint\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/validator/validate.user.ts\n            \n            class\n            IsNameValidConstraint\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/validator/validate.user.ts\n            \n            class\n            IsPasswordValidConstraint\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/validator/validate.user.ts\n            \n            class\n            IsPhoneValidConstraint\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs-modules/mailer : 2.0.2\n        \n            @nestjs/common : 11.0.5\n        \n            @nestjs/config : 4.0.0\n        \n            @nestjs/core : 11.0.5\n        \n            @nestjs/jwt : 11.0.0\n        \n            @nestjs/mapped-types : 2.1.0\n        \n            @nestjs/mongoose : 11.0.0\n        \n            @nestjs/passport : 11.0.5\n        \n            @nestjs/platform-express : 11.0.5\n        \n            @nestjs/schedule : 5.0.1\n        \n            @nestjs/terminus : 11.0.0\n        \n            @nestjs/throttler : 6.4.0\n        \n            api-query-params : 5.4.0\n        \n            bcryptjs : 2.4.3\n        \n            class-transformer : 0.5.1\n        \n            class-validator : 0.14.1\n        \n            cookie-parser : 1.4.7\n        \n            cron : 3.5.0\n        \n            ejs : 3.1.10\n        \n            handlebars : 4.7.8\n        \n            helmet : 8.0.0\n        \n            mongoose : 8.9.5\n        \n            ms : 2.1.3\n        \n            nodemailer : 6.10.0\n        \n            passport : 0.7.0\n        \n            passport-jwt : 4.0.1\n        \n            passport-local : 1.0.0\n        \n            reflect-metadata : 0.2.2\n        \n            rxjs : 7.8.1\n        \n            soft-delete-plugin-mongoose : 1.0.15\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nBackend JobHunter\nI. Giới thiệu dự án\n\nVề dự án:\n\nDự án được lấy cảm hứng từ trang web ITViec, với mục tiêu tạo ra một nền tảng tìm kiếm việc làm hiện đại và dễ sử dụng.\nCông nghệ sử dụng: React(TypeScript) + NestJS\n\n\nMôi trường NodeJS\n\nMôi trường chạy dự án là NodeJS version 20.14.0\n\n\nCách chạy dự án:\n\nClone dự án:\nCài đặt thư viện: npm install (npm i).\nUpdate file .env (nếu cần thiết).\nChạy dự án.\n\n\n\n====================================================================\nII. Về tác giả\n👋👋 Chào bạn, tôi là Kirito Nguyễn!\n👀 Tôi đam mê lập trình, đặc biệt là trong lĩnh vực phát triển website và ứng dụng di động.\n🌱 Hiện tại, tôi đang theo học ngành Công nghệ Thông tin và tập trung vào việc phát triển website và ứng dụng di động.\n💞️ Tôi luôn mong muốn tìm kiếm cơ hội hợp tác trong các dự án sáng tạo liên quan đến website và ứng dụng di động.\n📫 Bạn có thể liên hệ với tôi qua website: https://minhducnguyen.io.vn\n😄 Ngoài lập trình, tôi cũng rất thích ca hát và chơi nhạc cụ – đó là cách tôi thư giãn và sáng tạo!\n⚡ Sở thích của tôi là viết mã ngắn gọn, dễ hiểu và hiệu quả – tối giản nhưng mạnh mẽ.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompaniesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabasesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JobsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PermissionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResumesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RolesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SubscribersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CompaniesModule\n\n\n\ncluster_CompaniesModule_exports\n\n\n\ncluster_CompaniesModule_providers\n\n\n\ncluster_DatabasesModule\n\n\n\ncluster_DatabasesModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_PermissionsModule\n\n\n\ncluster_PermissionsModule_providers\n\n\n\ncluster_ResumesModule\n\n\n\ncluster_ResumesModule_providers\n\n\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_exports\n\n\n\ncluster_RolesModule_providers\n\n\n\ncluster_SubscribersModule\n\n\n\ncluster_SubscribersModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nAppModule -->\n\nCompaniesModule->AppModule\n\n\n\n\n\nCompaniesService \n\nCompaniesService \n\nCompaniesService  -->\n\nCompaniesModule->CompaniesService \n\n\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nAppModule -->\n\nDatabasesModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nAppModule -->\n\nPermissionsModule->AppModule\n\n\n\n\n\nResumesModule\n\nResumesModule\n\nAppModule -->\n\nResumesModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAuthModule -->\n\nRolesModule->AuthModule\n\n\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nRolesService \n\nRolesService \n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nCompaniesService\n\nCompaniesService\n\nCompaniesModule -->\n\nCompaniesService->CompaniesModule\n\n\n\n\n\nDatabasesService\n\nDatabasesService\n\nDatabasesModule -->\n\nDatabasesService->DatabasesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nDatabasesModule -->\n\nUsersService->DatabasesModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\nJobsService\n\nJobsService\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nPermissionsService\n\nPermissionsService\n\nPermissionsModule -->\n\nPermissionsService->PermissionsModule\n\n\n\n\n\nResumesService\n\nResumesService\n\nResumesModule -->\n\nResumesService->ResumesModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\nSubscribersService\n\nSubscribersService\n\nSubscribersModule -->\n\nSubscribersService->SubscribersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    13 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    18 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    49 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : https://minhducnguyen.io.vn/\n        \n            License : UNLICENSED\n        \n            Author : Nguyễn Minh Đức\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CompanyDocument   (src/.../company.schema.ts)\n                        \n                        \n                            JobDocument   (src/.../job.schema.ts)\n                        \n                        \n                            PermissionDocument   (src/.../permission.schema.ts)\n                        \n                        \n                            ResumeDocument   (src/.../resume.schema.ts)\n                        \n                        \n                            RoleDocument   (src/.../role.schema.ts)\n                        \n                        \n                            SubscriberDocument   (src/.../subscriber.schema.ts)\n                        \n                        \n                            UserDocument   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/companies/schemas/company.schema.ts\n    \n    \n        \n            \n                \n                    \n                    CompanyDocument\n                \n            \n            \n                \n                        HydratedDocument\n\n                \n            \n        \n    \n    src/jobs/schemas/job.schema.ts\n    \n    \n        \n            \n                \n                    \n                    JobDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/permissions/schemas/permission.schema.ts\n    \n    \n        \n            \n                \n                    \n                    PermissionDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/resumes/schemas/resume.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ResumeDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/roles/schemas/role.schema.ts\n    \n    \n        \n            \n                \n                    \n                    RoleDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/subscribers/schemas/subscriber.schema.ts\n    \n    \n        \n            \n                \n                    \n                    SubscriberDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/users/schemas/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ADMIN_ROLE   (src/.../sample.ts)\n                        \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            CompanySchema   (src/.../company.schema.ts)\n                        \n                        \n                            INIT_PERMISSIONS   (src/.../sample.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../customize.ts)\n                        \n                        \n                            IS_PUBLIC_PERMISSION   (src/.../customize.ts)\n                        \n                        \n                            JobSchema   (src/.../job.schema.ts)\n                        \n                        \n                            PermissionSchema   (src/.../permission.schema.ts)\n                        \n                        \n                            Public   (src/.../customize.ts)\n                        \n                        \n                            RESPONSE_MESSAGE   (src/.../customize.ts)\n                        \n                        \n                            ResponseMessage   (src/.../customize.ts)\n                        \n                        \n                            ResumeSchema   (src/.../resume.schema.ts)\n                        \n                        \n                            RoleSchema   (src/.../role.schema.ts)\n                        \n                        \n                            SkipCheckPermission   (src/.../customize.ts)\n                        \n                        \n                            SubscriberSchema   (src/.../subscriber.schema.ts)\n                        \n                        \n                            User   (src/.../customize.ts)\n                        \n                        \n                            USER_ROLE   (src/.../sample.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/databases/sample.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ADMIN_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'SUPER_ADMIN'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        INIT_PERMISSIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    _id: '648ab6d3fa16b294212e4033',\n    name: 'Create User',\n    apiPath: '/api/v1/users',\n    method: 'POST',\n    module: 'USERS',\n    createdBy: {\n      _id: '6792d1fd4b0b913cf722ef75',\n      email: 'admin@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:59:31.898Z',\n    updatedAt: '2023-06-15T06:59:31.898Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab6e7fa16b294212e4038',\n    name: 'Get User by Id',\n    apiPath: '/api/v1/users/:id',\n    method: 'GET',\n    module: 'USERS',\n    createdBy: {\n      _id: '6792d1fd4b0b913cf722ef75',\n      email: 'admin@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:59:51.041Z',\n    updatedAt: '2023-06-15T06:59:51.041Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab6fdfa16b294212e403d',\n    name: 'Get User with paginate',\n    apiPath: '/api/v1/users',\n    method: 'GET',\n    module: 'USERS',\n    createdBy: {\n      _id: '6792d1fd4b0b913cf722ef75',\n      email: 'admin@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T07:00:13.364Z',\n    updatedAt: '2023-06-15T07:00:13.364Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab719fa16b294212e4042',\n    name: 'Update User',\n    apiPath: '/api/v1/users/:id',\n    method: 'PATCH',\n    module: 'USERS',\n    createdBy: {\n      _id: '6792d1fd4b0b913cf722ef75',\n      email: 'admin@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T07:00:41.934Z',\n    updatedAt: '2023-06-15T07:00:41.934Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab728fa16b294212e4047',\n    name: 'Delete User',\n    apiPath: '/api/v1/users/:id',\n    method: 'DELETE',\n    module: 'USERS',\n    createdBy: {\n      _id: '6792d1fd4b0b913cf722ef75',\n      email: 'admin@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T07:00:56.274Z',\n    updatedAt: '2023-06-15T07:00:56.274Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab415f4328bd3153ee211',\n    name: 'Get Company with paginate',\n    apiPath: '/api/v1/companies',\n    method: 'GET',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '6792d1fd4b0b913cf722ef75',\n      email: 'admin@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:47:49.369Z',\n    updatedAt: '2023-06-15T06:54:05.131Z',\n    __v: 0,\n    updatedBy: {\n      _id: '6792d1fd4b0b913cf722ef75',\n      email: 'admin@gmail.com',\n    },\n  },\n  {\n    _id: '648ab436f4328bd3153ee216',\n    name: 'Create Company',\n    apiPath: '/api/v1/companies',\n    method: 'POST',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '6792d1fd4b0b913cf722ef75',\n      email: 'admin@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:48:22.224Z',\n    updatedAt: '2023-06-15T06:48:22.224Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab4d5f4328bd3153ee21b',\n    name: 'Update Company',\n    apiPath: '/api/v1/companies/:id',\n    method: 'PATCH',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '6792d1fd4b0b913cf722ef75',\n      email: 'admin@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:51:01.241Z',\n    updatedAt: '2023-06-15T06:51:01.241Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab4ebf4328bd3153ee220',\n    name: 'Delete Company',\n    apiPath: '/api/v1/companies/:id',\n    method: 'DELETE',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '6792d1fd4b0b913cf722ef75',\n      email: 'admin@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:51:23.973Z',\n    updatedAt: '2023-06-15T06:51:23.973Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab5a8072f2a2ef910638d',\n    name: 'Get Company by id',\n    apiPath: '/api/v1/companies/:id',\n    method: 'GET',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '6792d1fd4b0b913cf722ef75',\n      email: 'admin@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:54:32.799Z',\n    updatedAt: '2023-06-15T06:54:32.799Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab750fa16b294212e404c',\n    name: 'Upload Single File',\n    apiPath: '/api/v1/files/upload',\n    method: 'POST',\n    module: 'FILES',\n    createdBy: {\n      _id: '6792d1fd4b0b913cf722ef75',\n      email: 'admin@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T07:01:36.923Z',\n    updatedAt: '2023-06-15T07:01:36.923Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad488dafdb9754f40b846',\n    name: 'Create a Job',\n    apiPath: '/api/v1/jobs',\n    method: 'POST',\n    module: 'JOBS',\n    createdBy: {\n      _id: '6792d1fd4b0b913cf722ef75',\n      email: 'admin@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:06:16.508Z',\n    updatedAt: '2023-06-15T09:06:16.508Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad499dafdb9754f40b84b',\n    name: 'Get a job by id',\n    apiPath: '/api/v1/jobs/:id',\n    method: 'GET',\n    module: 'JOBS',\n    createdBy: {\n      _id: '6792d1fd4b0b913cf722ef75',\n      email: 'admin@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:06:33.697Z',\n    updatedAt: '2023-06-15T09:06:33.697Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad4a6dafdb9754f40b850',\n    name: 'Update a Job',\n    apiPath: '/api/v1/jobs/:id',\n    method: 'PATCH',\n    module: 'JOBS',\n    createdBy: {\n      _id: '6792d1fd4b0b913cf722ef75',\n      email: 'admin@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:06:46.085Z',\n    updatedAt: '2023-06-15T09:06:46.085Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad4ccdafdb9754f40b859',\n    name: 'Get Job with paginate',\n    apiPath: '/api/v1/jobs',\n    method: 'GET',\n    module: 'JOBS',\n    createdBy: {\n      _id: '6792d1fd4b0b913cf722ef75',\n      email: 'admin@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:07:24.175Z',\n    updatedAt: '2023-06-15T09:07:24.175Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad4d9dafdb9754f40b85e',\n    name: 'Delete a Job',\n    apiPath: '/api/v1/jobs/:id',\n    method: 'DELETE',\n    module: 'JOBS',\n    createdBy: {\n      _id: '6792d1fd4b0b913cf722ef75',\n      email: 'admin@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:07:37.896Z',\n    updatedAt: '2023-06-15T09:07:37.896Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad4fedafdb9754f40b863',\n    name: 'Create a Resume',\n    apiPath: '/api/v1/resumes',\n    method: 'POST',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '6792d1fd4b0b913cf722ef75',\n      email: 'admin@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:08:14.659Z',\n    updatedAt: '2023-06-15T09:08:14.659Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad511dafdb9754f40b868',\n    name: 'Fetch resume with paginate',\n    apiPath: '/api/v1/resumes',\n    method: 'GET',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '6792d1fd4b0b913cf722ef75',\n      email: 'admin@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:08:33.395Z',\n    updatedAt: '2023-06-15T09:08:33.395Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad522dafdb9754f40b86d',\n    name: 'Get resume by id',\n    apiPath: '/api/v1/resumes/:id',\n    method: 'GET',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '6792d1fd4b0b913cf722ef75',\n      email: 'admin@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:08:50.801Z',\n    updatedAt: '2023-06-15T09:08:50.801Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad53bdafdb9754f40b872',\n    name: 'Delete a resume',\n    apiPath: '/api/v1/resumes/:id',\n    method: 'DELETE',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '6792d1fd4b0b913cf722ef75',\n      email: 'admin@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:09:15.785Z',\n    updatedAt: '2023-06-15T09:09:15.785Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad555dafdb9754f40b877',\n    name: 'Update resume status',\n    apiPath: '/api/v1/resumes/:id',\n    method: 'PATCH',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '6792d1fd4b0b913cf722ef75',\n      email: 'admin@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:09:41.694Z',\n    updatedAt: '2023-06-15T09:09:41.694Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad56ddafdb9754f40b87c',\n    name: 'Fetch resumes by user',\n    apiPath: '/api/v1/resumes/by-user',\n    method: 'POST',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '6792d1fd4b0b913cf722ef75',\n      email: 'admin@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:10:05.961Z',\n    updatedAt: '2023-06-15T09:10:05.961Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad59adafdb9754f40b881',\n    name: 'Create a permission',\n    apiPath: '/api/v1/permissions',\n    method: 'POST',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '6792d1fd4b0b913cf722ef75',\n      email: 'admin@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:10:50.946Z',\n    updatedAt: '2023-06-15T09:10:50.946Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad5aedafdb9754f40b886',\n    name: 'Fetch Permission with paginate',\n    apiPath: '/api/v1/permissions',\n    method: 'GET',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '6792d1fd4b0b913cf722ef75',\n      email: 'admin@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:11:10.914Z',\n    updatedAt: '2023-06-15T09:11:10.914Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad5c5dafdb9754f40b88b',\n    name: 'Fetch permission by id',\n    apiPath: '/api/v1/permissions/:id',\n    method: 'GET',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '6792d1fd4b0b913cf722ef75',\n      email: 'admin@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:11:33.234Z',\n    updatedAt: '2023-06-15T09:11:33.234Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad5d4dafdb9754f40b890',\n    name: 'Update a permission',\n    apiPath: '/api/v1/permissions/:id',\n    method: 'PATCH',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '6792d1fd4b0b913cf722ef75',\n      email: 'admin@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:11:48.081Z',\n    updatedAt: '2023-06-15T09:11:48.081Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad5ebdafdb9754f40b895',\n    name: 'Delete a permission',\n    apiPath: '/api/v1/permissions/:id',\n    method: 'DELETE',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '6792d1fd4b0b913cf722ef75',\n      email: 'admin@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:12:11.323Z',\n    updatedAt: '2023-06-15T09:12:11.323Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad613dafdb9754f40b89a',\n    name: 'Create Role',\n    apiPath: '/api/v1/roles',\n    method: 'POST',\n    module: 'ROLES',\n    createdBy: {\n      _id: '6792d1fd4b0b913cf722ef75',\n      email: 'admin@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:12:51.974Z',\n    updatedAt: '2023-06-15T09:12:51.974Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad622dafdb9754f40b89f',\n    name: 'Fetch roles with paginate',\n    apiPath: '/api/v1/roles',\n    method: 'GET',\n    module: 'ROLES',\n    createdBy: {\n      _id: '6792d1fd4b0b913cf722ef75',\n      email: 'admin@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:13:06.618Z',\n    updatedAt: '2023-06-15T09:13:06.618Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad630dafdb9754f40b8a6',\n    name: 'Fetch role by id',\n    apiPath: '/api/v1/roles/:id',\n    method: 'GET',\n    module: 'ROLES',\n    createdBy: {\n      _id: '6792d1fd4b0b913cf722ef75',\n      email: 'admin@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:13:20.853Z',\n    updatedAt: '2023-06-15T09:13:20.853Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad640dafdb9754f40b8ab',\n    name: 'Update Role',\n    apiPath: '/api/v1/roles/:id',\n    method: 'PATCH',\n    module: 'ROLES',\n    createdBy: {\n      _id: '6792d1fd4b0b913cf722ef75',\n      email: 'admin@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:13:36.836Z',\n    updatedAt: '2023-06-15T09:13:36.836Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad650dafdb9754f40b8b0',\n    name: 'Delete a Role',\n    apiPath: '/api/v1/roles/:id',\n    method: 'DELETE',\n    module: 'ROLES',\n    createdBy: {\n      _id: '6792d1fd4b0b913cf722ef75',\n      email: 'admin@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:13:52.798Z',\n    updatedAt: '2023-06-15T09:13:52.798Z',\n    __v: 0,\n  },\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'NORMAL_USER'\n                    \n                \n\n\n        \n    \n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async () => {\n  const app = await NestFactory.create(AppModule);\n  const configService = app.get(ConfigService);\n\n  const reflector = app.get(Reflector);\n  app.useGlobalGuards(new JwtAuthGuard(reflector));\n  app.useGlobalInterceptors(new TransformInterceptor(reflector));\n\n  app.useStaticAssets(join(__dirname, '..', 'public'), { prefix: '/public' });\n  app.setBaseViewsDir(join(__dirname, '..', 'views'));\n  app.setViewEngine('ejs');\n  app.useGlobalPipes(\n    new ValidationPipe({\n      whitelist: true,\n    }),\n  );\n\n  //config cookie\n  app.use(cookieParser());\n\n  //config cors\n  app.enableCors({\n    origin: true,\n    methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',\n    preflightContinue: false,\n    credentials: true,\n  });\n\n  //config version\n  app.setGlobalPrefix('api');\n  app.enableVersioning({\n    type: VersioningType.URI,\n    defaultVersion: ['1'],\n  });\n\n  //config helmet\n  app.use(helmet());\n\n  const port = configService.get('PORT');\n  await app.listen(port);\n  console.log(`Server is running on: http://localhost:${port}/api/v1`);\n}\n                    \n                \n\n\n        \n    \n\n    src/companies/schemas/company.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CompanySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Company)\n                    \n                \n\n\n        \n    \n\n    src/decorator/customize.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_PERMISSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"isPublicPermission\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RESPONSE_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'response_message'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ResponseMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (message: string) =>\n  SetMetadata(RESPONSE_MESSAGE, message)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SkipCheckPermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_PERMISSION, true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request.user;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/jobs/schemas/job.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        JobSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Job)\n                    \n                \n\n\n        \n    \n\n    src/permissions/schemas/permission.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PermissionSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Permission)\n                    \n                \n\n\n        \n    \n\n    src/resumes/schemas/resume.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ResumeSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Resume)\n                    \n                \n\n\n        \n    \n\n    src/roles/schemas/role.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RoleSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Role)\n                    \n                \n\n\n        \n    \n\n    src/subscribers/schemas/subscriber.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SubscriberSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Subscriber)\n                    \n                \n\n\n        \n    \n\n    src/users/schemas/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
